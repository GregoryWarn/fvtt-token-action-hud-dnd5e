{"version":3,"file":"token-action-hud-dnd5e.min.js","sources":["constants.js","utils.js","action-handler.js","defaults.js","magic-items-extender.js","roll-handler.js","settings.js","system-manager.js","init.js"],"sourcesContent":["/**\r\n * Module-based constants\r\n */\r\nexport const MODULE = {\r\n  ID: \"token-action-hud-dnd5e\"\r\n};\r\n\r\n/**\r\n * Core module\r\n */\r\nexport const CORE_MODULE = {\r\n  ID: \"token-action-hud-core\"\r\n};\r\n\r\n/**\r\n * Core module version required by the system module\r\n */\r\nexport const REQUIRED_CORE_MODULE_VERSION = \"1.5\";\r\n\r\n/**\r\n * Action type\r\n */\r\nexport const ACTION_TYPE = {\r\n  ability: \"DND5E.Ability\",\r\n  check: \"tokenActionHud.dnd5e.check\",\r\n  condition: \"tokenActionHud.dnd5e.condition\",\r\n  counter: \"tokenActionHud.dnd5e.counter\",\r\n  effect: \"DND5E.Effect\",\r\n  exhaustion: \"DND5E.Exhaustion\",\r\n  feature: \"TYPES.Item.feat\",\r\n  item: \"tokenActionHud.dnd5e.item\",\r\n  save: \"DND5E.SAVE.Title.one\",\r\n  skill: \"tokenActionHud.dnd5e.skill\",\r\n  spell: \"TYPES.Item.spell\",\r\n  utility: \"DND5E.ActionUtil\"\r\n};\r\n\r\n/**\r\n * Activation types\r\n */\r\nexport const ACTIVATION_TYPE = {\r\n  action: { group: \"actions\" },\r\n  bonus: { group: \"bonus-actions\", icon: \"fas fa-plus\" },\r\n  crew: { group: \"crew-actions\", icon: \"fas fa-users\" },\r\n  day: { icon: \"fas fa-hourglass-end\" },\r\n  hour: { icon: \"fas fa-hourglass-half\" },\r\n  lair: { group: \"lair-actions\", icon: \"fas fa-home\" },\r\n  minute: { icon: \"fas fa-hourglass-start\" },\r\n  legendary: { group: \"legendary-actions\", icon: \"fas fas fa-dragon\" },\r\n  reaction: { group: \"reactions\", icon: \"fas fa-bolt\" },\r\n  reactiondamage: { group: \"reactions\", icon: \"fas fa-bolt\" },\r\n  reactionmanual: { group: \"reactions\", icon: \"fas fa-bolt\" },\r\n  special: { group: \"special-actions\", icon: \"fas fa-star\" },\r\n  other: { group: \"other-actions\" }\r\n};\r\n\r\n/**\r\n * Concentration icon\r\n */\r\nexport const CONCENTRATION_ICON = \"systems/dnd5e/icons/svg/statuses/concentrating.svg\";\r\n\r\nexport const CUSTOM_DND5E = {\r\n  ID: \"custom-dnd5e\",\r\n  COUNTERS: {\r\n    character: \"character-counters\",\r\n    group: \"group-counters\",\r\n    npc: \"npc-counters\"\r\n  }\r\n};\r\n\r\n/**\r\n * Feature Group IDs\r\n */\r\nexport const FEATURE_GROUP_IDS = [\r\n  \"activeFeatures\",\r\n  \"passiveFeatures\",\r\n  \"backgroundFeatures\",\r\n  \"classFeatures\",\r\n  \"feats\",\r\n  \"monsterFeatures\",\r\n  \"raceFeatures\",\r\n  \"artificerInfusions\",\r\n  \"channelDivinity\",\r\n  \"defensiveTactics\",\r\n  \"eldritchInvocations\",\r\n  \"elementalDisciplines\",\r\n  \"fightingStyles\",\r\n  \"huntersPrey\",\r\n  \"kiAbilities\",\r\n  \"maneuvers\",\r\n  \"metamagicOptions\",\r\n  \"multiattacks\",\r\n  \"pactBoons\",\r\n  \"psionicPowers\",\r\n  \"runes\",\r\n  \"superiorHuntersDefense\"\r\n];\r\n\r\n/**\r\n * Groups\r\n */\r\nexport const GROUP = {\r\n  _1stLevelSpells: { id: \"1st-level-spells\", name: \"tokenActionHud.dnd5e.1stLevelSpells\", spellMode: 1, type: \"system\" },\r\n  _2ndLevelSpells: { id: \"2nd-level-spells\", name: \"tokenActionHud.dnd5e.2ndLevelSpells\", spellMode: 2, type: \"system\" },\r\n  _3rdLevelSpells: { id: \"3rd-level-spells\", name: \"tokenActionHud.dnd5e.3rdLevelSpells\", spellMode: 3, type: \"system\" },\r\n  _4thLevelSpells: { id: \"4th-level-spells\", name: \"tokenActionHud.dnd5e.4thLevelSpells\", spellMode: 4, type: \"system\" },\r\n  _5thLevelSpells: { id: \"5th-level-spells\", name: \"tokenActionHud.dnd5e.5thLevelSpells\", spellMode: 5, type: \"system\" },\r\n  _6thLevelSpells: { id: \"6th-level-spells\", name: \"tokenActionHud.dnd5e.6thLevelSpells\", spellMode: 6, type: \"system\" },\r\n  _7thLevelSpells: { id: \"7th-level-spells\", name: \"tokenActionHud.dnd5e.7thLevelSpells\", spellMode: 7, type: \"system\" },\r\n  _8thLevelSpells: { id: \"8th-level-spells\", name: \"tokenActionHud.dnd5e.8thLevelSpells\", spellMode: 8, type: \"system\" },\r\n  _9thLevelSpells: { id: \"9th-level-spells\", name: \"tokenActionHud.dnd5e.9thLevelSpells\", spellMode: 9, type: \"system\" },\r\n  abilities: { id: \"abilities\", name: \"tokenActionHud.dnd5e.abilities\", type: \"system\" },\r\n  actions: { id: \"actions\", name: \"DND5E.ActionPl\", type: \"system\" },\r\n  activeFeatures: { id: \"active-features\", name: \"tokenActionHud.dnd5e.activeFeatures\", type: \"system\" },\r\n  artificerInfusions: { id: \"artificer-infusions\", name: \"tokenActionHud.dnd5e.artificerInfusions\", type: \"system\" },\r\n  atWillSpells: { id: \"at-will-spells\", name: \"tokenActionHud.dnd5e.atWillSpells\", spellMode: \"atwill\", type: \"system\" },\r\n  backgroundFeatures: { id: \"background-features\", name: \"tokenActionHud.dnd5e.backgroundFeatures\", type: \"system\" },\r\n  bonusActions: { id: \"bonus-actions\", name: \"tokenActionHud.dnd5e.bonusActions\", type: \"system\" },\r\n  cantrips: { id: \"cantrips\", name: \"tokenActionHud.dnd5e.cantrips\", spellMode: 0, type: \"system\" },\r\n  channelDivinity: { id: \"channel-divinity\", name: \"tokenActionHud.dnd5e.channelDivinity\", type: \"system\" },\r\n  checks: { id: \"checks\", name: \"tokenActionHud.dnd5e.checks\", type: \"system\" },\r\n  classFeatures: { id: \"class-features\", name: \"tokenActionHud.dnd5e.classFeatures\", type: \"system\" },\r\n  combat: { id: \"combat\", name: \"tokenActionHud.combat\", type: \"system\" },\r\n  conditions: { id: \"conditions\", name: \"tokenActionHud.dnd5e.conditions\", type: \"system\" },\r\n  consumables: { id: \"consumables\", name: \"TYPES.Item.consumablePl\", type: \"system\" },\r\n  containers: { id: \"containers\", name: \"TYPES.Item.containerPl\", type: \"system\" },\r\n  counters: { id: \"counters\", name: \"tokenActionHud.dnd5e.counters\", type: \"system\" },\r\n  crewActions: { id: \"crew-actions\", name: \"tokenActionHud.dnd5e.crewActions\", type: \"system\" },\r\n  defensiveTactics: { id: \"defensive-tactics\", name: \"tokenActionHud.dnd5e.defensiveTactics\", type: \"system\" },\r\n  eldritchInvocations: { id: \"eldritch-invocations\", name: \"tokenActionHud.dnd5e.eldritchInvocations\", type: \"system\" },\r\n  elementalDisciplines: { id: \"elemental-disciplines\", name: \"tokenActionHud.dnd5e.elementalDisciplines\", type: \"system\" },\r\n  equipment: { id: \"equipment\", name: \"TYPES.Item.equipmentPl\", type: \"system\" },\r\n  equipped: { id: \"equipped\", name: \"DND5E.Equipped\", type: \"system\" },\r\n  exhaustion: { id: \"exhaustion\", name: \"DND5E.Exhaustion\", type: \"system\" },\r\n  feats: { id: \"feats\", name: \"tokenActionHud.dnd5e.feats\", type: \"system\" },\r\n  fightingStyles: { id: \"fighting-styles\", name: \"tokenActionHud.dnd5e.fightingStyles\", type: \"system\" },\r\n  huntersPrey: { id: \"hunters-prey\", name: \"tokenActionHud.dnd5e.huntersPrey\", type: \"system\" },\r\n  innateSpells: { id: \"innate-spells\", name: \"tokenActionHud.dnd5e.innateSpells\", spellMode: \"innate\", type: \"system\" },\r\n  kiAbilities: { id: \"ki-abilities\", name: \"tokenActionHud.dnd5e.kiAbilities\", type: \"system\" },\r\n  lairActions: { id: \"lair-actions\", name: \"tokenActionHud.dnd5e.lairActions\", type: \"system\" },\r\n  legendaryActions: { id: \"legendary-actions\", name: \"tokenActionHud.dnd5e.legendaryActions\", type: \"system\" },\r\n  loot: { id: \"loot\", name: \"TYPES.Item.lootPl\", type: \"system\" },\r\n  maneuvers: { id: \"maneuvers\", name: \"tokenActionHud.dnd5e.maneuvers\", type: \"system\" },\r\n  metamagicOptions: { id: \"metamagic-options\", name: \"tokenActionHud.dnd5e.metamagicOptions\", type: \"system\" },\r\n  monsterFeatures: { id: \"monster-features\", name: \"tokenActionHud.dnd5e.monsterFeatures\", type: \"system\" },\r\n  multiattacks: { id: \"multiattacks\", name: \"tokenActionHud.dnd5e.multiattacks\", type: \"system\" },\r\n  otherActions: { id: \"other-actions\", name: \"tokenActionHud.dnd5e.otherActions\", type: \"system\" },\r\n  pactBoons: { id: \"pact-boons\", name: \"tokenActionHud.dnd5e.pactBoons\", type: \"system\" },\r\n  pactSpells: { id: \"pact-spells\", name: \"tokenActionHud.dnd5e.pactSpells\", spellMode: \"pact\", type: \"system\" },\r\n  passiveEffects: { id: \"passive-effects\", name: \"DND5E.EffectPassive\", type: \"system\" },\r\n  passiveFeatures: { id: \"passive-features\", name: \"tokenActionHud.dnd5e.passiveFeatures\", type: \"system\" },\r\n  psionicPowers: { id: \"psionic-powers\", name: \"tokenActionHud.dnd5e.psionicPowers\", type: \"system\" },\r\n  raceFeatures: { id: \"race-features\", name: \"tokenActionHud.dnd5e.raceFeatures\", type: \"system\" },\r\n  reactions: { id: \"reactions\", name: \"DND5E.ReactionPl\", type: \"system\" },\r\n  rests: { id: \"rests\", name: \"tokenActionHud.dnd5e.rests\", type: \"system\" },\r\n  runes: { id: \"runes\", name: \"tokenActionHud.dnd5e.runes\", type: \"system\" },\r\n  saves: { id: \"saves\", name: \"DND5E.ClassSaves\", type: \"system\" },\r\n  skills: { id: \"skills\", name: \"tokenActionHud.dnd5e.skills\", type: \"system\" },\r\n  superiorHuntersDefense: { id: \"superior-hunters-defense\", name: \"tokenActionHud.dnd5e.superiorHuntersDefense\", type: \"system\" },\r\n  temporaryEffects: { id: \"temporary-effects\", name: \"DND5E.EffectTemporary\", type: \"system\" },\r\n  token: { id: \"token\", name: \"tokenActionHud.token\", type: \"system\" },\r\n  tools: { id: \"tools\", name: \"TYPES.Item.toolPl\", type: \"system\" },\r\n  unequipped: { id: \"unequipped\", name: \"DND5E.Unequipped\", type: \"system\" },\r\n  utility: { id: \"utility\", name: \"tokenActionHud.utility\", type: \"system\" },\r\n  weapons: { id: \"weapons\", name: \"TYPES.Item.weaponPl\", type: \"system\" }\r\n};\r\n\r\n/**\r\n * Prepared icon\r\n */\r\nexport const PREPARED_ICON = \"fas fa-sun\";\r\n\r\n/**\r\n * Proficiency level icons\r\n */\r\nexport const PROFICIENCY_LEVEL_ICON = {\r\n  0.5: \"fas fa-adjust\",\r\n  1: \"fas fa-check\",\r\n  2: \"fas fa-check-double\"\r\n};\r\n\r\n/**\r\n * Rarity\r\n */\r\nexport const RARITY = {\r\n  common: \"tokenActionHud.dnd5e.common\",\r\n  uncommon: \"tokenActionHud.dnd5e.uncommon\",\r\n  rare: \"tokenActionHud.dnd5e.rare\",\r\n  veryRare: \"tokenActionHud.dnd5e.veryRare\",\r\n  legendary: \"tokenActionHud.dnd5e.legendary\",\r\n  artifact: \"tokenActionHud.dnd5e.artifact\"\r\n};\r\n\r\n/**\r\n * Ritual icon\r\n */\r\nexport const RITUAL_ICON = \"fas fa-circle-r\";\r\n\r\n/**\r\n * Spell Group IDs\r\n */\r\nexport const SPELL_GROUP_IDS = [\r\n  \"cantrips\",\r\n  \"_1stLevelSpells\",\r\n  \"_2ndLevelSpells\",\r\n  \"_3rdLevelSpells\",\r\n  \"_4thLevelSpells\",\r\n  \"_5thLevelSpells\",\r\n  \"_6thLevelSpells\",\r\n  \"_7thLevelSpells\",\r\n  \"_8thLevelSpells\",\r\n  \"_9thLevelSpells\",\r\n  \"atWillSpells\",\r\n  \"innateSpells\",\r\n  \"pactSpells\"\r\n];\r\n","import { MODULE } from './constants.js'\r\n\r\nexport let Utils = null\r\n\r\nHooks.once('tokenActionHudCoreApiReady', async (coreModule) => {\r\n    Utils = class Utils {\r\n    /**\r\n     * Get setting value\r\n     * @param {string} key The key\r\n     * @param {string=null} defaultValue The default value\r\n     * @returns The setting value\r\n     */\r\n        static getSetting (key, defaultValue = null) {\r\n            let value = defaultValue ?? null\r\n            try {\r\n                value = game.settings.get(MODULE.ID, key)\r\n            } catch {\r\n                coreModule.api.Logger.debug(`Setting '${key}' not found`)\r\n            }\r\n            return value\r\n        }\r\n\r\n        /**\r\n     * Set setting value\r\n     * @param {string} key The key\r\n     * @param {string} value The value\r\n     */\r\n        static async setSetting (key, value) {\r\n            try {\r\n                value = await game.settings.set(MODULE.ID, key, value)\r\n                coreModule.api.Logger.debug(`Setting '${key}' set to '${value}'`)\r\n            } catch {\r\n                coreModule.api.Logger.debug(`Setting '${key}' not found`)\r\n            }\r\n        }\r\n    }\r\n})\r\n","// System Module Imports\r\nimport {\r\n  ACTIVATION_TYPE, ACTION_TYPE, CONCENTRATION_ICON, CUSTOM_DND5E, FEATURE_GROUP_IDS,\r\n  GROUP, PREPARED_ICON, PROFICIENCY_LEVEL_ICON, RARITY, SPELL_GROUP_IDS\r\n} from \"./constants.js\";\r\nimport { Utils } from \"./utils.js\";\r\n\r\nexport let ActionHandler = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  ActionHandler = class ActionHandler extends coreModule.api.ActionHandler {\r\n    // Initialize action variables\r\n    featureActions = null;\r\n\r\n    inventoryActions = null;\r\n\r\n    spellActions = null;\r\n\r\n    /**\r\n     * Build System Actions\r\n     * @override\r\n     * @param {Array} groupIds\r\n     * @returns {object}\r\n     */\r\n    async buildSystemActions(groupIds) {\r\n      // Set actor and token variables\r\n      this.actors = (!this.actor) ? this.#getValidActors() : [this.actor];\r\n      this.tokens = (!this.token) ? this.#getValidTokens() : [this.token];\r\n\r\n      // Set items variable\r\n      if (this.actor) {\r\n        this.items = coreModule.api.Utils.sortItemsByName(this.#discardSlowItems(this.actor.items));\r\n      }\r\n\r\n      // Set settings variables\r\n      this.abbreviateSkills = Utils.getSetting(\"abbreviateSkills\");\r\n      this.displaySpellInfo = Utils.getSetting(\"displaySpellInfo\");\r\n      this.showItemsWithoutActivationCosts = Utils.getSetting(\"showItemsWithoutActivationCosts\");\r\n      this.showUnchargedItems = Utils.getSetting(\"showUnchargedItems\");\r\n      this.showUnequippedItems = Utils.getSetting(\"showUnequippedItems\");\r\n      if (this.actor?.type === \"npc\" && !this.showUnequippedItems) {\r\n        this.showUnequippedItems = Utils.getSetting(\"showUnequippedItemsNpcs\");\r\n      }\r\n      this.showUnpreparedSpells = Utils.getSetting(\"showUnpreparedSpells\");\r\n\r\n      this.activationgroupIds = [\r\n        \"actions\",\r\n        \"bonus-actions\",\r\n        \"crew-actions\",\r\n        \"lair-actions\",\r\n        \"legendary-actions\",\r\n        \"reactions\",\r\n        \"other-actions\"\r\n      ];\r\n\r\n      if (this.actor?.type === \"character\" || this.actor?.type === \"npc\") {\r\n        this.inventorygroupIds = [\r\n          \"equipped\",\r\n          \"consumables\",\r\n          \"containers\",\r\n          \"equipment\",\r\n          \"loot\",\r\n          \"tools\",\r\n          \"weapons\",\r\n          \"unequipped\"\r\n        ];\r\n\r\n        await this.#buildCharacterActions();\r\n      } else if (this.actor?.type === \"vehicle\") {\r\n        this.inventorygroupIds = [\r\n          \"consumables\",\r\n          \"equipment\",\r\n          \"tools\",\r\n          \"weapons\"\r\n        ];\r\n\r\n        await this.#buildVehicleActions();\r\n      } else if (!this.actor) {\r\n        await this.#buildMultipleTokenActions();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build character actions\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    async #buildCharacterActions() {\r\n      await Promise.all([\r\n        this.#buildConditions(),\r\n        this.#buildEffects(),\r\n        this.#buildFeatures(),\r\n        this.#buildInventory(),\r\n        this.#buildSpells()\r\n      ]);\r\n      this.#buildAbilities(\"ability\", \"abilities\");\r\n      this.#buildAbilities(\"check\", \"checks\");\r\n      this.#buildAbilities(\"save\", \"saves\");\r\n      this.#buildCombat();\r\n      this.#buildCounters();\r\n      this.#buildExhaustion();\r\n      this.#buildRests();\r\n      this.#buildSkills();\r\n      this.#buildUtility();\r\n    }\r\n\r\n    /**\r\n     * Build vehicle actions\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    async #buildVehicleActions() {\r\n      await Promise.all([\r\n        this.#buildConditions(),\r\n        this.#buildEffects(),\r\n        this.#buildFeatures(),\r\n        this.#buildInventory()\r\n      ]);\r\n      this.#buildAbilities(\"ability\", \"abilities\");\r\n      this.#buildAbilities(\"check\", \"checks\");\r\n      this.#buildAbilities(\"save\", \"saves\");\r\n      this.#buildCombat();\r\n      this.#buildUtility();\r\n    }\r\n\r\n    /**\r\n     * Build multiple token actions\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    async #buildMultipleTokenActions() {\r\n      this.#buildAbilities(\"ability\", \"abilities\");\r\n      this.#buildAbilities(\"check\", \"checks\");\r\n      this.#buildAbilities(\"save\", \"saves\");\r\n      this.#buildCombat();\r\n      await this.#buildConditions();\r\n      this.#buildRests();\r\n      this.#buildSkills();\r\n      this.#buildUtility();\r\n    }\r\n\r\n    /**\r\n     * Build abilities\r\n     * @private\r\n     * @param {string} actionType\r\n     * @param {string} groupId\r\n     */\r\n    #buildAbilities(actionType, groupId) {\r\n      // Get abilities and exit if none exist\r\n      const abilities = this.actor?.system.abilities || CONFIG.DND5E.abilities;\r\n      if (abilities.length === 0) return;\r\n\r\n      // Get actions\r\n      const actions = Object.entries(abilities)\r\n        .filter(ability => abilities[ability[0]].value !== 0)\r\n        .map(([abilityId, ability]) => {\r\n          const name = CONFIG.DND5E.abilities[abilityId].label;\r\n          const mod = (groupId === \"saves\") ? ability?.save : ability?.mod;\r\n          return {\r\n            id: `${actionType}-${abilityId}`,\r\n            name: (this.abbreviateSkills) ? coreModule.api.Utils.capitalize(abilityId) : name,\r\n            encodedValue: [actionType, abilityId].join(this.delimiter),\r\n            icon1: (groupId !== \"checks\") ? this.#getProficiencyIcon(abilities[abilityId].proficient) : \"\",\r\n            info1: (this.actor) ? { text: coreModule.api.Utils.getModifier(mod) } : null,\r\n            info2: (this.actor && groupId === \"abilities\") ? { text: `(${coreModule.api.Utils.getModifier(ability?.save)})` } : null,\r\n            listName: this.#getListName(actionType, name)\r\n          };\r\n        });\r\n\r\n      // Add actions to action list\r\n      this.addActions(actions, { id: groupId });\r\n    }\r\n\r\n    /**\r\n     * Build activations\r\n     * @public\r\n     * @param {object} data  groupData, actionData, actionType\r\n     */\r\n    async buildActivations(data) {\r\n      const { groupData, actionData, actionType = \"item\" } = data;\r\n\r\n      // Create map of items according to activation type\r\n      const activationItems = new Map();\r\n\r\n      // Loop items and add to activationItems\r\n      for (const [key, value] of actionData) {\r\n        const activationType = value.system?.activities?.contents[0]?.activation?.type;\r\n        const groupId = ACTIVATION_TYPE[activationType]?.group ?? \"other\";\r\n        if (!activationItems.has(groupId)) activationItems.set(groupId, new Map());\r\n        activationItems.get(groupId).set(key, value);\r\n      }\r\n\r\n      // Loop through action group ids\r\n      for (const value of Object.values(ACTIVATION_TYPE)) {\r\n        const group = value.group;\r\n\r\n        // Skip if no items exist\r\n        if (!activationItems.has(group)) continue;\r\n\r\n        // Clone and add to group data\r\n        const groupDataClone = { ...groupData, id: `${group}+${groupData.id}`, type: \"system-derived\" };\r\n\r\n        // Set Equipped and Unequipped groups to not selected by default\r\n        if ([\"equipped\", \"unequipped\"].includes(groupData.id)) { groupDataClone.defaultSelected = false; }\r\n\r\n        // Create parent group data\r\n        const parentgroupData = { id: group, type: \"system\" };\r\n\r\n        // Add group to HUD\r\n        await this.addGroup(groupDataClone, parentgroupData);\r\n\r\n        // Add spell slot info to group\r\n        if (actionType === \"spell\") { this.addGroupInfo(groupDataClone); }\r\n\r\n        // Build actions\r\n        await this.buildActions({\r\n          groupData: groupDataClone,\r\n          actionData: activationItems.get(group),\r\n          actionType\r\n        });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build combat\r\n     * @private\r\n     */\r\n    #buildCombat() {\r\n      // If token's turn, include endTurn\r\n      const combatType = {\r\n        initiative: \"tokenActionHud.dnd5e.rollInitiative\",\r\n        ...(game.combat?.current?.tokenId !== this.token?.id && { endTurn: \"tokenActionHud.endTurn\" })\r\n      };\r\n\r\n      const tokens = coreModule.api.Utils.getControlledTokens();\r\n      const tokenIds = tokens?.map(token => token.id);\r\n      const combatants = (game.combat)\r\n        ? game.combat.combatants.filter(combatant => tokenIds.includes(combatant.tokenId))\r\n        : [];\r\n\r\n      const getInfo1 = id => {\r\n        if (id === \"initiative\" && combatants.length === 1) {\r\n          const currentInitiative = combatants[0].initiative;\r\n          return { class: \"tah-spotlight\", text: currentInitiative };\r\n        }\r\n        return {};\r\n      };\r\n\r\n      const getActive = () => { return combatants.length > 0 && (combatants.every(combatant => combatant?.initiative)) ? \" active\" : \"\";};\r\n\r\n      // Get actions\r\n      const actionType = \"utility\";\r\n      const actions = Object.entries(combatType).map(([id, name]) => {\r\n        return {\r\n          id,\r\n          name: game.i18n.localize(name),\r\n          encodedValue: [actionType, id].join(this.delimiter),\r\n          info1: getInfo1(id),\r\n          cssClass: (id === \"initiative\" ) ? `toggle${getActive()}` : \"\",\r\n          listName: this.#getListName(actionType, name)\r\n        };\r\n      });\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"combat\" });\r\n    }\r\n\r\n    /**\r\n     * Build conditions\r\n     * @private\r\n     */\r\n    async #buildConditions() {\r\n      if (this.tokens?.length === 0) return;\r\n\r\n      // Get conditions and exit if none exist\r\n      const conditions = CONFIG.statusEffects.filter(condition => condition.id !== \"\");\r\n      if (conditions.length === 0) return;\r\n\r\n      // Get actions\r\n      const actionType = \"condition\";\r\n      const actions = await Promise.all(conditions.map(async condition => {\r\n        const hasCondition = this.actors.every(actor => {\r\n          return actor.effects.some(effect => effect.statuses.some(status => status === condition.id)\r\n          && !effect?.disabled);\r\n        });\r\n        const name = game.i18n.localize(condition.label) ?? condition.name;\r\n        return {\r\n          id: condition.id,\r\n          name,\r\n          encodedValue: [actionType, condition.id].join(this.delimiter),\r\n          img: coreModule.api.Utils.getImage(condition),\r\n          cssClass: `toggle${(hasCondition) ? \" active\" : \"\"}`,\r\n          listName: this.#getListName(actionType, name),\r\n          tooltip: await this.#getTooltip(await this.#getConditionTooltipData(condition.id, condition.name))\r\n        };\r\n      }));\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"conditions\" });\r\n    }\r\n\r\n    /**\r\n     * Build counters\r\n     * @private\r\n     */\r\n    async #buildCounters() {\r\n      if (!CUSTOM_DND5E.COUNTERS[this.actor?.type]) return;\r\n\r\n      const actionType = \"counter\";\r\n\r\n      let counters = game.settings.get(CUSTOM_DND5E.ID, CUSTOM_DND5E.COUNTERS[this.actor?.type]) ?? {};\r\n\r\n      if (coreModule.api.Utils.isModuleActive(CUSTOM_DND5E.ID) && Object.keys(counters).length) {\r\n        counters = Object.entries(counters)\r\n          .filter(([_, value]) => value.visible)\r\n          .map(([key, value]) => {\r\n            value.key = key;\r\n            return value;\r\n          });\r\n      } else {\r\n        counters = [\r\n          {\r\n            name: game.i18n.localize(\"DND5E.DeathSave\"),\r\n            type: \"successFailure\",\r\n            system: true,\r\n            visible: true,\r\n            key: \"death-saves\"\r\n          },\r\n          {\r\n            name: game.i18n.localize(\"DND5E.Exhaustion\"),\r\n            type: \"number\",\r\n            system: true,\r\n            visible: true,\r\n            key: \"exhaustion\"\r\n          },\r\n          {\r\n            name: game.i18n.localize(\"DND5E.Inspiration\"),\r\n            type: \"checkbox\",\r\n            system: true,\r\n            visible: true,\r\n            key: \"inspiration\"\r\n          }\r\n        ];\r\n      }\r\n\r\n      // Get actions\r\n      const actions = counters.map(counter => {\r\n        let active = \"\";\r\n        let cssClass = \"\";\r\n        let img = \"\";\r\n        let info1 = \"\";\r\n        if (counter.system) {\r\n          switch (counter.key) {\r\n            case \"exhaustion\":\r\n              active = (this.actor.system.attributes.exhaustion > 0) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              img = coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/exhaustion.svg\");\r\n              info1 = { text: this.actor.system.attributes.exhaustion };\r\n              break;\r\n            case \"death-saves\":\r\n              img = coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/death-saves.svg\");\r\n              info1 = { text: `${this.actor.system.attributes.death.success}/${this.actor.system.attributes.death.failure}` };\r\n              break;\r\n            case \"inspiration\":\r\n              active = (this.actor.system.attributes.inspiration) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              img = coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/inspiration.svg\");\r\n              break;\r\n          }\r\n        } else {\r\n          const value = this.actor.getFlag(CUSTOM_DND5E.ID, counter.key);\r\n          switch (counter.type) {\r\n            case \"checkbox\":\r\n              active = (value) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              break;\r\n            case \"fraction\":\r\n              active = (value.value > 0) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              info1 = { text: `${value.value ?? 0}/${value.max ?? 0}` };\r\n              break;\r\n            case \"number\":\r\n              active = (value > 0) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              info1 = { text: value };\r\n              break;\r\n            case \"successFailure\":\r\n              info1 = { text: `${value?.success ?? 0}/${value?.failure ?? 0}` };\r\n              break;\r\n          }\r\n        }\r\n\r\n        return {\r\n          id: counter.key,\r\n          name: counter.label,\r\n          listName: this.#getListName(actionType, counter.name),\r\n          encodedValue: [actionType, (counter.system) ? counter.key : encodeURIComponent(`${counter.key}>${counter.type}`)].join(this.delimiter),\r\n          cssClass,\r\n          img,\r\n          info1\r\n        };\r\n      });\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"counters\" });\r\n    }\r\n\r\n    /**\r\n     * Build effects\r\n     * @private\r\n     */\r\n    async #buildEffects() {\r\n      const actionType = \"effect\";\r\n\r\n      // Get effects and exit if none exist\r\n      const effects = new Map(this.actor.allApplicableEffects().map(effect => [effect.id, effect]));\r\n      if (effects.size === 0) return;\r\n\r\n      // Map passive and temporary effects to new maps\r\n      const passiveEffects = new Map();\r\n      const temporaryEffects = new Map();\r\n      const conditionIds = new Set(Object.keys(CONFIG.DND5E.conditionTypes).map(key => dnd5e.utils.staticID(`dnd5e${key}`)));\r\n\r\n      // Iterate effects and add to a map based on the isTemporary value\r\n      for (const [effectId, effect] of effects.entries()) {\r\n        if (effect.isSuppressed) continue;\r\n        if (effect.parent?.system?.identified === false && !game.user.isGM) continue;\r\n        if (conditionIds.has(effect.id)) continue;\r\n\r\n        if (effect.isTemporary) { temporaryEffects.set(effectId, effect); }\r\n        else { passiveEffects.set(effectId, effect); }\r\n      }\r\n\r\n      // Build passive and temporary effects\r\n      await Promise.all([\r\n        this.buildActions({ groupData: { id: \"passive-effects\" }, actionData: passiveEffects, actionType }),\r\n        this.buildActions({ groupData: { id: \"temporary-effects\" }, actionData: temporaryEffects, actionType })\r\n      ]);\r\n    }\r\n\r\n    /**\r\n     * Build exhaustion\r\n     * @private\r\n     */\r\n    #buildExhaustion() {\r\n      // Exit if every actor is not the character type\r\n      if (!this.actors.every(actor => actor.type === \"character\")) return;\r\n\r\n      // Get actions\r\n      const actionType = \"exhaustion\";\r\n      const active = this.actor.system.attributes.exhaustion > 0 ? \" active\" : \"\";\r\n      const actions = [{\r\n        id: \"exhaustion\",\r\n        name: game.i18n.localize(\"DND5E.Exhaustion\"),\r\n        encodedValue: [actionType, \"exhaustion\"].join(this.delimiter),\r\n        cssClass: `toggle${active}`,\r\n        img: coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/exhaustion.svg\"),\r\n        info1: { text: this.actor.system.attributes.exhaustion },\r\n        listName: this.#getListName(actionType, name)\r\n      }];\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"exhaustion\" });\r\n    }\r\n\r\n    /**\r\n     * Build features\r\n     * @private\r\n     */\r\n    async #buildFeatures() {\r\n      // Filter feats from items and exit if none exist\r\n      const feats = new Map([...this.items].filter(([, value]) => value.type === \"feat\"));\r\n      if (feats.size === 0) return;\r\n\r\n      // Map active and passive features to new maps\r\n      const featuresMap = new Map([\r\n        [\"activeFeatures\", new Map()],\r\n        [\"passiveFeatures\", new Map()]\r\n      ]);\r\n\r\n      const featureType = {\r\n        background: \"backgroundFeatures\",\r\n        class: \"classFeatures\",\r\n        monster: \"monsterFeatures\",\r\n        race: \"raceFeatures\",\r\n        feats: \"feats\"\r\n      };\r\n\r\n      const classFeatureType = {\r\n        artificerInfusion: \"artificerInfusions\",\r\n        channelDivinity: \"channelDivinity\",\r\n        defensiveTactic: \"defensiveTactics\",\r\n        eldritchInvocation: \"eldritchInvocations\",\r\n        elementalDiscipline: \"elementalDisciplines\",\r\n        fightingStyle: \"fightingStyles\",\r\n        huntersPrey: \"huntersPrey\",\r\n        ki: \"kiAbilities\",\r\n        maneuver: \"maneuvers\",\r\n        metamagic: \"metamagicOptions\",\r\n        multiattack: \"multiattacks\",\r\n        pact: \"pactBoons\",\r\n        psionicPower: \"psionicPowers\",\r\n        rune: \"runes\",\r\n        superiorHuntersDefense: \"superiorHuntersDefense\"\r\n      };\r\n\r\n      for (const [key, value] of feats) {\r\n        const activationType = value.system.activities.contents[0]?.type;\r\n        const type = value.system.type.value;\r\n        const subType = value.system.type?.subtype;\r\n\r\n        if (activationType) { featuresMap.get(\"activeFeatures\").set(key, value); }\r\n        else { featuresMap.get(\"passiveFeatures\").set(key, value); }\r\n\r\n        // Map feature types\r\n        if (featureType[type]) {\r\n          if (!featuresMap.has(featureType[type])) featuresMap.set(featureType[type], new Map());\r\n          featuresMap.get(featureType[type]).set(key, value);\r\n        }\r\n\r\n        // Map class feature subtypes\r\n        if (classFeatureType[subType]) {\r\n          if (!featuresMap.has(classFeatureType[subType])) featuresMap.set(classFeatureType[subType], new Map());\r\n          featuresMap.get(classFeatureType[subType]).set(key, value);\r\n        }\r\n      }\r\n\r\n      // Loop through inventory groups ids\r\n      for (const id of FEATURE_GROUP_IDS) {\r\n        const actionData = featuresMap.get(id);\r\n        if (!actionData || actionData.size === 0) continue;\r\n\r\n        // Create group data\r\n        const groupData = {\r\n          id: GROUP[id].id,\r\n          name: game.i18n.localize(GROUP[id].name) ?? \"\"\r\n        };\r\n\r\n        // Build actions and activations\r\n        const actionType = \"feature\";\r\n        await this.buildActions({ groupData, actionData, actionType });\r\n        await this.buildActivations({ groupData, actionData, actionType });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build inventory\r\n     * @private\r\n     */\r\n    async #buildInventory() {\r\n      // Exit early if no items exist\r\n      if (this.items.size === 0) return;\r\n\r\n      // Initialize inventory map categories\r\n      const inventoryMap = new Map([\r\n        [\"equipped\", new Map()],\r\n        [\"unequipped\", new Map()],\r\n        [\"consumables\", new Map()],\r\n        [\"containers\", new Map()],\r\n        [\"equipment\", new Map()],\r\n        [\"loot\", new Map()],\r\n        [\"tools\", new Map()],\r\n        [\"weapons\", new Map()]\r\n      ]);\r\n\r\n      for (const [key, value] of this.items) {\r\n        // Set items into maps\r\n        if (value.system?.quantity > 0 && this.#isActiveItem(value)) {\r\n          if (value.system.equipped) { inventoryMap.get(\"equipped\").set(key, value); }\r\n          else { inventoryMap.get(\"unequipped\").set(key, value); }\r\n\r\n          if (this.#isUsableItem(value) && value.type === \"consumable\") inventoryMap.get(\"consumables\").set(key, value);\r\n          if (this.#isEquippedItem(value)) {\r\n            switch (value.type) {\r\n              case \"container\": inventoryMap.get(\"containers\").set(key, value); break;\r\n              case \"equipment\": inventoryMap.get(\"equipment\").set(key, value); break;\r\n              case \"loot\": inventoryMap.get(\"loot\").set(key, value); break;\r\n              case \"tool\": inventoryMap.get(\"tools\").set(key, value); break;\r\n              case \"weapon\": inventoryMap.get(\"weapons\").set(key, value); break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Loop through inventory subcateogry ids\r\n      for (const groupId of this.inventorygroupIds) {\r\n        const actionData = inventoryMap.get(groupId);\r\n        if (!actionData || actionData.size === 0) continue;\r\n\r\n        // Create group data\r\n        const groupData = {\r\n          id: groupId,\r\n          name: game.i18n.localize(GROUP[groupId].name)\r\n        };\r\n\r\n        const data = { groupData, actionData };\r\n\r\n        // Build actions and activations\r\n        await this.buildActions(data);\r\n        await this.buildActivations(data);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build rests\r\n     * @private\r\n     */\r\n    #buildRests() {\r\n      // Exit if every actor is not the character type\r\n      if (this.actors.length === 0 || !this.actors.every(actor => actor.type === \"character\")) return;\r\n\r\n      // Get actions\r\n      const actionType = \"utility\";\r\n      const restTypes = { shortRest: \"DND5E.ShortRest\", longRest: \"DND5E.LongRest\" };\r\n      const actions = Object.entries(restTypes).map(([id, name]) => {\r\n        name = game.i18n.localize(name);\r\n        return {\r\n          id,\r\n          name,\r\n          encodedValue: [actionType, id].join(this.delimiter),\r\n          listName: this.#getListName(actionType, name)\r\n        };\r\n      });\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"rests\" });\r\n    }\r\n\r\n    /**\r\n     * Build skills\r\n     * @private\r\n     */\r\n    #buildSkills() {\r\n      // Get skills and exit if none exist\r\n      const skills = this.actor?.system.skills || CONFIG.DND5E.skills;\r\n      if (skills.length === 0) return;\r\n\r\n      // Get actions\r\n      const actionType = \"skill\";\r\n      const actions = Object.entries(skills).map(([id, skill]) => {\r\n        try {\r\n          const name = CONFIG.DND5E.skills[id].label;\r\n          return {\r\n            id,\r\n            name: this.abbreviateSkills ? coreModule.api.Utils.capitalize(id) : name,\r\n            encodedValue: [actionType, id].join(this.delimiter),\r\n            icon1: this.#getProficiencyIcon(skill.value),\r\n            info1: (this.actor) ? { text: coreModule.api.Utils.getModifier(skill.total) } : \"\",\r\n            listName: this.#getListName(actionType, name)\r\n          };\r\n        } catch(error) {\r\n          coreModule.api.Logger.error(skill);\r\n          return null;\r\n        }\r\n      }).filter(skill => !!skill);\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"skills\" });\r\n    }\r\n\r\n    /**\r\n     * Build spells\r\n     */\r\n    async #buildSpells() {\r\n      // Filter items for spells and exit if none exist\r\n      const spells = new Map([...this.items].filter(([, value]) => value.type === \"spell\"));\r\n      if (spells.size === 0) return;\r\n\r\n      // Initialize spells map categories\r\n      const spellsMap = new Map([\r\n        [\"atWillSpells\", new Map()],\r\n        [\"innateSpells\", new Map()],\r\n        [\"pactSpells\", new Map()],\r\n        [\"cantrips\", new Map()],\r\n        [\"_1stLevelSpells\", new Map()],\r\n        [\"_2ndLevelSpells\", new Map()],\r\n        [\"_3rdLevelSpells\", new Map()],\r\n        [\"_4thLevelSpells\", new Map()],\r\n        [\"_5thLevelSpells\", new Map()],\r\n        [\"_6thLevelSpells\", new Map()],\r\n        [\"_7thLevelSpells\", new Map()],\r\n        [\"_8thLevelSpells\", new Map()],\r\n        [\"_9thLevelSpells\", new Map()]\r\n      ]);\r\n\r\n      // Loop through items\r\n      for (const [key, value] of spells) {\r\n        if (!this.#isUsableItem(value) || !this.#isUsableSpell(value)) continue;\r\n\r\n        switch (value.system.preparation.mode) {\r\n          case \"atwill\":\r\n            spellsMap.get(\"atWillSpells\").set(key, value); break;\r\n          case \"innate\":\r\n            spellsMap.get(\"innateSpells\").set(key, value); break;\r\n          case \"pact\":\r\n            spellsMap.get(\"pactSpells\").set(key, value); break;\r\n          default: {\r\n            switch (value.system.level) {\r\n              case 0:\r\n                spellsMap.get(\"cantrips\").set(key, value); break;\r\n              case 1:\r\n                spellsMap.get(\"_1stLevelSpells\").set(key, value); break;\r\n              case 2:\r\n                spellsMap.get(\"_2ndLevelSpells\").set(key, value); break;\r\n              case 3:\r\n                spellsMap.get(\"_3rdLevelSpells\").set(key, value); break;\r\n              case 4:\r\n                spellsMap.get(\"_4thLevelSpells\").set(key, value); break;\r\n              case 5:\r\n                spellsMap.get(\"_5thLevelSpells\").set(key, value); break;\r\n              case 6:\r\n                spellsMap.get(\"_6thLevelSpells\").set(key, value); break;\r\n              case 7:\r\n                spellsMap.get(\"_7thLevelSpells\").set(key, value); break;\r\n              case 8:\r\n                spellsMap.get(\"_8thLevelSpells\").set(key, value); break;\r\n              case 9:\r\n                spellsMap.get(\"_9thLevelSpells\").set(key, value); break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Reverse sort spell slots by level\r\n      const systemSpells = Object.entries(this.actor.system.spells).reverse();\r\n\r\n      // Set spell slot availability\r\n      const spellSlotsMap = new Map();\r\n      let spellSlotAvailable = this.showUnchargedItems;\r\n      let pactSlotAvailable = this.showUnchargedItems;\r\n      let pactSlot = null;\r\n\r\n      for (const [key, value] of systemSpells) {\r\n        const hasValue = value.value > 0;\r\n        const hasMax = value.max > 0;\r\n        const hasLevel = value.level > 0;\r\n\r\n        if (key === \"pact\") {\r\n          pactSlotAvailable = pactSlotAvailable || (hasValue && hasMax && hasLevel);\r\n          value.slotAvailable = pactSlotAvailable && hasLevel;\r\n          pactSlot = [key, value];\r\n        } else if (key.startsWith(\"spell\") && key !== \"spell0\") {\r\n          spellSlotAvailable = spellSlotAvailable || (hasValue && hasMax);\r\n          value.slotAvailable = spellSlotAvailable;\r\n          spellSlotsMap.set(key, value);\r\n        } else if (hasValue) {\r\n          value.slotsAvailable = true;\r\n          spellSlotsMap.set(key, value);\r\n        }\r\n      }\r\n\r\n      // Set equivalent spell slot where pact slot is available\r\n      if (pactSlot[1].slotAvailable) {\r\n        const spellSlot = spellSlotsMap.get(f`spell${pactSlot[1].level}`);\r\n        spellSlot.slotsAvailable = true;\r\n      }\r\n\r\n      const spellSlotModes = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, \"pact\"]);\r\n\r\n      for (const id of SPELL_GROUP_IDS) {\r\n        // Skip if no spells exist\r\n        if (!spellsMap.has(id)) continue;\r\n\r\n        const spellMode = GROUP[id].spellMode;\r\n        const levelInfo = (spellMode === \"pact\") ? pactSlot[1] : spellSlotsMap.get(`spell${spellMode}`);\r\n        const { value: slots = 0, max = 0, slotAvailable = false } = levelInfo || {};\r\n\r\n        // Skip if spells require spell slots and none are available\r\n        if (!slotAvailable && spellSlotModes.has(spellMode)) continue;\r\n\r\n        // Create group data\r\n        const groupData = {\r\n          id: GROUP[id].id,\r\n          name: game.i18n.localize(GROUP[id].name),\r\n          info: { info1: { class: \"tah-spotlight\", text: (max > 0) ? `${slots}/${max}` : \"\" } }\r\n        };\r\n\r\n        // Add spell slot info to group\r\n        this.addGroupInfo(groupData);\r\n\r\n        const data = { groupData, actionData: spellsMap.get(id), actionType: \"spell\" };\r\n\r\n        // Build actions and activations\r\n        await this.buildActions(data);\r\n        await this.buildActivations(data);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build utility\r\n     * @private\r\n     */\r\n    #buildUtility() {\r\n      // Exit if every actor is not the character type\r\n      if (this.actors.length === 0) return;\r\n      if (!this.actors.every(actor => actor.type === \"character\")) return;\r\n\r\n      const actionType = \"utility\";\r\n\r\n      // Set utility types\r\n      const utilityTypes = {\r\n        deathSave: { name: game.i18n.localize(\"DND5E.DeathSave\") },\r\n        inspiration: { name: game.i18n.localize(\"DND5E.Inspiration\") }\r\n      };\r\n\r\n      // Delete 'deathSave' for multiple tokens\r\n      if (!this.actor || this.actor.system.attributes.hp.value > 0) delete utilityTypes.deathSave;\r\n\r\n      // Get actions\r\n      const actions = Object.entries(utilityTypes)\r\n        .map(utilityType => {\r\n          const id = utilityType[0];\r\n          const name = utilityType[1].name;\r\n          const encodedValue = [actionType, id].join(this.delimiter);\r\n          let cssClass = \"\";\r\n          if (utilityType[0] === \"inspiration\") {\r\n            const active = this.actors.every(actor => actor.system.attributes?.inspiration)\r\n              ? \" active\"\r\n              : \"\";\r\n            cssClass = `toggle${active}`;\r\n          }\r\n          return {\r\n            id,\r\n            name,\r\n            encodedValue,\r\n            cssClass,\r\n            listName: this.#getListName(actionType, name)\r\n          };\r\n        });\r\n\r\n      // Crreate group data\r\n      const groupData = { id: \"utility\" };\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /**\r\n     * Build actions\r\n     * @public\r\n     * @param {object} data actionData, groupData, actionType\r\n     * @param {object} options\r\n     */\r\n    async buildActions(data, options) {\r\n      const { actionData, groupData, actionType } = data;\r\n\r\n      // Exit if there is no action data\r\n      if (actionData.size === 0) return;\r\n\r\n      // Exit if there is no groupId\r\n      const groupId = (typeof groupData === \"string\" ? groupData : groupData?.id);\r\n      if (!groupId) return;\r\n\r\n      // Get actions\r\n      const actions = await Promise.all([...actionData].map(async item => await this.#getAction(item[1], actionType)));\r\n\r\n      // Add actions to action list\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /**\r\n     * Get action\r\n     * @private\r\n     * @param {object} entity      The entity\r\n     *  @param {string} actionType The action type\r\n     * @returns {object}           The action\r\n     */\r\n    async #getAction(entity, actionType = \"item\") {\r\n      const id = entity.id ?? entity._id;\r\n      let name = entity?.name ?? entity?.label;\r\n      let cssClass = \"\";\r\n      if (Object.hasOwn(entity, \"disabled\")) {\r\n        const active = (!entity.disabled) ? \" active\" : \"\";\r\n        cssClass = `toggle${active}`;\r\n      }\r\n      const info = this.#getItemInfo(entity);\r\n      const tooltip = await this.#getTooltip(await this.#getTooltipData(entity));\r\n      return {\r\n        id,\r\n        name,\r\n        encodedValue: [actionType, id].join(this.delimiter),\r\n        cssClass,\r\n        img: coreModule.api.Utils.getImage(entity),\r\n        icon1: this.#getActivationTypeIcon(entity.system?.activities?.contents[0]?.type),\r\n        icon2: this.#getPreparedIcon(entity),\r\n        icon3: this.#getConcentrationIcon(entity),\r\n        info1: info?.info1,\r\n        info2: info?.info2,\r\n        info3: info?.info3,\r\n        listName: this.#getListName(actionType, name),\r\n        tooltip\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Is active item\r\n     * @private\r\n     * @param {object} item The item\r\n     * @returns {boolean}   Whether the item is active\r\n     */\r\n    #isActiveItem(item) {\r\n      if (this.showItemsWithoutActivationCosts) return true;\r\n      const activationTypes = new Set(Object.keys(CONFIG.DND5E.activityActivationTypes).filter(activationType => activationType !== \"none\"));\r\n      const activationType = item.system?.activities?.contents[0]?.activation?.type;\r\n      return activationTypes.has(activationType) || item.type === \"tool\";\r\n    }\r\n\r\n    /**\r\n     * Is equipped item\r\n     * @private\r\n     * @param {object} item The item\r\n     * @returns {boolean}   Whether the item is equipped\r\n     */\r\n    #isEquippedItem(item) {\r\n      const excludedTypes = [\"consumable\", \"spell\", \"feat\"];\r\n      return (this.showUnequippedItems && !excludedTypes.includes(item.type))\r\n      || (item.system.equipped && item.type !== \"consumable\");\r\n    }\r\n\r\n    /**\r\n     * Is usable item\r\n     * @private\r\n     * @param {object} item The item\r\n     * @returns {boolean}   Whether the item is usable\r\n     */\r\n    #isUsableItem(item) {\r\n      return this.showUnchargedItems || item.system.uses.value || !item.system.uses.max;\r\n    }\r\n\r\n    /**\r\n     * Is usable spell\r\n     * @private\r\n     * @param {object} spell The spell\r\n     * @returns {boolean}    Whether the spell is usable\r\n     */\r\n    #isUsableSpell(spell) {\r\n      if (this.actor?.type !== \"character\" && this.showUnequippedItems) return true;\r\n      if (this.showUnpreparedSpells) return true;\r\n\r\n      const preparationModes = new Set(Object.keys(CONFIG.DND5E.spellPreparationModes).filter(preparationMode => preparationMode !== \"prepared\"));\r\n\r\n      // Return true if spell is a cantrip, has a preparation mode other than 'prepared' or is prepared\r\n      return spell.system.level === 0 || preparationModes.has(spell.system.preparation.mode)\r\n      || spell.system.preparation.prepared;\r\n    }\r\n\r\n    #getListName(actionType, actionName) {\r\n      const prefix = `${game.i18n.localize(ACTION_TYPE[actionType])}: ` ?? \"\";\r\n      return `${prefix}${actionName}` ?? \"\";\r\n    }\r\n\r\n    /**\r\n     * Get item info\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {object}\r\n     */\r\n    #getItemInfo(item) {\r\n      const info1 = item.type === \"spell\" ? this.#getSpellInfo(item) : this.#getQuantityData(item);\r\n      const info2 = this.#getUsesData(item);\r\n      const info3 = this.#getConsumeData(item);\r\n\r\n      return { info1, info2, info3 };\r\n    }\r\n\r\n    /**\r\n     * Add spell info\r\n     * @private\r\n     * @param {object} spell The spell\r\n     * @returns {object}     The spell info\r\n     */\r\n    #getSpellInfo(spell) {\r\n      if (!this.displaySpellInfo) return null;\r\n\r\n      const components = spell.system?.properties;\r\n      if (!components) return null;\r\n\r\n      const info = { text: \"\", title: \"\" };\r\n      const componentTypes = {\r\n        vocal: \"DND5E.ComponentVerbal\",\r\n        somatic: \"DND5E.ComponentSomatic\",\r\n        material: \"DND5E.ComponentMaterial\"\r\n      };\r\n\r\n\r\n      const componentsArray = Object.entries(componentTypes)\r\n        .filter(([key]) => components[key])\r\n        .map(([key, label]) => {\r\n          info.text += game.i18n.localize(`${label}Abbr`);\r\n          return game.i18n.localize(label);\r\n        });\r\n\r\n      // Ritual\r\n      if (components.ritual) {\r\n        componentsArray.push(`[${game.i18n.localize(\"DND5E.Ritual\")}]`);\r\n        info.text += ` [${game.i18n.localize(\"DND5E.RitualAbbr\")}]`;\r\n      }\r\n\r\n      info.title = componentsArray.join(\", \");\r\n\r\n      return info;\r\n    }\r\n\r\n    /**\r\n     * Get valid actors\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    #getValidActors() {\r\n      const allowedTypes = [\"character\", \"npc\"];\r\n      return this.actors.every(actor => allowedTypes.includes(actor.type)) ? this.actors : [];\r\n    }\r\n\r\n    /**\r\n     * Get valid tokens\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    #getValidTokens() {\r\n      const allowedTypes = [\"character\", \"npc\"];\r\n      return this.actors.every(actor => allowedTypes.includes(actor.type)) ? this.tokens : [];\r\n    }\r\n\r\n    /**\r\n     * Get quantity\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {string}\r\n     */\r\n    #getQuantityData(item) {\r\n      const quantity = item?.system?.quantity ?? 0;\r\n      return {\r\n        text: (quantity > 1) ? quantity : \"\",\r\n        title: `${game.i18n.localize(\"DND5E.Quantity\")}: ${quantity}`\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Get uses\r\n     * @private\r\n     * @param {object} item\r\n     * @param {string} consumeName\r\n     * @param {integer} consumeAmount\r\n     * @returns {string}\r\n     */\r\n    #getUsesData(item) {\r\n      const uses = item?.system?.uses;\r\n      if (!(uses?.max > 0)) return {};\r\n      const per = uses.recovery[0]?.period === \"charges\" ? \"\" : ` ${game.i18n.localize(\"DND5E.per\")} `;\r\n      const period = CONFIG.DND5E.limitedUsePeriods[uses.recovery[0]?.period]?.label ?? uses.recovery[0]?.period;\r\n      const perPeriod = (period) ? `${per}${period}` : ''\r\n      const remainingUses = uses.max - (uses.spent ?? 0);\r\n      const text = `${remainingUses}/${uses.max}`;\r\n      const title = `${text}${perPeriod}`;\r\n      return { text, title };\r\n    }\r\n\r\n    /**\r\n     * Get consume\r\n     * @private\r\n     * @param {object} item\r\n     * @param {object} actor\r\n     * @returns {string}\r\n     */\r\n    #getConsumeData(item) {\r\n      // Get consume target and type\r\n      const firstActivity = item?.system?.activities?.contents[0];\r\n      const firstTarget = firstActivity?.consumption?.targets?.[0];\r\n      const consumeId = firstTarget?.target;\r\n      const consumeType = firstTarget?.type;\r\n      const consumeAmount = firstTarget?.value;\r\n\r\n      if (!consumeId || !consumeType || consumeId === item.id) return {};\r\n\r\n      // Return resources\r\n      if (consumeType === \"attribute\") {\r\n        const parentId = consumeId.substr(0, consumeId.lastIndexOf(\".\"));\r\n        const target = foundry.utils.getProperty(this.actor.system, parentId);\r\n\r\n        if (target) {\r\n          const text = `${target.value ?? \"0\"}${target.max ? `/${target.max}` : \"\"}`;\r\n          return {\r\n            text,\r\n            title: `${text} ${target.label ?? \"\"}`\r\n          };\r\n        }\r\n      } else {\r\n        const target = this.actor.items?.get(consumeId);\r\n\r\n        // Return charges\r\n        if (target && consumeType === \"charges\") {\r\n          return this.#getUsesData(target);\r\n        }\r\n\r\n        // Return quantity\r\n        if (target?.system?.quantity) {\r\n          const text = `${consumeAmount > 1 ? `${consumeAmount} ${game.i18n.localize(\"DND5E.of\")} ` : \"\"}${target.system.quantity}`;\r\n          return {\r\n            text,\r\n            title: `${text} ${target.name}`\r\n          };\r\n        }\r\n      }\r\n\r\n      return {};\r\n    }\r\n\r\n    /**\r\n     * Discard slow items\r\n     * @private\r\n     * @param {Map} items The items\r\n     * @returns {Map}     The filtered items\r\n     */\r\n    #discardSlowItems(items) {\r\n      // Return all items if slow actions are allowed\r\n      if (Utils.getSetting(\"showSlowActions\")) return items;\r\n\r\n      // Define slow activation types\r\n      const slowActivationTypes = new Set([\"minute\", \"hour\", \"day\"]);\r\n\r\n      // Filter out slow items and return the result\r\n      return new Map([...items.entries()].filter(([_, item]) => {\r\n        const activationType = item.system?.activation?.type;\r\n        return !slowActivationTypes.has(activationType);\r\n      }));\r\n    }\r\n\r\n    /**\r\n     * Get proficiency icon\r\n     * @param {string} level\r\n     * @returns {string}\r\n     */\r\n    #getProficiencyIcon(level) {\r\n      const title = CONFIG.DND5E.proficiencyLevels[level] ?? \"\";\r\n      const icon = PROFICIENCY_LEVEL_ICON[level];\r\n      return (icon) ? `<i class=\"${icon}\" title=\"${title}\"></i>` : \"\";\r\n    }\r\n\r\n    /**\r\n     * Get icon for the activation type\r\n     * @private\r\n     * @param {object} activationType The activation type\r\n     * @returns {string}              The icon\r\n     */\r\n    #getActivationTypeIcon(activationType) {\r\n      const title = CONFIG.DND5E.abilityActivationTypes[activationType] ?? \"\";\r\n      const icon = ACTIVATION_TYPE[activationType]?.icon;\r\n      return (icon) ? `<i class=\"${icon}\" title=\"${title}\"></i>` : \"\";\r\n    }\r\n\r\n    /**\r\n     * Get icon for concentration type\r\n     * @private\r\n     * @param {object} spell\r\n     * @returns {string}\r\n     */\r\n    #getConcentrationIcon(spell) {\r\n      if (spell?.type !== \"spell\" || !this.displaySpellInfo || !spell.system?.properties?.has(\"concentration\")) return null;\r\n      const title = game.i18n.localize(\"DND5E.Scroll.RequiresConcentration\");\r\n      const icon = CONCENTRATION_ICON;\r\n      return `<dnd5e-icon src=\"${icon}\" title=\"${title}\">`;\r\n    }\r\n\r\n    /**\r\n     * Get icon for a prepared spell\r\n     * @private\r\n     * @param {object} spell\r\n     * @returns\r\n     */\r\n    #getPreparedIcon(spell) {\r\n      if (spell?.type !== \"spell\" || !this.showUnpreparedSpells) return null;\r\n      const level = spell.system.level;\r\n      const preparationMode = spell.system.preparation.mode;\r\n      const prepared = spell.system.preparation.prepared;\r\n      const icon = prepared ? PREPARED_ICON : `${PREPARED_ICON} tah-icon-disabled`;\r\n      const title = preparationMode === \"always\" ? game.i18n.localize(\"DND5E.SpellPrepAlways\") : prepared ? game.i18n.localize(\"DND5E.SpellPrepared\") : game.i18n.localize(\"DND5E.SpellUnprepared\");\r\n\r\n      // Return icon if the preparation mode is 'prepared' or 'always' and the spell is not a cantrip\r\n      return ((preparationMode === \"prepared\" || preparationMode === \"always\") && level !== 0) ? `<i class=\"${icon}\" title=\"${title}\"></i>` : null;\r\n    }\r\n\r\n    async #getTooltipData(entity) {\r\n      if (this.tooltipsSetting === \"none\") return \"\";\r\n\r\n      const name = entity?.name ?? \"\";\r\n\r\n      if (this.tooltipsSetting === \"nameOnly\") return name;\r\n\r\n      const unidentified = entity.system?.identified === false;\r\n      const description = (typeof entity?.system?.description === \"string\") ? entity?.system?.description : (unidentified ? entity?.system?.unidentified?.description : entity?.system?.description?.value) ?? \"\";\r\n      let modifiers; let properties; let rarity; let traits;\r\n      if (!unidentified) {\r\n        modifiers = entity?.modifiers ?? null;\r\n        properties = [\r\n          ...entity.system?.chatProperties ?? [],\r\n          ...entity.system?.equippableItemCardProperties ?? [],\r\n          entity.system?.parent?.labels?.activation,\r\n          entity.system?.parent?.labels?.target,\r\n          entity.system?.parent?.labels?.range,\r\n          entity.system?.parent?.labels?.duration\r\n        ].filter(p => p);\r\n        rarity = unidentified ? null : entity?.rarity ?? null;\r\n        traits = (entity?.type === \"weapon\") ? this.#getWeaponProperties(entity?.system?.properties) : null;\r\n      }\r\n      return { name, description, modifiers, properties, rarity, traits };\r\n    }\r\n\r\n    /**\r\n     * Get condition tooltip data\r\n     * @param {*} id     The condition id\r\n     * @param {*} name   The condition name\r\n     * @returns {object} The tooltip data\r\n     */\r\n    async #getConditionTooltipData(id, name) {\r\n      if (this.tooltipsSetting === \"none\") return \"\";\r\n\r\n      const condition = CONFIG.DND5E.conditionTypes[id];\r\n\r\n      if (this.tooltipsSetting === \"nameOnly\" || !condition) return name;\r\n\r\n      const journalEntry = (condition.reference) ? await fromUuid(condition.reference) : null;\r\n      const description = journalEntry?.text?.content ?? \"\";\r\n      const relativeTo = journalEntry;\r\n      return {\r\n        name,\r\n        description,\r\n        relativeTo\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Get tooltip\r\n     * @param {object} tooltipData The tooltip data\r\n     * @returns {string}           The tooltip\r\n     */\r\n    async #getTooltip(tooltipData) {\r\n      if (this.tooltipsSetting === \"none\") return \"\";\r\n      if (typeof tooltipData === \"string\") return tooltipData;\r\n\r\n      const name = game.i18n.localize(tooltipData.name);\r\n\r\n      if (this.tooltipsSetting === \"nameOnly\") return name;\r\n\r\n      const nameHtml = `<h3>${name}</h3>`;\r\n\r\n      const relativeTo = tooltipData.relativeTo ?? this.actor;\r\n\r\n      const description = tooltipData?.descriptionLocalised\r\n                ?? await TextEditor.enrichHTML(game.i18n.localize(tooltipData?.description ?? \"\"), { async: true, relativeTo, secrets: true });\r\n\r\n      const rarityHtml = tooltipData?.rarity\r\n        ? `<span class=\"tah-tag ${tooltipData.rarity}\">${game.i18n.localize(RARITY[tooltipData.rarity])}</span>`\r\n        : \"\";\r\n\r\n      const propertiesHtml = tooltipData?.properties\r\n        ? `<div class=\"tah-properties\">${tooltipData.properties.map(property => `<span class=\"tah-property\">${game.i18n.localize(property)}</span>`).join(\"\")}</div>`\r\n        : \"\";\r\n\r\n      const traitsHtml = tooltipData?.traits\r\n        ? tooltipData.traits.map(trait => `<span class=\"tah-tag\">${game.i18n.localize(trait.label ?? trait)}</span>`).join(\"\")\r\n        : \"\";\r\n\r\n      const traits2Html = tooltipData?.traits2\r\n        ? tooltipData.traits2.map(trait => `<span class=\"tah-tag tah-tag-secondary\">${game.i18n.localize(trait.label ?? trait)}</span>`).join(\"\")\r\n        : \"\";\r\n\r\n      const traitsAltHtml = tooltipData?.traitsAlt\r\n        ? tooltipData.traitsAlt.map(trait => `<span class=\"tah-tag tah-tag-alt\">${game.i18n.localize(trait.label)}</span>`).join(\"\")\r\n        : \"\";\r\n\r\n      const modifiersHtml = tooltipData?.modifiers\r\n        ? `<div class=\"tah-tags\">${tooltipData.modifiers.filter(modifier => modifier.enabled).map(modifier => {\r\n          const label = game.i18n.localize(modifier.label);\r\n          const sign = modifier.modifier >= 0 ? \"+\" : \"\";\r\n          const mod = `${sign}${modifier.modifier ?? \"\"}`;\r\n          return `<span class=\"tah-tag tah-tag-transparent\">${label} ${mod}</span>`;\r\n        }).join(\"\")}</div>`\r\n        : \"\";\r\n\r\n      const tagsJoined = [rarityHtml, traitsHtml, traits2Html, traitsAltHtml].join(\"\");\r\n\r\n      const tagsHtml = (tagsJoined) ? `<div class=\"tah-tags\">${tagsJoined}</div>` : \"\";\r\n\r\n      const headerTags = (tagsHtml || modifiersHtml) ? `<div class=\"tah-tags-wrapper\">${tagsHtml}${modifiersHtml}</div>` : \"\";\r\n\r\n      if (!description && !tagsHtml && !modifiersHtml) return name;\r\n\r\n      return `<div>${nameHtml}${headerTags}${description}${propertiesHtml}</div>`;\r\n    }\r\n\r\n    #getWeaponProperties(weaponProperties) {\r\n      if (!weaponProperties) return null;\r\n      return Object.entries(weaponProperties)\r\n        .filter(([id, selected]) => selected && CONFIG.DND5E.validProperties.weapon.has(id))\r\n        .map(([id, _]) => game.i18n.localize(CONFIG.DND5E.itemProperties[id]));\r\n    }\r\n  };\r\n});\r\n","import { GROUP } from \"./constants.js\";\r\n\r\n/**\r\n * Default categories and groups\r\n */\r\nexport let DEFAULTS = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  const groups = GROUP;\r\n  Object.values(groups).forEach(group => {\r\n    group.name = coreModule.api.Utils.i18n(group.name);\r\n    group.listName = `Group: ${coreModule.api.Utils.i18n(group.name)}`;\r\n  });\r\n  const groupsArray = Object.values(groups);\r\n  DEFAULTS = {\r\n    layout: [\r\n      {\r\n        nestId: \"inventory\",\r\n        id: \"inventory\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Inventory\"),\r\n        groups: [\r\n          { ...groups.weapons, nestId: \"inventory_weapons\" },\r\n          { ...groups.equipment, nestId: \"inventory_equipment\" },\r\n          { ...groups.consumables, nestId: \"inventory_consumables\" },\r\n          { ...groups.tools, nestId: \"inventory_tools\" },\r\n          { ...groups.containers, nestId: \"inventory_containers\" },\r\n          { ...groups.loot, nestId: \"inventory_loot\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"features\",\r\n        id: \"features\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Features\"),\r\n        groups: [\r\n          { ...groups.activeFeatures, nestId: \"features_active-features\" },\r\n          { ...groups.passiveFeatures, nestId: \"features_passive-features\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"spells\",\r\n        id: \"spells\",\r\n        name: coreModule.api.Utils.i18n(\"TYPES.Item.spellPl\"),\r\n        groups: [\r\n          { ...groups.atWillSpells, nestId: \"spells_at-will-spells\" },\r\n          { ...groups.innateSpells, nestId: \"spells_innate-spells\" },\r\n          { ...groups.pactSpells, nestId: \"spells_pact-spells\" },\r\n          { ...groups.cantrips, nestId: \"spells_cantrips\" },\r\n          { ...groups._1stLevelSpells, nestId: \"spells_1st-level-spells\" },\r\n          { ...groups._2ndLevelSpells, nestId: \"spells_2nd-level-spells\" },\r\n          { ...groups._3rdLevelSpells, nestId: \"spells_3rd-level-spells\" },\r\n          { ...groups._4thLevelSpells, nestId: \"spells_4th-level-spells\" },\r\n          { ...groups._5thLevelSpells, nestId: \"spells_5th-level-spells\" },\r\n          { ...groups._6thLevelSpells, nestId: \"spells_6th-level-spells\" },\r\n          { ...groups._7thLevelSpells, nestId: \"spells_7th-level-spells\" },\r\n          { ...groups._8thLevelSpells, nestId: \"spells_8th-level-spells\" },\r\n          { ...groups._9thLevelSpells, nestId: \"spells_9th-level-spells\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"attributes\",\r\n        id: \"attributes\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Attributes\"),\r\n        groups: [\r\n          { ...groups.abilities, nestId: \"attributes_abilities\" },\r\n          { ...groups.skills, nestId: \"attributes_skills\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"effects\",\r\n        id: \"effects\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Effects\"),\r\n        groups: [\r\n          { ...groups.temporaryEffects, nestId: \"effects_temporary-effects\" },\r\n          { ...groups.passiveEffects, nestId: \"effects_passive-effects\" },\r\n          { ...groups.conditions, nestId: \"effects_conditions\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"utility\",\r\n        id: \"utility\",\r\n        name: coreModule.api.Utils.i18n(\"tokenActionHud.utility\"),\r\n        groups: [\r\n          { ...groups.combat, nestId: \"utility_combat\" },\r\n          { ...groups.token, nestId: \"utility_token\" },\r\n          { ...groups.rests, nestId: \"utility_rests\" },\r\n          { ...groups.utility, nestId: \"utility_utility\" }\r\n        ]\r\n      }\r\n    ],\r\n    groups: groupsArray\r\n  };\r\n});\r\n","export let MagicItemActionHandlerExtender = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  MagicItemActionHandlerExtender = class MagicItemActionHandlerExtender extends coreModule.api.ActionHandlerExtender {\r\n    constructor(actionHandler) {\r\n      super();\r\n      this.actionHandler = actionHandler;\r\n      this.actor = null;\r\n    }\r\n\r\n    /**\r\n     * Extend the action list\r\n     */\r\n    async extendActionHandler() {\r\n      this.actor = this.actionHandler.actor;\r\n      if (!this.actor) return;\r\n\r\n      const actor = await MagicItems.actor(this.actor.id);\r\n\r\n      if (!actor) return;\r\n\r\n      const magicItems = actor.items ?? [];\r\n\r\n      if (magicItems.length === 0) return;\r\n\r\n      const parentGroupId = \"magic-items\";\r\n      const parentGroupType = \"system\";\r\n      const parentGroupData = {\r\n        id: parentGroupId,\r\n        type: parentGroupType\r\n      };\r\n\r\n      magicItems.forEach(magicItem => {\r\n        if (magicItem.attuned && !this._isItemAttuned(magicItem)) return;\r\n        if (magicItem.equipped && !this._isItemEquipped(magicItem)) return;\r\n\r\n        const groupId = `magic-items_${magicItem.id}`;\r\n        const groupName = magicItem.name;\r\n        const groupType = \"system-derived\";\r\n        const groupInfo1 = `${magicItem.uses}/${magicItem.charges}`;\r\n        const groupData = {\r\n          id: groupId,\r\n          name: groupName,\r\n          type: groupType,\r\n          info1: groupInfo1\r\n        };\r\n\r\n        // Add group to HUD\r\n        this.actionHandler.addGroup(groupData, parentGroupData);\r\n\r\n        const actions = magicItem.ownedEntries.map(entry => {\r\n          const effect = entry.item;\r\n          const id = effect.id;\r\n          const name = effect.name;\r\n          const encodedValue = [\r\n            \"magicItem\",\r\n            `${magicItem.id}>${id}`\r\n          ].join(\"|\");\r\n          const img = coreModule.api.Utils.getImage(effect);\r\n          const info1 = effect.consumption;\r\n          const info2 = (effect.baseLevel) ? `${coreModule.api.Utils.i18n(\"DND5E.AbbreviationLevel\")} ${effect.baseLevel}` : \"\";\r\n          return {\r\n            id,\r\n            name,\r\n            encodedValue,\r\n            img,\r\n            info1,\r\n            info2,\r\n            selected: true\r\n          };\r\n        });\r\n\r\n        // Add actions to action list\r\n        this.actionHandler.addActions(actions, groupData);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Whether the magic item is equipped or not\r\n     * @param {object} magicItem The item\r\n     * @returns {boolean}\r\n     */\r\n    _isItemEquipped(magicItem) {\r\n      return magicItem.item.system.equipped;\r\n    }\r\n\r\n    /**\r\n     * Whether the magic items is attuned or not\r\n     * @param {object} magicItem The item\r\n     * @returns {boolean}\r\n     */\r\n    _isItemAttuned(magicItem) {\r\n      const attunement = magicItem.item.system.attunment;\r\n      const attunementRequired = CONFIG.DND5E.attunementTypes?.REQUIRED ?? 1;\r\n\r\n      if (attunement === attunementRequired) return false;\r\n\r\n      return true;\r\n    }\r\n  };\r\n});\r\n","import { CUSTOM_DND5E } from \"./constants.js\";\r\n\r\nexport let RollHandler = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  RollHandler = class RollHandler extends coreModule.api.RollHandler {\r\n    /**\r\n     * Handle action click\r\n     * @override\r\n     * @param {object} event\r\n     * @param {string} encodedValue\r\n     */\r\n    async handleActionClick(event, encodedValue) {\r\n      const [actionType, actionId] = encodedValue.split(\"|\");\r\n\r\n      if (!this.actor) {\r\n        for (const token of coreModule.api.Utils.getControlledTokens()) {\r\n          const actor = token.actor;\r\n          await this.handleAction(event, actionType, actor, token, actionId);\r\n        }\r\n      } else {\r\n        await this.handleAction(event, actionType, this.actor, this.token, actionId);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Handle action\r\n     * @private\r\n     * @param {object} event\r\n     * @param {string} actionType\r\n     * @param {object} actor\r\n     * @param {object} token\r\n     * @param {string} actionId\r\n     */\r\n    async handleAction(event, actionType, actor, token, actionId) {\r\n      switch (actionType) {\r\n        case \"ability\":\r\n          this.rollAbility(event, actor, actionId); break;\r\n        case \"check\":\r\n          this.rollAbilityTest(event, actor, actionId); break;\r\n        case \"save\":\r\n          this.rollAbilitySave(event, actor, actionId); break;\r\n        case \"condition\":\r\n          if (!token) return;\r\n          await this.toggleCondition(event, actor, token, actionId); break;\r\n        case \"counter\":\r\n          await this.modifyCounter(event, actor, actionId); break;\r\n        case \"effect\":\r\n          await this.toggleEffect(event, actor, actionId); break;\r\n        case \"exhaustion\":\r\n          await this.modifyExhaustion(event, actor); break;\r\n        case \"feature\":\r\n        case \"item\":\r\n        case \"spell\":\r\n        case \"weapon\":\r\n          if (this.isRenderItem()) this.renderItem(actor, actionId);\r\n          else this.useItem(event, actor, actionId);\r\n          break;\r\n        case \"magicItem\":\r\n          await this.rollMagicItem(actor, actionId); break;\r\n        case \"skill\":\r\n          this.rollSkill(event, actor, actionId); break;\r\n        case \"utility\":\r\n          await this.performUtilityAction(event, actor, token, actionId); break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Modify Counter\r\n     * @private\r\n     * @param {object} event The event\r\n     * @param {object} actor The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async modifyCounter(event, actor, actionId) {\r\n      switch (actionId) {\r\n        case \"death-saves\":\r\n          this.rollDeathSave(event, actor); break;\r\n        case \"exhaustion\":\r\n          await this.modifyExhaustion(event, actor); break;\r\n        case \"inspiration\":\r\n          await this.modifyInspiration(actor); break;\r\n        default:\r\n          await this.modifyCustomCounter(event, actor, actionId); break;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Modify Exhaustion\r\n     * @private\r\n     * @param {object} event The event\r\n     * @param {object} actor The actor\r\n     */\r\n    async modifyExhaustion(event, actor) {\r\n      const isRightClick = this.isRightClick(event);\r\n      const currentExhaustion = actor.system.attributes.exhaustion;\r\n      const newExhaustion = currentExhaustion + (isRightClick ? -1 : 1);\r\n      if (newExhaustion >= 0 && newExhaustion !== currentExhaustion) {\r\n        actor.update({ \"system.attributes.exhaustion\": newExhaustion });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Modify Inspiration\r\n     * @private\r\n     * @param {object} actor The actor\r\n     */\r\n    async modifyInspiration(actor) {\r\n      const update = !actor.system.attributes.inspiration;\r\n      actor.update({ \"system.attributes.inspiration\": update });\r\n    }\r\n\r\n    /**\r\n     * Modify Custom Counter\r\n     * @private\r\n     * @param {object} event The event\r\n     * @param {object} actor The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async modifyCustomCounter(event, actor, actionId) {\r\n      const [id, type] = decodeURIComponent(actionId).split(\">\");\r\n      const isRightClick = this.isRightClick(event);\r\n      const isCtrl = this.isCtrl(event);\r\n\r\n      let value = actor.getFlag(CUSTOM_DND5E.ID, id) || {};\r\n\r\n      const setFlag = async (key, currentValue, newValue) => {\r\n        if (newValue !== currentValue) {\r\n          await actor.setFlag(CUSTOM_DND5E.ID, key, newValue);\r\n        }\r\n      };\r\n\r\n      const adjustValue = (key, currentValue = 0, increment = 1) => {\r\n        const newValue = isRightClick ? Math.max(0, currentValue - increment) : currentValue + increment;\r\n        setFlag(key, currentValue, newValue);\r\n      };\r\n\r\n      switch (type) {\r\n        case \"checkbox\":\r\n          await setFlag(id, !value);\r\n          break;\r\n\r\n        case \"fraction\":\r\n          if (isRightClick || (value.max && value.value < value.max) || !value.max) {\r\n            adjustValue(`${id}.value`, value.value);\r\n          }\r\n          break;\r\n\r\n        case \"number\":\r\n          adjustValue(id, value);\r\n          break;\r\n\r\n        case \"successFailure\":\r\n          value.success = value?.success ?? 0;\r\n          value.failure = value?.failure ?? 0;\r\n          if (isCtrl) {\r\n            adjustValue(`${id}.failure`, value.failure);\r\n          } else {\r\n            adjustValue(`${id}.success`, value.success);\r\n          }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Roll Ability\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollAbility(event, actor, actionId) {\r\n      if (!actor.system?.abilities) return;\r\n      actor.rollAbility(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Roll Ability Save\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollAbilitySave(event, actor, actionId) {\r\n      if (!actor.system?.abilities) return;\r\n      actor.rollAbilitySave(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Roll Ability Test\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollAbilityTest(event, actor, actionId) {\r\n      if (!actor.system?.abilities) return;\r\n      actor.rollAbilityTest(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Roll Death Save\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     */\r\n    rollDeathSave(event, actor) {\r\n      actor.rollDeathSave({ event });\r\n    }\r\n\r\n    /**\r\n     * Roll Magic Item\r\n     * @private\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async rollMagicItem(actor, actionId) {\r\n      const [itemId, magicEffectId] = actionId.split(\">\");\r\n\r\n      const magicItemActor = await MagicItems.actor(actor.id);\r\n      if (!magicItemActor) return;\r\n\r\n      // Magicitems module 3.0.0 does not support Item5e#use\r\n      magicItemActor.roll(itemId, magicEffectId);\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Roll Skill\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollSkill(event, actor, actionId) {\r\n      if (!actor.system?.skills) return;\r\n      actor.rollSkill(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Use Item\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    useItem(event, actor, actionId) {\r\n      const item = coreModule.api.Utils.getItem(actor, actionId);\r\n\r\n      if (this.#needsRecharge(item)) {\r\n        item.rollRecharge();\r\n      } else {\r\n        item.use({ event, legacy: false });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Needs Recharge\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {boolean}\r\n     */\r\n    #needsRecharge(item) {\r\n      return (item?.system?.uses?.period === \"recharge\" && !(item?.system?.uses?.value > 0));\r\n    }\r\n\r\n    /**\r\n     * Perform utility action\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {object} token    The token\r\n     * @param {string} actionId The action id\r\n     */\r\n    async performUtilityAction(event, actor, token, actionId) {\r\n      switch (actionId) {\r\n        case \"deathSave\":\r\n          this.rollDeathSave(event, actor); break;\r\n        case \"endTurn\":\r\n          if (!token || game.combat?.current?.tokenId !== token.id) break;\r\n          await game.combat?.nextTurn(); break;\r\n        case \"initiative\":\r\n          await this.rollInitiative(actor); break;\r\n        case \"inspiration\":\r\n          await this.modifyInspiration(actor); break;\r\n        case \"longRest\":\r\n          actor.longRest(); break;\r\n        case \"shortRest\":\r\n          actor.shortRest(); break;\r\n      }\r\n\r\n      // Update HUD\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Roll Initiative\r\n     * @param {object} actor The actor\r\n     * @private\r\n     */\r\n    async rollInitiative(actor) {\r\n      if (!actor) return;\r\n      await actor.rollInitiative({ createCombatants: true });\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Toggle Condition\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {object} token    The token\r\n     * @param {string} actionId The action id\r\n     */\r\n    async toggleCondition(event, actor, token, actionId) {\r\n      if (!token) return;\r\n\r\n      const isRightClick = this.isRightClick(event);\r\n      const statusEffect = CONFIG.statusEffects.find(statusEffect => statusEffect.id === actionId);\r\n      const isConvenient = statusEffect?.flags?.[\"dfreds-convenient-effects\"]?.isConvenient\r\n        ?? actionId.startsWith(\"Convenient Effect\");\r\n\r\n      if (game.dfreds && isConvenient) {\r\n        const effectName = statusEffect.name ?? statusEffect.label;\r\n        await game.dfreds.effectInterface.toggleEffect(effectName, { overlay: !!isRightClick });\r\n      } else {\r\n        const condition = this.#findCondition(actionId);\r\n        if (!condition) return;\r\n\r\n        const effect = this.#findEffect(actor, actionId);\r\n        if (effect?.disabled) { await effect.delete(); }\r\n\r\n        await actor.toggleStatusEffect(condition.id, { overlay: !!isRightClick });\r\n      }\r\n\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Find condition\r\n     * @private\r\n     * @param {string} actionId The action id\r\n     * @returns {object}        The condition\r\n     */\r\n    #findCondition(actionId) {\r\n      return CONFIG.statusEffects.find(effect => effect.id === actionId);\r\n    }\r\n\r\n    /**\r\n     * Find effect\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     * @returns {object}        The effect\r\n     */\r\n    #findEffect(actor, actionId) {\r\n      return actor.effects.find(effect => effect.statuses.every(status => status === actionId));\r\n    }\r\n\r\n    /**\r\n     * Toggle Effect\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async toggleEffect(event, actor, actionId) {\r\n      const effects = actor.effects.entries ? actor.effects.entries : actor.effects;\r\n      const actorEffect = effects.find(effect => effect.id === actionId);\r\n\r\n      const effect = actorEffect ?? actor.allApplicableEffects().find(effect => effect.id === actionId);\r\n      if (!effect) return;\r\n\r\n      const isRightClick = this.isRightClick(event);\r\n\r\n      if (isRightClick && actorEffect) {\r\n        await effect.delete();\r\n      } else {\r\n        await effect.update({ disabled: !effect.disabled });\r\n      }\r\n\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Handle action hover\r\n     * @override\r\n     * @param {object} event\r\n     * @param {string} encodedValue\r\n     */\r\n    async handleActionHover(event, encodedValue) {\r\n      const types = [\"feature\", \"item\", \"spell\", \"weapon\", \"magicItem\"];\r\n      const [actionType, actionId] = encodedValue.split(\"|\");\r\n\r\n      if (!types.includes(actionType)) return;\r\n\r\n      const item = coreModule.api.Utils.getItem(this.actor, actionId);\r\n\r\n      switch (event.type) {\r\n        case \"mouseenter\":\r\n        case \"mouseover\":\r\n          Hooks.call(\"tokenActionHudSystemActionHoverOn\", event, item);\r\n          break;\r\n        case \"mouseleave\":\r\n        case \"mouseout\":\r\n          Hooks.call(\"tokenActionHudSystemActionHoverOff\", event, item);\r\n          break;\r\n      }\r\n    }\r\n  };\r\n});\r\n","import { MODULE } from \"./constants.js\";\r\n\r\n/**\r\n *\r\n * @param updateFunc\r\n */\r\nexport function register(updateFunc) {\r\n  game.settings.register(MODULE.ID, \"abbreviateSkills\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.abbreviateSkills.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.abbreviateSkills.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showSlowActions\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showSlowActions.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showSlowActions.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"displaySpellInfo\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.displaySpellInfo.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.displaySpellInfo.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnchargedItems\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnchargedItems.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnchargedItems.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnequippedItems\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItems.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItems.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnequippedItemsNpcs\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItemsNpcs.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItemsNpcs.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnpreparedSpells\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnpreparedSpells.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnpreparedSpells.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showItemsWithoutActivationCosts\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showItemsWithoutActivationCosts.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showItemsWithoutActivationCosts.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n}\r\n","// System Module Imports\r\nimport { ActionHandler } from \"./action-handler.js\";\r\nimport { MagicItemActionHandlerExtender } from \"./magic-items-extender.js\";\r\nimport { RollHandler as Core } from \"./roll-handler.js\";\r\nimport { DEFAULTS } from \"./defaults.js\";\r\nimport * as systemSettings from \"./settings.js\";\r\n\r\nexport let SystemManager = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  SystemManager = class SystemManager extends coreModule.api.SystemManager {\r\n    /** @override */\r\n    getActionHandler() {\r\n      const actionHandler = new ActionHandler();\r\n      if (coreModule.api.Utils.isModuleActive(\"magic-items-2\")\r\n        || coreModule.api.Utils.isModuleActive(\"magicitems\")) {\r\n        actionHandler.addActionHandlerExtender(new MagicItemActionHandlerExtender(actionHandler));\r\n      }\r\n      return actionHandler;\r\n    }\r\n\r\n    /** @override */\r\n    getAvailableRollHandlers() {\r\n      let coreTitle = \"Core D&D5e\";\r\n\r\n      if (coreModule.api.Utils.isModuleActive(\"midi-qol\")) {\r\n        coreTitle += ` [supports ${coreModule.api.Utils.getModuleTitle(\"midi-qol\")}]`;\r\n      }\r\n\r\n      const choices = { core: coreTitle };\r\n      return choices;\r\n    }\r\n\r\n    /** @override */\r\n    getRollHandler(rollHandlerId) {\r\n      let rollHandler;\r\n      switch (rollHandlerId) {\r\n        case \"core\":\r\n        default:\r\n          rollHandler = new Core();\r\n          break;\r\n      }\r\n\r\n      return rollHandler;\r\n    }\r\n\r\n    /** @override */\r\n    registerSettings(onChangeFunction) {\r\n      systemSettings.register(onChangeFunction);\r\n    }\r\n\r\n    /** @override */\r\n    async registerDefaults() {\r\n      const defaults = DEFAULTS;\r\n      // If the 'Magic Items' module is active, then add a group for it\r\n      if (game.modules.get(\"magicitems\")?.active || game.modules.get(\"magic-items-2\")?.active) {\r\n        const name = coreModule.api.Utils.i18n(\"tokenActionHud.dnd5e.magicItems\");\r\n        defaults.groups.push(\r\n          {\r\n            id: \"magic-items\",\r\n            name,\r\n            listName: `Group: ${name}`,\r\n            type: \"system\"\r\n          }\r\n        );\r\n        defaults.groups.sort((a, b) => a.id.localeCompare(b.id));\r\n      }\r\n      return defaults;\r\n    }\r\n  };\r\n});\r\n","import { SystemManager } from \"./system-manager.js\";\r\nimport { MODULE, REQUIRED_CORE_MODULE_VERSION } from \"./constants.js\";\r\n\r\nHooks.on(\"tokenActionHudCoreApiReady\", async () => {\r\n  const module = game.modules.get(MODULE.ID);\r\n  module.api = {\r\n    requiredCoreModuleVersion: REQUIRED_CORE_MODULE_VERSION,\r\n    SystemManager\r\n  };\r\n  Hooks.call(\"tokenActionHudSystemReady\", module);\r\n});\r\n"],"names":["MODULE","ID","CORE_MODULE","REQUIRED_CORE_MODULE_VERSION","ACTION_TYPE","ability","check","condition","counter","effect","exhaustion","feature","item","save","skill","spell","utility","ACTIVATION_TYPE","action","group","bonus","icon","crew","day","hour","lair","minute","legendary","reaction","reactiondamage","reactionmanual","special","other","CONCENTRATION_ICON","CUSTOM_DND5E","COUNTERS","character","npc","FEATURE_GROUP_IDS","GROUP","_1stLevelSpells","id","name","spellMode","type","_2ndLevelSpells","_3rdLevelSpells","_4thLevelSpells","_5thLevelSpells","_6thLevelSpells","_7thLevelSpells","_8thLevelSpells","_9thLevelSpells","abilities","actions","activeFeatures","artificerInfusions","atWillSpells","backgroundFeatures","bonusActions","cantrips","channelDivinity","checks","classFeatures","combat","conditions","consumables","containers","counters","crewActions","defensiveTactics","eldritchInvocations","elementalDisciplines","equipment","equipped","feats","fightingStyles","huntersPrey","innateSpells","kiAbilities","lairActions","legendaryActions","loot","maneuvers","metamagicOptions","monsterFeatures","multiattacks","otherActions","pactBoons","pactSpells","passiveEffects","passiveFeatures","psionicPowers","raceFeatures","reactions","rests","runes","saves","skills","superiorHuntersDefense","temporaryEffects","token","tools","unequipped","weapons","PREPARED_ICON","PROFICIENCY_LEVEL_ICON","RARITY","common","uncommon","rare","veryRare","artifact","RITUAL_ICON","SPELL_GROUP_IDS","Utils","Hooks","once","async","coreModule","static","key","defaultValue","value","game","settings","get","api","Logger","debug","set","ActionHandler","featureActions","inventoryActions","spellActions","groupIds","this","actors","actor","getValidActors","tokens","getValidTokens","items","sortItemsByName","discardSlowItems","abbreviateSkills","getSetting","displaySpellInfo","showItemsWithoutActivationCosts","showUnchargedItems","showUnequippedItems","showUnpreparedSpells","activationgroupIds","inventorygroupIds","buildCharacterActions","buildVehicleActions","buildMultipleTokenActions","Promise","all","buildConditions","buildEffects","buildFeatures","buildInventory","buildSpells","buildAbilities","buildCombat","buildCounters","buildExhaustion","buildRests","buildSkills","buildUtility","actionType","groupId","system","CONFIG","DND5E","length","Object","entries","filter","map","abilityId","label","mod","capitalize","encodedValue","join","delimiter","icon1","getProficiencyIcon","proficient","info1","text","getModifier","info2","listName","getListName","addActions","data","groupData","actionData","activationItems","Map","activationType","activities","contents","activation","has","values","groupDataClone","includes","defaultSelected","parentgroupData","addGroup","addGroupInfo","buildActions","combatType","initiative","current","tokenId","endTurn","tokenIds","getControlledTokens","combatants","combatant","getInfo1","class","i18n","localize","cssClass","every","statusEffects","hasCondition","effects","some","statuses","status","disabled","img","getImage","tooltip","getTooltip","getConditionTooltipData","isModuleActive","keys","_","visible","active","attributes","death","success","failure","getFlag","max","encodeURIComponent","allApplicableEffects","size","conditionIds","Set","conditionTypes","dnd5e","utils","staticID","effectId","isSuppressed","parent","identified","user","isGM","isTemporary","featuresMap","featureType","background","monster","race","classFeatureType","artificerInfusion","defensiveTactic","eldritchInvocation","elementalDiscipline","fightingStyle","ki","maneuver","metamagic","multiattack","pact","psionicPower","rune","subType","subtype","buildActivations","inventoryMap","quantity","isActiveItem","isUsableItem","isEquippedItem","shortRest","longRest","total","error","spells","spellsMap","isUsableSpell","preparation","mode","level","systemSpells","reverse","spellSlotsMap","spellSlotAvailable","pactSlotAvailable","pactSlot","hasValue","hasMax","hasLevel","slotAvailable","startsWith","slotsAvailable","f","spellSlotModes","levelInfo","slots","info","utilityTypes","deathSave","inspiration","hp","utilityType","options","getAction","entity","_id","hasOwn","getItemInfo","getTooltipData","getActivationTypeIcon","icon2","getPreparedIcon","icon3","getConcentrationIcon","info3","activationTypes","activityActivationTypes","uses","preparationModes","spellPreparationModes","preparationMode","prepared","actionName","getSpellInfo","getQuantityData","getUsesData","getConsumeData","components","properties","title","componentsArray","vocal","somatic","material","ritual","push","allowedTypes","per","recovery","period","limitedUsePeriods","perPeriod","spent","firstActivity","firstTarget","consumption","targets","consumeId","target","consumeType","consumeAmount","parentId","substr","lastIndexOf","foundry","getProperty","slowActivationTypes","proficiencyLevels","abilityActivationTypes","tooltipsSetting","unidentified","description","modifiers","rarity","traits","chatProperties","equippableItemCardProperties","labels","range","duration","p","getWeaponProperties","journalEntry","fromUuid","reference","content","relativeTo","tooltipData","nameHtml","descriptionLocalised","TextEditor","enrichHTML","secrets","rarityHtml","propertiesHtml","property","traitsHtml","trait","traits2Html","traits2","traitsAltHtml","traitsAlt","modifiersHtml","modifier","enabled","tagsJoined","tagsHtml","weaponProperties","selected","validProperties","weapon","itemProperties","DEFAULTS","groups","forEach","groupsArray","layout","nestId","MagicItemActionHandlerExtender","ActionHandlerExtender","constructor","actionHandler","super","MagicItems","magicItems","parentGroupData","magicItem","attuned","_isItemAttuned","_isItemEquipped","charges","ownedEntries","entry","baseLevel","attunment","attunementTypes","REQUIRED","RollHandler","register","updateFunc","hint","scope","config","Boolean","default","onChange","event","actionId","split","handleAction","rollAbility","rollAbilityTest","rollAbilitySave","toggleCondition","modifyCounter","toggleEffect","modifyExhaustion","isRenderItem","renderItem","useItem","rollMagicItem","rollSkill","performUtilityAction","rollDeathSave","modifyInspiration","modifyCustomCounter","isRightClick","currentExhaustion","newExhaustion","update","decodeURIComponent","isCtrl","setFlag","currentValue","newValue","adjustValue","increment","Math","itemId","magicEffectId","magicItemActor","roll","callAll","getItem","needsRecharge","rollRecharge","use","legacy","nextTurn","rollInitiative","createCombatants","statusEffect","find","isConvenient","flags","dfreds","effectName","effectInterface","overlay","findCondition","findEffect","delete","toggleStatusEffect","actorEffect","call","SystemManager","getActionHandler","addActionHandlerExtender","getAvailableRollHandlers","coreTitle","getModuleTitle","core","getRollHandler","rollHandlerId","rollHandler","Core","registerSettings","onChangeFunction","systemSettings.register","defaults","modules","sort","a","b","localeCompare","on","module","requiredCoreModuleVersion"],"mappings":"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"}