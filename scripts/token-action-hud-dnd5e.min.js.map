{"version":3,"file":"token-action-hud-dnd5e.min.js","sources":["constants.js","defaults.js","settings.js","utils.js","action-handler.js","magic-items-extender.js","roll-handler.js","system-manager.js","init.js"],"sourcesContent":["/**\r\n * Module-based constants\r\n */\r\nexport const MODULE = {\r\n  ID: \"token-action-hud-dnd5e\"\r\n};\r\n\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Core module\r\n */\r\nexport const CORE_MODULE = {\r\n  ID: \"token-action-hud-core\"\r\n};\r\n\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Core module version required by the system module\r\n */\r\nexport const REQUIRED_CORE_MODULE_VERSION = \"2.0\";\r\n\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Action type\r\n */\r\nexport const ACTION_TYPE = {\r\n  ability: \"DND5E.Ability\",\r\n  check: \"tokenActionHud.dnd5e.check\",\r\n  condition: \"tokenActionHud.dnd5e.condition\",\r\n  counter: \"tokenActionHud.dnd5e.counter\",\r\n  effect: \"DND5E.Effect\",\r\n  exhaustion: \"DND5E.Exhaustion\",\r\n  feature: \"TYPES.Item.feat\",\r\n  item: \"tokenActionHud.dnd5e.item\",\r\n  save: \"DND5E.SAVE.Title.one\",\r\n  skill: \"tokenActionHud.dnd5e.skill\",\r\n  spell: \"TYPES.Item.spell\",\r\n  utility: \"DND5E.ActionUtil\"\r\n};\r\n\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Activation types\r\n */\r\nexport const ACTIVATION_TYPE = {\r\n  action: { group: \"actions\" },\r\n  bonus: { group: \"bonus-actions\", icon: \"fas fa-plus\" },\r\n  crew: { group: \"crew-actions\", icon: \"fas fa-users\" },\r\n  day: { icon: \"fas fa-hourglass-end\" },\r\n  hour: { icon: \"fas fa-hourglass-half\" },\r\n  lair: { group: \"lair-actions\", icon: \"fas fa-home\" },\r\n  minute: { icon: \"fas fa-hourglass-start\" },\r\n  legendary: { group: \"legendary-actions\", icon: \"fas fas fa-dragon\" },\r\n  reaction: { group: \"reactions\", icon: \"fas fa-bolt\" },\r\n  reactiondamage: { group: \"reactions\", icon: \"fas fa-bolt\" },\r\n  reactionmanual: { group: \"reactions\", icon: \"fas fa-bolt\" },\r\n  special: { group: \"special-actions\", icon: \"fas fa-star\" },\r\n  other: { group: \"other-actions\" }\r\n};\r\n\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Concentration icon\r\n */\r\nexport const CONCENTRATION_ICON = \"systems/dnd5e/icons/svg/statuses/concentrating.svg\";\r\n\r\n/* -------------------------------------------- */\r\n\r\nexport const CUSTOM_DND5E = {\r\n  ID: \"custom-dnd5e\",\r\n  COUNTERS: {\r\n    character: \"character-counters\",\r\n    group: \"group-counters\",\r\n    npc: \"npc-counters\"\r\n  }\r\n};\r\n\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Feature Group IDs\r\n */\r\nexport const FEATURE_GROUP_IDS = [\r\n  \"activeFeatures\",\r\n  \"passiveFeatures\",\r\n  \"backgroundFeatures\",\r\n  \"classFeatures\",\r\n  \"feats\",\r\n  \"monsterFeatures\",\r\n  \"raceFeatures\",\r\n  \"artificerInfusions\",\r\n  \"channelDivinity\",\r\n  \"defensiveTactics\",\r\n  \"eldritchInvocations\",\r\n  \"elementalDisciplines\",\r\n  \"fightingStyles\",\r\n  \"huntersPrey\",\r\n  \"kiAbilities\",\r\n  \"maneuvers\",\r\n  \"metamagicOptions\",\r\n  \"multiattacks\",\r\n  \"pactBoons\",\r\n  \"psionicPowers\",\r\n  \"runes\",\r\n  \"superiorHuntersDefense\"\r\n];\r\n\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Groups\r\n */\r\nexport const GROUP = {\r\n  _1stLevelSpells: { id: \"1st-level-spells\", name: \"tokenActionHud.dnd5e.1stLevelSpells\", spellMode: 1, type: \"system\" },\r\n  _2ndLevelSpells: { id: \"2nd-level-spells\", name: \"tokenActionHud.dnd5e.2ndLevelSpells\", spellMode: 2, type: \"system\" },\r\n  _3rdLevelSpells: { id: \"3rd-level-spells\", name: \"tokenActionHud.dnd5e.3rdLevelSpells\", spellMode: 3, type: \"system\" },\r\n  _4thLevelSpells: { id: \"4th-level-spells\", name: \"tokenActionHud.dnd5e.4thLevelSpells\", spellMode: 4, type: \"system\" },\r\n  _5thLevelSpells: { id: \"5th-level-spells\", name: \"tokenActionHud.dnd5e.5thLevelSpells\", spellMode: 5, type: \"system\" },\r\n  _6thLevelSpells: { id: \"6th-level-spells\", name: \"tokenActionHud.dnd5e.6thLevelSpells\", spellMode: 6, type: \"system\" },\r\n  _7thLevelSpells: { id: \"7th-level-spells\", name: \"tokenActionHud.dnd5e.7thLevelSpells\", spellMode: 7, type: \"system\" },\r\n  _8thLevelSpells: { id: \"8th-level-spells\", name: \"tokenActionHud.dnd5e.8thLevelSpells\", spellMode: 8, type: \"system\" },\r\n  _9thLevelSpells: { id: \"9th-level-spells\", name: \"tokenActionHud.dnd5e.9thLevelSpells\", spellMode: 9, type: \"system\" },\r\n  abilities: { id: \"abilities\", name: \"tokenActionHud.dnd5e.abilities\", type: \"system\" },\r\n  actions: { id: \"actions\", name: \"DND5E.ActionPl\", type: \"system\" },\r\n  activeFeatures: { id: \"active-features\", name: \"tokenActionHud.dnd5e.activeFeatures\", type: \"system\" },\r\n  additionalSpells: { id: \"additional-spells\", name: \"DND5E.CAST.SECTIONS.Spellbook\", type: \"system\" },\r\n  artificerInfusions: { id: \"artificer-infusions\", name: \"tokenActionHud.dnd5e.artificerInfusions\", type: \"system\" },\r\n  atWillSpells: { id: \"at-will-spells\", name: \"tokenActionHud.dnd5e.atWillSpells\", spellMode: \"atwill\", type: \"system\" },\r\n  backgroundFeatures: { id: \"background-features\", name: \"tokenActionHud.dnd5e.backgroundFeatures\", type: \"system\" },\r\n  bonusActions: { id: \"bonus-actions\", name: \"tokenActionHud.dnd5e.bonusActions\", type: \"system\" },\r\n  cantrips: { id: \"cantrips\", name: \"tokenActionHud.dnd5e.cantrips\", spellMode: 0, type: \"system\" },\r\n  channelDivinity: { id: \"channel-divinity\", name: \"tokenActionHud.dnd5e.channelDivinity\", type: \"system\" },\r\n  checks: { id: \"checks\", name: \"tokenActionHud.dnd5e.checks\", type: \"system\" },\r\n  classFeatures: { id: \"class-features\", name: \"tokenActionHud.dnd5e.classFeatures\", type: \"system\" },\r\n  combat: { id: \"combat\", name: \"tokenActionHud.combat\", type: \"system\" },\r\n  conditions: { id: \"conditions\", name: \"tokenActionHud.dnd5e.conditions\", type: \"system\" },\r\n  consumables: { id: \"consumables\", name: \"TYPES.Item.consumablePl\", type: \"system\" },\r\n  containers: { id: \"containers\", name: \"TYPES.Item.containerPl\", type: \"system\" },\r\n  counters: { id: \"counters\", name: \"tokenActionHud.dnd5e.counters\", type: \"system\" },\r\n  crewActions: { id: \"crew-actions\", name: \"tokenActionHud.dnd5e.crewActions\", type: \"system\" },\r\n  defensiveTactics: { id: \"defensive-tactics\", name: \"tokenActionHud.dnd5e.defensiveTactics\", type: \"system\" },\r\n  eldritchInvocations: { id: \"eldritch-invocations\", name: \"tokenActionHud.dnd5e.eldritchInvocations\", type: \"system\" },\r\n  elementalDisciplines: { id: \"elemental-disciplines\", name: \"tokenActionHud.dnd5e.elementalDisciplines\", type: \"system\" },\r\n  equipment: { id: \"equipment\", name: \"TYPES.Item.equipmentPl\", type: \"system\" },\r\n  equipped: { id: \"equipped\", name: \"DND5E.Equipped\", type: \"system\" },\r\n  exhaustion: { id: \"exhaustion\", name: \"DND5E.Exhaustion\", type: \"system\" },\r\n  feats: { id: \"feats\", name: \"tokenActionHud.dnd5e.feats\", type: \"system\" },\r\n  fightingStyles: { id: \"fighting-styles\", name: \"tokenActionHud.dnd5e.fightingStyles\", type: \"system\" },\r\n  huntersPrey: { id: \"hunters-prey\", name: \"tokenActionHud.dnd5e.huntersPrey\", type: \"system\" },\r\n  innateSpells: { id: \"innate-spells\", name: \"tokenActionHud.dnd5e.innateSpells\", spellMode: \"innate\", type: \"system\" },\r\n  kiAbilities: { id: \"ki-abilities\", name: \"tokenActionHud.dnd5e.kiAbilities\", type: \"system\" },\r\n  lairActions: { id: \"lair-actions\", name: \"tokenActionHud.dnd5e.lairActions\", type: \"system\" },\r\n  legendaryActions: { id: \"legendary-actions\", name: \"tokenActionHud.dnd5e.legendaryActions\", type: \"system\" },\r\n  loot: { id: \"loot\", name: \"TYPES.Item.lootPl\", type: \"system\" },\r\n  maneuvers: { id: \"maneuvers\", name: \"tokenActionHud.dnd5e.maneuvers\", type: \"system\" },\r\n  metamagicOptions: { id: \"metamagic-options\", name: \"tokenActionHud.dnd5e.metamagicOptions\", type: \"system\" },\r\n  monsterFeatures: { id: \"monster-features\", name: \"tokenActionHud.dnd5e.monsterFeatures\", type: \"system\" },\r\n  multiattacks: { id: \"multiattacks\", name: \"tokenActionHud.dnd5e.multiattacks\", type: \"system\" },\r\n  otherActions: { id: \"other-actions\", name: \"tokenActionHud.dnd5e.otherActions\", type: \"system\" },\r\n  pactBoons: { id: \"pact-boons\", name: \"tokenActionHud.dnd5e.pactBoons\", type: \"system\" },\r\n  pactSpells: { id: \"pact-spells\", name: \"tokenActionHud.dnd5e.pactSpells\", spellMode: \"pact\", type: \"system\" },\r\n  passiveEffects: { id: \"passive-effects\", name: \"DND5E.EffectPassive\", type: \"system\" },\r\n  passiveFeatures: { id: \"passive-features\", name: \"tokenActionHud.dnd5e.passiveFeatures\", type: \"system\" },\r\n  psionicPowers: { id: \"psionic-powers\", name: \"tokenActionHud.dnd5e.psionicPowers\", type: \"system\" },\r\n  raceFeatures: { id: \"race-features\", name: \"tokenActionHud.dnd5e.raceFeatures\", type: \"system\" },\r\n  reactions: { id: \"reactions\", name: \"DND5E.ReactionPl\", type: \"system\" },\r\n  rests: { id: \"rests\", name: \"tokenActionHud.dnd5e.rests\", type: \"system\" },\r\n  runes: { id: \"runes\", name: \"tokenActionHud.dnd5e.runes\", type: \"system\" },\r\n  saves: { id: \"saves\", name: \"DND5E.ClassSaves\", type: \"system\" },\r\n  skills: { id: \"skills\", name: \"tokenActionHud.dnd5e.skills\", type: \"system\" },\r\n  superiorHuntersDefense: { id: \"superior-hunters-defense\", name: \"tokenActionHud.dnd5e.superiorHuntersDefense\", type: \"system\" },\r\n  temporaryEffects: { id: \"temporary-effects\", name: \"DND5E.EffectTemporary\", type: \"system\" },\r\n  token: { id: \"token\", name: \"tokenActionHud.token\", type: \"system\" },\r\n  tools: { id: \"tools\", name: \"TYPES.Item.toolPl\", type: \"system\" },\r\n  unequipped: { id: \"unequipped\", name: \"DND5E.Unequipped\", type: \"system\" },\r\n  utility: { id: \"utility\", name: \"tokenActionHud.utility\", type: \"system\" },\r\n  weapons: { id: \"weapons\", name: \"TYPES.Item.weaponPl\", type: \"system\" }\r\n};\r\n\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Prepared icon\r\n */\r\nexport const PREPARED_ICON = \"fas fa-sun\";\r\n\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Proficiency level icons\r\n */\r\nexport const PROFICIENCY_LEVEL_ICON = {\r\n  0: \"fa-regular fa-circle\",\r\n  0.5: \"fa-regular fa-circle-half-stroke\",\r\n  1: \"fa-solid fa-circle\",\r\n  2: \"fa-regular fa-circle-dot\"\r\n};\r\n\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Rarity\r\n */\r\nexport const RARITY = {\r\n  common: \"tokenActionHud.dnd5e.common\",\r\n  uncommon: \"tokenActionHud.dnd5e.uncommon\",\r\n  rare: \"tokenActionHud.dnd5e.rare\",\r\n  veryRare: \"tokenActionHud.dnd5e.veryRare\",\r\n  legendary: \"tokenActionHud.dnd5e.legendary\",\r\n  artifact: \"tokenActionHud.dnd5e.artifact\"\r\n};\r\n\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Ritual icon\r\n */\r\nexport const RITUAL_ICON = \"fas fa-circle-r\";\r\n\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Spell Group IDs\r\n */\r\nexport const SPELL_GROUP_IDS = [\r\n  \"cantrips\",\r\n  \"_1stLevelSpells\",\r\n  \"_2ndLevelSpells\",\r\n  \"_3rdLevelSpells\",\r\n  \"_4thLevelSpells\",\r\n  \"_5thLevelSpells\",\r\n  \"_6thLevelSpells\",\r\n  \"_7thLevelSpells\",\r\n  \"_8thLevelSpells\",\r\n  \"_9thLevelSpells\",\r\n  \"atWillSpells\",\r\n  \"innateSpells\",\r\n  \"pactSpells\",\r\n  \"additionalSpells\"\r\n];\r\n","import { GROUP } from \"./constants.js\";\r\n\r\n/**\r\n * Default categories and groups\r\n */\r\nexport let DEFAULTS = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  const groups = GROUP;\r\n  Object.values(groups).forEach(group => {\r\n    group.name = coreModule.api.Utils.i18n(group.name);\r\n    group.listName = `Group: ${coreModule.api.Utils.i18n(group.name)}`;\r\n  });\r\n  const groupsArray = Object.values(groups);\r\n  DEFAULTS = {\r\n    layout: [\r\n      {\r\n        nestId: \"inventory\",\r\n        id: \"inventory\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Inventory\"),\r\n        groups: [\r\n          { ...groups.weapons, nestId: \"inventory_weapons\" },\r\n          { ...groups.equipment, nestId: \"inventory_equipment\" },\r\n          { ...groups.consumables, nestId: \"inventory_consumables\" },\r\n          { ...groups.tools, nestId: \"inventory_tools\" },\r\n          { ...groups.containers, nestId: \"inventory_containers\" },\r\n          { ...groups.loot, nestId: \"inventory_loot\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"features\",\r\n        id: \"features\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Features\"),\r\n        groups: [\r\n          { ...groups.activeFeatures, nestId: \"features_active-features\" },\r\n          { ...groups.passiveFeatures, nestId: \"features_passive-features\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"spells\",\r\n        id: \"spells\",\r\n        name: coreModule.api.Utils.i18n(\"TYPES.Item.spellPl\"),\r\n        groups: [\r\n          { ...groups.atWillSpells, nestId: \"spells_at-will-spells\" },\r\n          { ...groups.innateSpells, nestId: \"spells_innate-spells\" },\r\n          { ...groups.pactSpells, nestId: \"spells_pact-spells\" },\r\n          { ...groups.cantrips, nestId: \"spells_cantrips\" },\r\n          { ...groups._1stLevelSpells, nestId: \"spells_1st-level-spells\" },\r\n          { ...groups._2ndLevelSpells, nestId: \"spells_2nd-level-spells\" },\r\n          { ...groups._3rdLevelSpells, nestId: \"spells_3rd-level-spells\" },\r\n          { ...groups._4thLevelSpells, nestId: \"spells_4th-level-spells\" },\r\n          { ...groups._5thLevelSpells, nestId: \"spells_5th-level-spells\" },\r\n          { ...groups._6thLevelSpells, nestId: \"spells_6th-level-spells\" },\r\n          { ...groups._7thLevelSpells, nestId: \"spells_7th-level-spells\" },\r\n          { ...groups._8thLevelSpells, nestId: \"spells_8th-level-spells\" },\r\n          { ...groups._9thLevelSpells, nestId: \"spells_9th-level-spells\" },\r\n          { ...groups.additionalSpells, nestId: \"spells_additional-spells\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"attributes\",\r\n        id: \"attributes\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Attributes\"),\r\n        groups: [\r\n          { ...groups.abilities, nestId: \"attributes_abilities\" },\r\n          { ...groups.skills, nestId: \"attributes_skills\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"effects\",\r\n        id: \"effects\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Effects\"),\r\n        groups: [\r\n          { ...groups.temporaryEffects, nestId: \"effects_temporary-effects\" },\r\n          { ...groups.passiveEffects, nestId: \"effects_passive-effects\" },\r\n          { ...groups.conditions, nestId: \"effects_conditions\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"utility\",\r\n        id: \"utility\",\r\n        name: coreModule.api.Utils.i18n(\"tokenActionHud.utility\"),\r\n        groups: [\r\n          { ...groups.combat, nestId: \"utility_combat\" },\r\n          { ...groups.token, nestId: \"utility_token\" },\r\n          { ...groups.rests, nestId: \"utility_rests\" },\r\n          { ...groups.utility, nestId: \"utility_utility\" }\r\n        ]\r\n      }\r\n    ],\r\n    groups: groupsArray\r\n  };\r\n});\r\n","import { MODULE } from \"./constants.js\";\r\n\r\n/**\r\n *\r\n * @param updateFunc\r\n */\r\nexport function register(updateFunc) {\r\n  game.settings.register(MODULE.ID, \"abbreviateSkills\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.abbreviateSkills.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.abbreviateSkills.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showSlowActions\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showSlowActions.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showSlowActions.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"displaySpellInfo\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.displaySpellInfo.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.displaySpellInfo.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnchargedItems\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnchargedItems.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnchargedItems.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnequippedItems\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItems.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItems.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnequippedItemsNpcs\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItemsNpcs.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItemsNpcs.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnpreparedSpells\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnpreparedSpells.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnpreparedSpells.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showItemsWithoutActivationCosts\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showItemsWithoutActivationCosts.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showItemsWithoutActivationCosts.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n}\r\n","import { MODULE } from \"./constants.js\";\r\n\r\nexport let Utils = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  Utils = class Utils {\r\n    /**\r\n     * Capitalize the first letter of every word\r\n     * @param {string} value The string to capitalize\r\n     * @returns {string}     The capitalized string\r\n     */\r\n    static capitalize(value) {\r\n      return value.replace(\r\n        /\\w\\S*/g,\r\n        text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()\r\n      );\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Get setting value\r\n     * @param {string} key The key\r\n     * @param {string=null} defaultValue The default value\r\n     * @returns {*} The setting value\r\n     */\r\n    static getSetting(key, defaultValue = null) {\r\n      let value = defaultValue ?? null;\r\n      try {\r\n        value = game.settings.get(MODULE.ID, key);\r\n      } catch{\r\n        coreModule.api.Logger.debug(`Setting '${key}' not found`);\r\n      }\r\n      return value;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Set setting value\r\n     * @param {string} key The key\r\n     * @param {string} value The value\r\n     */\r\n    static async setSetting(key, value) {\r\n      try {\r\n        value = await game.settings.set(MODULE.ID, key, value);\r\n        coreModule.api.Logger.debug(`Setting '${key}' set to '${value}'`);\r\n      } catch{\r\n        coreModule.api.Logger.debug(`Setting '${key}' not found`);\r\n      }\r\n    }\r\n  };\r\n});\r\n","// System Module Imports\r\nimport {\r\n  ACTIVATION_TYPE, ACTION_TYPE, CONCENTRATION_ICON, CUSTOM_DND5E, FEATURE_GROUP_IDS,\r\n  GROUP, PREPARED_ICON, PROFICIENCY_LEVEL_ICON, RARITY, SPELL_GROUP_IDS\r\n} from \"./constants.js\";\r\nimport { Utils } from \"./utils.js\";\r\n\r\nexport let ActionHandler = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  ActionHandler = class ActionHandler extends coreModule.api.ActionHandler {\r\n    // Initialize action variables\r\n    featureActions = null;\r\n\r\n    inventoryActions = null;\r\n\r\n    spellActions = null;\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build System Actions\r\n     * @override\r\n     * @param {Array} groupIds\r\n     * @returns {object}\r\n     */\r\n    async buildSystemActions(groupIds) {\r\n      // Set actor and token variables\r\n      this.actors = (!this.actor) ? this.#getValidActors() : [this.actor];\r\n      this.tokens = (!this.token) ? this.#getValidTokens() : [this.token];\r\n\r\n      // Set items variable\r\n      if (this.actor) {\r\n        this.items = coreModule.api.Utils.sortItemsByName(this.#discardSlowItems(this.actor.items));\r\n      }\r\n\r\n      // Set settings variables\r\n      this.abbreviateSkills = Utils.getSetting(\"abbreviateSkills\");\r\n      this.displaySpellInfo = Utils.getSetting(\"displaySpellInfo\");\r\n      this.showItemsWithoutActivationCosts = Utils.getSetting(\"showItemsWithoutActivationCosts\");\r\n      this.showUnchargedItems = Utils.getSetting(\"showUnchargedItems\");\r\n      this.showUnequippedItems = Utils.getSetting(\"showUnequippedItems\");\r\n      if (this.actor?.type === \"npc\" && !this.showUnequippedItems) {\r\n        this.showUnequippedItems = Utils.getSetting(\"showUnequippedItemsNpcs\");\r\n      }\r\n      this.showUnpreparedSpells = Utils.getSetting(\"showUnpreparedSpells\");\r\n\r\n      this.activationgroupIds = [\r\n        \"actions\",\r\n        \"bonus-actions\",\r\n        \"crew-actions\",\r\n        \"lair-actions\",\r\n        \"legendary-actions\",\r\n        \"reactions\",\r\n        \"other-actions\"\r\n      ];\r\n\r\n      if (this.actor?.type === \"character\" || this.actor?.type === \"npc\") {\r\n        this.inventorygroupIds = [\r\n          \"equipped\",\r\n          \"consumables\",\r\n          \"containers\",\r\n          \"equipment\",\r\n          \"loot\",\r\n          \"tools\",\r\n          \"weapons\",\r\n          \"unequipped\"\r\n        ];\r\n\r\n        await this.#buildCharacterActions();\r\n      } else if (this.actor?.type === \"vehicle\") {\r\n        this.inventorygroupIds = [\r\n          \"consumables\",\r\n          \"equipment\",\r\n          \"tools\",\r\n          \"weapons\"\r\n        ];\r\n\r\n        await this.#buildVehicleActions();\r\n      } else if (!this.actor) {\r\n        await this.#buildMultipleTokenActions();\r\n      }\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build character actions\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    async #buildCharacterActions() {\r\n      await Promise.all([\r\n        this.#buildConditions(),\r\n        this.#buildEffects(),\r\n        this.#buildFeatures(),\r\n        this.#buildInventory(),\r\n        this.#buildSpells()\r\n      ]);\r\n      this.#buildAbilities(\"ability\", \"abilities\");\r\n      this.#buildAbilities(\"check\", \"checks\");\r\n      this.#buildAbilities(\"save\", \"saves\");\r\n      this.#buildCombat();\r\n      this.#buildCounters();\r\n      this.#buildExhaustion();\r\n      this.#buildRests();\r\n      this.#buildSkills();\r\n      this.#buildUtility();\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build vehicle actions\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    async #buildVehicleActions() {\r\n      await Promise.all([\r\n        this.#buildConditions(),\r\n        this.#buildEffects(),\r\n        this.#buildFeatures(),\r\n        this.#buildInventory()\r\n      ]);\r\n      this.#buildAbilities(\"ability\", \"abilities\");\r\n      this.#buildAbilities(\"check\", \"checks\");\r\n      this.#buildAbilities(\"save\", \"saves\");\r\n      this.#buildCombat();\r\n      this.#buildUtility();\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build multiple token actions\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    async #buildMultipleTokenActions() {\r\n      this.#buildAbilities(\"ability\", \"abilities\");\r\n      this.#buildAbilities(\"check\", \"checks\");\r\n      this.#buildAbilities(\"save\", \"saves\");\r\n      this.#buildCombat();\r\n      await this.#buildConditions();\r\n      this.#buildRests();\r\n      this.#buildSkills();\r\n      this.#buildUtility();\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build abilities\r\n     * @private\r\n     * @param {string} actionType\r\n     * @param {string} groupId\r\n     */\r\n    #buildAbilities(actionType, groupId) {\r\n      // Get abilities and exit if none exist\r\n      const abilities = this.actor?.system.abilities || CONFIG.DND5E.abilities;\r\n      if (abilities.length === 0) return;\r\n\r\n      // Get actions\r\n      const actions = Object.entries(abilities)\r\n        .filter(ability => abilities[ability[0]].value !== 0)\r\n        .map(([abilityId, ability]) => {\r\n          const name = CONFIG.DND5E.abilities[abilityId].label;\r\n          // ability.save deprecated in dnd5e 4.3.\r\n          const abilitySaveValue = ability?.save?.value ?? ability?.save;\r\n\r\n          const mod = (groupId === \"saves\") ? abilitySaveValue : ability?.mod;\r\n          return {\r\n            id: `${actionType}-${abilityId}`,\r\n            name: (this.abbreviateSkills) ? Utils.capitalize(abilityId) : name,\r\n            icon1: (groupId !== \"checks\") ? this.#getProficiencyIcon(abilities[abilityId].proficient) : \"\",\r\n            info1: (this.actor) ? {\r\n              text: coreModule.api.Utils.getModifier(mod),\r\n              title: `${game.i18n.localize(\"DND5E.ActionAbil\")}: ${coreModule.api.Utils.getModifier(mod)}`\r\n            } : null,\r\n            info2: (this.actor && groupId === \"abilities\") ? {\r\n              text: `(${coreModule.api.Utils.getModifier(abilitySaveValue)})`,\r\n              title: `${game.i18n.localize(\"DND5E.SavingThrow\")}: ${coreModule.api.Utils.getModifier(abilitySaveValue)}`\r\n            } : null,\r\n            listName: this.#getListName(actionType, name),\r\n            system: { actionType, actionId: abilityId }\r\n          };\r\n        });\r\n\r\n      // Add actions to action list\r\n      this.addActions(actions, { id: groupId });\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build activations\r\n     * @public\r\n     * @param {object} data  groupData, actionData, actionType\r\n     */\r\n    async buildActivations(data) {\r\n      const { groupData, actionData, actionType = \"item\" } = data;\r\n\r\n      // Create map of items according to activation type\r\n      const activationItems = new Map();\r\n\r\n      // Loop items and add to activationItems\r\n      for (const [key, value] of actionData) {\r\n        const activationType = value.system?.activities?.contents[0]?.activation?.type;\r\n        const groupId = ACTIVATION_TYPE[activationType]?.group ?? \"other\";\r\n        if (!activationItems.has(groupId)) activationItems.set(groupId, new Map());\r\n        activationItems.get(groupId).set(key, value);\r\n      }\r\n\r\n      // Loop through action group ids\r\n      for (const value of Object.values(ACTIVATION_TYPE)) {\r\n        const group = value.group;\r\n\r\n        // Skip if no items exist\r\n        if (!activationItems.has(group)) continue;\r\n\r\n        // Clone and add to group data\r\n        const groupDataClone = { ...groupData, id: `${group}+${groupData.id}`, type: \"system-derived\" };\r\n\r\n        // Set Equipped and Unequipped groups to not selected by default\r\n        if ([\"equipped\", \"unequipped\"].includes(groupData.id)) { groupDataClone.defaultSelected = false; }\r\n\r\n        // Create parent group data\r\n        const parentgroupData = { id: group, type: \"system\" };\r\n\r\n        // Add group to HUD\r\n        await this.addGroup(groupDataClone, parentgroupData);\r\n\r\n        // Add spell slot info to group\r\n        if (actionType === \"spell\") { this.addGroupInfo(groupDataClone); }\r\n\r\n        // Build actions\r\n        await this.buildActions({\r\n          groupData: groupDataClone,\r\n          actionData: activationItems.get(group),\r\n          actionType\r\n        });\r\n      }\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build combat\r\n     * @private\r\n     */\r\n    #buildCombat() {\r\n      // If token's turn, include endTurn\r\n      const combatType = {\r\n        initiative: \"tokenActionHud.dnd5e.rollInitiative\",\r\n        ...(game.combat?.current?.tokenId === this.token?.id && { endTurn: \"tokenActionHud.endTurn\" })\r\n      };\r\n\r\n      const tokens = coreModule.api.Utils.getControlledTokens();\r\n      const tokenIds = tokens?.map(token => token.id);\r\n      const combatants = (game.combat)\r\n        ? game.combat.combatants.filter(combatant => tokenIds.includes(combatant.tokenId))\r\n        : [];\r\n\r\n      const getInfo1 = id => {\r\n        if (id === \"initiative\" && combatants.length === 1) {\r\n          const currentInitiative = combatants[0].initiative;\r\n          return { class: \"tah-spotlight\", text: currentInitiative };\r\n        }\r\n        return {};\r\n      };\r\n\r\n      const getActive = () => { return combatants.length > 0 && (combatants.every(combatant => combatant?.initiative)) ? \" active\" : \"\";};\r\n\r\n      // Get actions\r\n      const actionType = \"utility\";\r\n      const actions = Object.entries(combatType).map(([id, name]) => {\r\n        return {\r\n          id,\r\n          name: game.i18n.localize(name),\r\n          info1: getInfo1(id),\r\n          cssClass: (id === \"initiative\" ) ? `toggle${getActive()}` : \"\",\r\n          listName: this.#getListName(actionType, name),\r\n          system: { actionType, actionId: id }\r\n        };\r\n      });\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"combat\" });\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build conditions\r\n     * @private\r\n     */\r\n    async #buildConditions() {\r\n      if (this.tokens?.length === 0) return;\r\n\r\n      // Get conditions and exit if none exist\r\n      const conditions = CONFIG.statusEffects.filter(condition => condition.id !== \"\");\r\n      if (conditions.length === 0) return;\r\n\r\n      // Get actions\r\n      const actionType = \"condition\";\r\n      const actions = await Promise.all(conditions.map(async condition => {\r\n        const hasCondition = this.actors.every(actor => {\r\n          return actor.effects.some(effect => effect.statuses.some(status => status === condition.id)\r\n          && !effect?.disabled);\r\n        });\r\n        const name = game.i18n.localize(condition.label) ?? condition.name;\r\n        return {\r\n          id: condition.id,\r\n          name,\r\n          img: coreModule.api.Utils.getImage(condition),\r\n          cssClass: `toggle${(hasCondition) ? \" active\" : \"\"}`,\r\n          listName: this.#getListName(actionType, name),\r\n          tooltip: this.#getConditionTooltipData(condition.id, condition.name),\r\n          system: { actionType, actionId: condition.id }\r\n        };\r\n      }));\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"conditions\" });\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build counters\r\n     * @private\r\n     */\r\n    async #buildCounters() {\r\n      if (!coreModule.api.Utils.isModuleActive(CUSTOM_DND5E.ID)\r\n        || !CUSTOM_DND5E.COUNTERS[this.actor?.type]) return;\r\n\r\n      const actionType = \"counter\";\r\n\r\n      let counters = game.settings.get(CUSTOM_DND5E.ID, CUSTOM_DND5E.COUNTERS[this.actor?.type]) ?? {};\r\n\r\n      if (coreModule.api.Utils.isModuleActive(CUSTOM_DND5E.ID) && Object.keys(counters).length) {\r\n        counters = Object.entries(counters)\r\n          .filter(([_, value]) => value.visible)\r\n          .map(([key, value]) => {\r\n            value.key = key;\r\n            return value;\r\n          });\r\n      } else {\r\n        counters = [\r\n          {\r\n            name: game.i18n.localize(\"DND5E.DeathSave\"),\r\n            type: \"successFailure\",\r\n            system: true,\r\n            visible: true,\r\n            key: \"death-saves\"\r\n          },\r\n          {\r\n            name: game.i18n.localize(\"DND5E.Exhaustion\"),\r\n            type: \"number\",\r\n            system: true,\r\n            visible: true,\r\n            key: \"exhaustion\"\r\n          },\r\n          {\r\n            name: game.i18n.localize(\"DND5E.Inspiration\"),\r\n            type: \"checkbox\",\r\n            system: true,\r\n            visible: true,\r\n            key: \"inspiration\"\r\n          }\r\n        ];\r\n      }\r\n\r\n      // Get actions\r\n      const actions = counters.map(counter => {\r\n        let active = \"\";\r\n        let cssClass = \"\";\r\n        let img = \"\";\r\n        let info1 = \"\";\r\n        if (counter.system) {\r\n          switch (counter.key) {\r\n            case \"exhaustion\":\r\n              active = (this.actor.system.attributes.exhaustion > 0) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              img = coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/exhaustion.svg\");\r\n              info1 = { text: this.actor.system.attributes.exhaustion };\r\n              break;\r\n            case \"death-saves\":\r\n              img = coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/death-saves.svg\");\r\n              info1 = { text: `${this.actor.system.attributes.death.success}/${this.actor.system.attributes.death.failure}` };\r\n              break;\r\n            case \"inspiration\":\r\n              active = (this.actor.system.attributes.inspiration) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              img = coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/inspiration.svg\");\r\n              break;\r\n          }\r\n        } else {\r\n          const value = this.actor.getFlag(CUSTOM_DND5E.ID, counter.key);\r\n          switch (counter.type) {\r\n            case \"checkbox\":\r\n              active = (value) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              break;\r\n            case \"fraction\":\r\n              active = (value.value > 0) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              info1 = { text: `${value.value ?? 0}/${value.max ?? 0}` };\r\n              break;\r\n            case \"number\":\r\n              active = (value > 0) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              info1 = { text: value };\r\n              break;\r\n            case \"successFailure\":\r\n              info1 = { text: `${value?.success ?? 0}/${value?.failure ?? 0}` };\r\n              break;\r\n          }\r\n        }\r\n\r\n        return {\r\n          id: counter.key,\r\n          name: counter.label,\r\n          listName: this.#getListName(actionType, counter.name),\r\n          cssClass,\r\n          img,\r\n          info1,\r\n          system: { actionType, counterKey: counter.key, counterType: counter.type}\r\n        };\r\n      });\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"counters\" });\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build effects\r\n     * @private\r\n     */\r\n    async #buildEffects() {\r\n      const actionType = \"effect\";\r\n\r\n      // Get effects and exit if none exist\r\n      const effects = new Map(this.actor.allApplicableEffects().map(effect => [effect.id, effect]));\r\n      if (effects.size === 0) return;\r\n\r\n      // Map passive and temporary effects to new maps\r\n      const passiveEffects = new Map();\r\n      const temporaryEffects = new Map();\r\n      const statusEffectIds = new Set(CONFIG.statusEffects.map(statusEffect => statusEffect._id));\r\n\r\n      // Iterate effects and add to a map based on the isTemporary value\r\n      for (const [effectId, effect] of effects.entries()) {\r\n        if (effect.isSuppressed) continue;\r\n        if (effect.parent?.system?.identified === false && !game.user.isGM) continue;\r\n        if (statusEffectIds.has(effect.id)) continue;\r\n\r\n        if (effect.isTemporary) { temporaryEffects.set(effectId, effect); }\r\n        else { passiveEffects.set(effectId, effect); }\r\n      }\r\n\r\n      // Build passive and temporary effects\r\n      await Promise.all([\r\n        this.buildActions({ groupData: { id: \"passive-effects\" }, actionData: passiveEffects, actionType }),\r\n        this.buildActions({ groupData: { id: \"temporary-effects\" }, actionData: temporaryEffects, actionType })\r\n      ]);\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build exhaustion\r\n     * @private\r\n     */\r\n    #buildExhaustion() {\r\n      // Exit if every actor is not the character type\r\n      if (!this.actors.every(actor => actor.type === \"character\")) return;\r\n\r\n      // Get actions\r\n      const actionType = \"exhaustion\";\r\n      const active = this.actor.system.attributes.exhaustion > 0 ? \" active\" : \"\";\r\n      const actions = [{\r\n        id: \"exhaustion\",\r\n        name: game.i18n.localize(\"DND5E.Exhaustion\"),\r\n        cssClass: `toggle${active}`,\r\n        img: coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/exhaustion.svg\"),\r\n        info1: { text: this.actor.system.attributes.exhaustion },\r\n        listName: this.#getListName(actionType, name),\r\n        system: { actionType, actionId: \"exhaustion\" }\r\n      }];\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"exhaustion\" });\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build features\r\n     * @private\r\n     */\r\n    async #buildFeatures() {\r\n      // Filter feats from items and exit if none exist\r\n      const feats = new Map([...this.items].filter(([, value]) => value.type === \"feat\"));\r\n      if (feats.size === 0) return;\r\n\r\n      // Map active and passive features to new maps\r\n      const featuresMap = new Map([\r\n        [\"activeFeatures\", new Map()],\r\n        [\"passiveFeatures\", new Map()]\r\n      ]);\r\n\r\n      const featureType = {\r\n        background: \"backgroundFeatures\",\r\n        class: \"classFeatures\",\r\n        monster: \"monsterFeatures\",\r\n        race: \"raceFeatures\",\r\n        feats: \"feats\"\r\n      };\r\n\r\n      const classFeatureType = {\r\n        artificerInfusion: \"artificerInfusions\",\r\n        channelDivinity: \"channelDivinity\",\r\n        defensiveTactic: \"defensiveTactics\",\r\n        eldritchInvocation: \"eldritchInvocations\",\r\n        elementalDiscipline: \"elementalDisciplines\",\r\n        fightingStyle: \"fightingStyles\",\r\n        huntersPrey: \"huntersPrey\",\r\n        ki: \"kiAbilities\",\r\n        maneuver: \"maneuvers\",\r\n        metamagic: \"metamagicOptions\",\r\n        multiattack: \"multiattacks\",\r\n        pact: \"pactBoons\",\r\n        psionicPower: \"psionicPowers\",\r\n        rune: \"runes\",\r\n        superiorHuntersDefense: \"superiorHuntersDefense\"\r\n      };\r\n\r\n      for (const [key, value] of feats) {\r\n        const activationType = value.system.activities.contents[0]?.type;\r\n        const type = value.system.type.value;\r\n        const subType = value.system.type?.subtype;\r\n\r\n        if (activationType) { featuresMap.get(\"activeFeatures\").set(key, value); }\r\n        else { featuresMap.get(\"passiveFeatures\").set(key, value); }\r\n\r\n        // Map feature types\r\n        if (featureType[type]) {\r\n          if (!featuresMap.has(featureType[type])) featuresMap.set(featureType[type], new Map());\r\n          featuresMap.get(featureType[type]).set(key, value);\r\n        }\r\n\r\n        // Map class feature subtypes\r\n        if (classFeatureType[subType]) {\r\n          if (!featuresMap.has(classFeatureType[subType])) featuresMap.set(classFeatureType[subType], new Map());\r\n          featuresMap.get(classFeatureType[subType]).set(key, value);\r\n        }\r\n      }\r\n\r\n      // Loop through inventory groups ids\r\n      for (const id of FEATURE_GROUP_IDS) {\r\n        const actionData = featuresMap.get(id);\r\n        if (!actionData || actionData.size === 0) continue;\r\n\r\n        // Create group data\r\n        const groupData = {\r\n          id: GROUP[id].id,\r\n          name: game.i18n.localize(GROUP[id].name) ?? \"\"\r\n        };\r\n\r\n        // Build actions and activations\r\n        const actionType = \"feature\";\r\n        await this.buildActions({ groupData, actionData, actionType });\r\n        await this.buildActivations({ groupData, actionData, actionType });\r\n      }\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build inventory\r\n     * @private\r\n     */\r\n    async #buildInventory() {\r\n      // Exit early if no items exist\r\n      if (this.items.size === 0) return;\r\n\r\n      // Initialize inventory map categories\r\n      const inventoryMap = new Map([\r\n        [\"equipped\", new Map()],\r\n        [\"unequipped\", new Map()],\r\n        [\"consumables\", new Map()],\r\n        [\"containers\", new Map()],\r\n        [\"equipment\", new Map()],\r\n        [\"loot\", new Map()],\r\n        [\"tools\", new Map()],\r\n        [\"weapons\", new Map()]\r\n      ]);\r\n\r\n      for (const [key, value] of this.items) {\r\n        // Set items into maps\r\n        if (value.system?.quantity > 0 && this.#isActiveItem(value)) {\r\n          if (value.system.equipped) { inventoryMap.get(\"equipped\").set(key, value); }\r\n          else { inventoryMap.get(\"unequipped\").set(key, value); }\r\n\r\n          if (this.#isUsableItem(value) && value.type === \"consumable\") inventoryMap.get(\"consumables\").set(key, value);\r\n          if (this.#isEquippedItem(value)) {\r\n            switch (value.type) {\r\n              case \"container\": inventoryMap.get(\"containers\").set(key, value); break;\r\n              case \"equipment\": inventoryMap.get(\"equipment\").set(key, value); break;\r\n              case \"loot\": inventoryMap.get(\"loot\").set(key, value); break;\r\n              case \"tool\": inventoryMap.get(\"tools\").set(key, value); break;\r\n              case \"weapon\": inventoryMap.get(\"weapons\").set(key, value); break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Loop through inventory subcateogry ids\r\n      for (const groupId of this.inventorygroupIds) {\r\n        const actionData = inventoryMap.get(groupId);\r\n        if (!actionData || actionData.size === 0) continue;\r\n\r\n        // Create group data\r\n        const groupData = {\r\n          id: groupId,\r\n          name: game.i18n.localize(GROUP[groupId].name)\r\n        };\r\n\r\n        const data = { groupData, actionData };\r\n\r\n        // Build actions and activations\r\n        await this.buildActions(data);\r\n        await this.buildActivations(data);\r\n      }\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build rests\r\n     * @private\r\n     */\r\n    #buildRests() {\r\n      // Exit if every actor is not the character type\r\n      if (this.actors.length === 0 || !this.actors.every(actor => actor.type === \"character\")) return;\r\n\r\n      // Get actions\r\n      const actionType = \"utility\";\r\n      const restTypes = { shortRest: \"DND5E.REST.Short.Label\", longRest: \"DND5E.REST.Long.Label\" };\r\n      const actions = Object.entries(restTypes).map(([id, name]) => {\r\n        name = game.i18n.localize(name);\r\n        return {\r\n          id,\r\n          name,\r\n          listName: this.#getListName(actionType, name),\r\n          system: { actionType, actionId: id }\r\n        };\r\n      });\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"rests\" });\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build skills\r\n     * @private\r\n     */\r\n    #buildSkills() {\r\n      // Get skills and exit if none exist\r\n      const skills = this.actor?.system.skills || CONFIG.DND5E.skills;\r\n      if (skills.length === 0) return;\r\n\r\n      // Get actions\r\n      const actionType = \"skill\";\r\n      const actions = Object.entries(skills).map(([id, skill]) => {\r\n        try {\r\n          const name = CONFIG.DND5E.skills[id].label;\r\n          return {\r\n            id,\r\n            name: this.abbreviateSkills ? Utils.capitalize(id) : name,\r\n            icon1: this.#getProficiencyIcon(skill.value),\r\n            info1: (this.actor) ? { text: coreModule.api.Utils.getModifier(skill.total) } : \"\",\r\n            listName: this.#getListName(actionType, name),\r\n            system: { actionType, actionId: id }\r\n          };\r\n        } catch(error) {\r\n          coreModule.api.Logger.error(skill);\r\n          return null;\r\n        }\r\n      }).filter(skill => !!skill);\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"skills\" });\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build spells\r\n     */\r\n    async #buildSpells() {\r\n      // Filter items for spells and exit if none exist\r\n      const spells = new Map([...this.items].filter(([, value]) => value.type === \"spell\"));\r\n      if (spells.size === 0) return;\r\n\r\n      // Initialize spells map categories\r\n      const spellsMap = new Map([\r\n        [\"atWillSpells\", new Map()],\r\n        [\"innateSpells\", new Map()],\r\n        [\"pactSpells\", new Map()],\r\n        [\"cantrips\", new Map()],\r\n        [\"_1stLevelSpells\", new Map()],\r\n        [\"_2ndLevelSpells\", new Map()],\r\n        [\"_3rdLevelSpells\", new Map()],\r\n        [\"_4thLevelSpells\", new Map()],\r\n        [\"_5thLevelSpells\", new Map()],\r\n        [\"_6thLevelSpells\", new Map()],\r\n        [\"_7thLevelSpells\", new Map()],\r\n        [\"_8thLevelSpells\", new Map()],\r\n        [\"_9thLevelSpells\", new Map()],\r\n        [\"additionalSpells\", new Map()]\r\n      ]);\r\n\r\n      // Loop through items\r\n      for (const [key, value] of spells) {\r\n        if (!this.#isUsableItem(value) || !this.#isUsableSpell(value)) continue;\r\n\r\n        if (value.system.linkedActivity) {\r\n          if (value.system.linkedActivity.displayInSpellbook) {\r\n            spellsMap.get(\"additionalSpells\").set(key, value);\r\n          }\r\n        } else {\r\n          switch (value.system.preparation.mode) {\r\n            case \"atwill\":\r\n              spellsMap.get(\"atWillSpells\").set(key, value); break;\r\n            case \"innate\":\r\n              spellsMap.get(\"innateSpells\").set(key, value); break;\r\n            case \"pact\":\r\n              spellsMap.get(\"pactSpells\").set(key, value); break;\r\n            default: {\r\n              switch (value.system.level) {\r\n                case 0:\r\n                  spellsMap.get(\"cantrips\").set(key, value); break;\r\n                case 1:\r\n                  spellsMap.get(\"_1stLevelSpells\").set(key, value); break;\r\n                case 2:\r\n                  spellsMap.get(\"_2ndLevelSpells\").set(key, value); break;\r\n                case 3:\r\n                  spellsMap.get(\"_3rdLevelSpells\").set(key, value); break;\r\n                case 4:\r\n                  spellsMap.get(\"_4thLevelSpells\").set(key, value); break;\r\n                case 5:\r\n                  spellsMap.get(\"_5thLevelSpells\").set(key, value); break;\r\n                case 6:\r\n                  spellsMap.get(\"_6thLevelSpells\").set(key, value); break;\r\n                case 7:\r\n                  spellsMap.get(\"_7thLevelSpells\").set(key, value); break;\r\n                case 8:\r\n                  spellsMap.get(\"_8thLevelSpells\").set(key, value); break;\r\n                case 9:\r\n                  spellsMap.get(\"_9thLevelSpells\").set(key, value); break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Reverse sort spell slots by level\r\n      const systemSpells = Object.entries(this.actor.system.spells).reverse();\r\n\r\n      // Set spell slot availability\r\n      const spellSlotsMap = new Map();\r\n      let spellSlotAvailable = this.showUnchargedItems;\r\n      let pactSlotAvailable = this.showUnchargedItems;\r\n      let pactSlot = null;\r\n\r\n      for (const [key, value] of systemSpells) {\r\n        const hasValue = value.value > 0;\r\n        const hasMax = value.max > 0;\r\n        const hasLevel = value.level > 0;\r\n\r\n        if (key === \"pact\") {\r\n          pactSlotAvailable = pactSlotAvailable || (hasValue && hasMax && hasLevel);\r\n          value.slotAvailable = pactSlotAvailable && hasLevel;\r\n          pactSlot = [key, value];\r\n        } else if (key.startsWith(\"spell\") && key !== \"spell0\") {\r\n          spellSlotAvailable = spellSlotAvailable || (hasValue && hasMax);\r\n          value.slotAvailable = spellSlotAvailable;\r\n          spellSlotsMap.set(key, value);\r\n        } else if (hasValue) {\r\n          value.slotsAvailable = true;\r\n          spellSlotsMap.set(key, value);\r\n        }\r\n      }\r\n\r\n      // Set equivalent spell slot where pact slot is available\r\n      if (pactSlot[1].slotAvailable) {\r\n        const spellSlot = spellSlotsMap.get(`spell${pactSlot[1].level}`);\r\n        spellSlot.slotsAvailable = true;\r\n      }\r\n\r\n      const spellSlotModes = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, \"pact\"]);\r\n\r\n      for (const id of SPELL_GROUP_IDS) {\r\n        // Skip if no spells exist\r\n        if (!spellsMap.has(id)) continue;\r\n\r\n        const spellMode = GROUP[id].spellMode;\r\n        const levelInfo = (spellMode === \"pact\") ? pactSlot[1] : spellSlotsMap.get(`spell${spellMode}`);\r\n        const { value: slots = 0, max = 0, slotAvailable = false } = levelInfo || {};\r\n\r\n        // Skip if spells require spell slots and none are available\r\n        if (!slotAvailable && spellSlotModes.has(spellMode)) continue;\r\n\r\n        // Create group data\r\n        const groupData = {\r\n          id: GROUP[id].id,\r\n          name: game.i18n.localize(GROUP[id].name),\r\n          info: { info1: { class: \"tah-spotlight\", text: (max > 0) ? `${slots}/${max}` : \"\" } }\r\n        };\r\n\r\n        // Add spell slot info to group\r\n        this.addGroupInfo(groupData);\r\n\r\n        const data = { groupData, actionData: spellsMap.get(id), actionType: \"spell\" };\r\n\r\n        // Build actions and activations\r\n        await this.buildActions(data);\r\n        await this.buildActivations(data);\r\n      }\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build utility\r\n     * @private\r\n     */\r\n    #buildUtility() {\r\n      // Exit if every actor is not the character type\r\n      if (this.actors.length === 0) return;\r\n      if (!this.actors.every(actor => actor.type === \"character\")) return;\r\n\r\n      const actionType = \"utility\";\r\n\r\n      // Set utility types\r\n      const utilityTypes = {\r\n        deathSave: { name: game.i18n.localize(\"DND5E.DeathSave\") },\r\n        inspiration: { name: game.i18n.localize(\"DND5E.Inspiration\") }\r\n      };\r\n\r\n      // Delete 'deathSave' for multiple tokens\r\n      if (!this.actor || this.actor.system.attributes.hp.value > 0) delete utilityTypes.deathSave;\r\n\r\n      // Get actions\r\n      const actions = Object.entries(utilityTypes)\r\n        .map(utilityType => {\r\n          const id = utilityType[0];\r\n          const name = utilityType[1].name;\r\n          let cssClass = \"\";\r\n          if (utilityType[0] === \"inspiration\") {\r\n            const active = this.actors.every(actor => actor.system.attributes?.inspiration)\r\n              ? \" active\"\r\n              : \"\";\r\n            cssClass = `toggle${active}`;\r\n          }\r\n          return {\r\n            id,\r\n            name,\r\n            cssClass,\r\n            listName: this.#getListName(actionType, name),\r\n            system: { actionType, actionId: id }\r\n          };\r\n        });\r\n\r\n      // Crreate group data\r\n      const groupData = { id: \"utility\" };\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Build actions\r\n     * @public\r\n     * @param {object} data actionData, groupData, actionType\r\n     * @param {object} options\r\n     */\r\n    async buildActions(data, options) {\r\n      const { actionData, groupData, actionType } = data;\r\n\r\n      // Exit if there is no action data\r\n      if (actionData.size === 0) return;\r\n\r\n      // Exit if there is no groupId\r\n      const groupId = (typeof groupData === \"string\" ? groupData : groupData?.id);\r\n      if (!groupId) return;\r\n\r\n      // Get actions\r\n      const actions = await Promise.all([...actionData].map(async item => await this.#getAction(item[1], actionType)));\r\n\r\n      // Add actions to action list\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Get action\r\n     * @private\r\n     * @param {object} entity      The entity\r\n     * @param {string} actionType The action type\r\n     * @returns {object}           The action\r\n     */\r\n    async #getAction(entity, actionType = \"item\") {\r\n      const id = entity.id ?? entity._id;\r\n      let name = entity?.name ?? entity?.label;\r\n      let cssClass = \"\";\r\n      if (Object.hasOwn(entity, \"disabled\")) {\r\n        const active = (!entity.disabled) ? \" active\" : \"\";\r\n        cssClass = `toggle${active}`;\r\n      }\r\n      const info = this.#getItemInfo(entity);\r\n      const tooltip = this.#getTooltipData(entity);\r\n      return {\r\n        id,\r\n        name,\r\n        cssClass,\r\n        img: coreModule.api.Utils.getImage(entity),\r\n        icon1: this.#getActivationTypeIcon(entity.system?.activities?.contents[0]?.activation.type),\r\n        icon2: this.#getPreparedIcon(entity),\r\n        icon3: this.#getConcentrationIcon(entity),\r\n        info1: info?.info1,\r\n        info2: info?.info2,\r\n        info3: info?.info3,\r\n        listName: this.#getListName(actionType, name),\r\n        tooltip,\r\n        system: { actionType, actionId: id }\r\n      };\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Is active item\r\n     * @private\r\n     * @param {object} item The item\r\n     * @returns {boolean}   Whether the item is active\r\n     */\r\n    #isActiveItem(item) {\r\n      if (this.showItemsWithoutActivationCosts) return true;\r\n      const activationTypes = new Set(Object.keys(CONFIG.DND5E.activityActivationTypes).filter(activationType => activationType !== \"none\"));\r\n      const activationType = item.system?.activities?.contents[0]?.activation?.type;\r\n      return activationTypes.has(activationType) || item.type === \"tool\";\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Is equipped item\r\n     * @private\r\n     * @param {object} item The item\r\n     * @returns {boolean}   Whether the item is equipped\r\n     */\r\n    #isEquippedItem(item) {\r\n      const excludedTypes = [\"consumable\", \"spell\", \"feat\"];\r\n      return (this.showUnequippedItems && !excludedTypes.includes(item.type))\r\n      || (item.system.equipped && item.type !== \"consumable\");\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Is usable item\r\n     * @private\r\n     * @param {object} item The item\r\n     * @returns {boolean}   Whether the item is usable\r\n     */\r\n    #isUsableItem(item) {\r\n      return this.showUnchargedItems || !!item.system.uses?.value || !item.system.uses?.max;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Is usable spell\r\n     * @private\r\n     * @param {object} spell The spell\r\n     * @returns {boolean}    Whether the spell is usable\r\n     */\r\n    #isUsableSpell(spell) {\r\n      if (this.actor?.type !== \"character\" && this.showUnequippedItems) return true;\r\n      if (this.showUnpreparedSpells) return true;\r\n\r\n      const preparationModes = new Set(Object.keys(CONFIG.DND5E.spellPreparationModes).filter(preparationMode => preparationMode !== \"prepared\"));\r\n\r\n      // Return true if the spell has a preparation mode other than 'prepared' or is prepared\r\n      return preparationModes.has(spell.system.preparation.mode)\r\n        || spell.system.preparation.prepared || spell.system.linkedActivity?.displayInSpellbook;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    #getListName(actionType, actionName) {\r\n      const prefix = `${game.i18n.localize(ACTION_TYPE[actionType])}: ` ?? \"\";\r\n      return `${prefix}${actionName}` ?? \"\";\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Get item info\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {object}\r\n     */\r\n    #getItemInfo(item) {\r\n      const info1 = item.type === \"spell\" ? this.#getSpellInfo(item) : this.#getQuantityData(item);\r\n      const info2 = this.#getUsesData(item);\r\n      const info3 = this.#getConsumeData(item);\r\n\r\n      return { info1, info2, info3 };\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Add spell info\r\n     * @private\r\n     * @param {object} spell The spell\r\n     * @returns {object}     The spell info\r\n     */\r\n    #getSpellInfo(spell) {\r\n      if (!this.displaySpellInfo) return null;\r\n\r\n      const components = spell.system?.properties;\r\n      if (!components) return null;\r\n\r\n      const info = { text: \"\", title: \"\" };\r\n      const componentTypes = {\r\n        vocal: \"DND5E.ComponentVerbal\",\r\n        somatic: \"DND5E.ComponentSomatic\",\r\n        material: \"DND5E.ComponentMaterial\"\r\n      };\r\n\r\n\r\n      const componentsArray = Object.entries(componentTypes)\r\n        .filter(([key]) => components[key])\r\n        .map(([key, label]) => {\r\n          info.text += game.i18n.localize(`${label}Abbr`);\r\n          return game.i18n.localize(label);\r\n        });\r\n\r\n      // Ritual\r\n      if (components.ritual) {\r\n        componentsArray.push(`[${game.i18n.localize(\"DND5E.Ritual\")}]`);\r\n        info.text += ` [${game.i18n.localize(\"DND5E.RitualAbbr\")}]`;\r\n      }\r\n\r\n      info.title = componentsArray.join(\", \");\r\n\r\n      return info;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Get valid actors\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    #getValidActors() {\r\n      const allowedTypes = [\"character\", \"npc\"];\r\n      return this.actors.every(actor => allowedTypes.includes(actor.type)) ? this.actors : [];\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Get valid tokens\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    #getValidTokens() {\r\n      const allowedTypes = [\"character\", \"npc\"];\r\n      return this.actors.every(actor => allowedTypes.includes(actor.type)) ? this.tokens : [];\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Get quantity\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {string}\r\n     */\r\n    #getQuantityData(item) {\r\n      const quantity = item?.system?.quantity ?? 0;\r\n      return {\r\n        text: (quantity > 1) ? quantity : \"\",\r\n        title: `${game.i18n.localize(\"DND5E.Quantity\")}: ${quantity}`\r\n      };\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Get uses\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {string}\r\n     */\r\n    #getUsesData(item) {\r\n      const uses = item?.system?.uses;\r\n      if (!(uses?.max > 0)) return {};\r\n      const per = uses.recovery[0]?.period === \"charges\" ? \"\" : ` ${game.i18n.localize(\"DND5E.per\")} `;\r\n      const period = CONFIG.DND5E.limitedUsePeriods[uses.recovery[0]?.period]?.label ?? uses.recovery[0]?.period;\r\n      const perPeriod = (period) ? `${per}${period}` : \"\";\r\n      const remainingUses = uses.max - (uses.spent ?? 0);\r\n      const text = `${remainingUses}/${uses.max}`;\r\n      const title = `${text}${perPeriod}`;\r\n      return { text, title };\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Get consume\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {string}\r\n     */\r\n    #getConsumeData(item) {\r\n      // Get consume target and type\r\n      const firstActivity = item?.system?.activities?.contents[0];\r\n      const firstTarget = firstActivity?.consumption?.targets?.[0];\r\n      const consumeId = firstTarget?.target;\r\n      const consumeType = firstTarget?.type;\r\n      const consumeAmount = firstTarget?.value;\r\n\r\n      if (!consumeId || !consumeType || consumeId === item.id) return {};\r\n\r\n      // Return resources\r\n      if (consumeType === \"attribute\") {\r\n        const parentId = consumeId.substr(0, consumeId.lastIndexOf(\".\"));\r\n        const target = foundry.utils.getProperty(this.actor.system, parentId);\r\n\r\n        if (target) {\r\n          const text = `${target.value ?? \"0\"}${target.max ? `/${target.max}` : \"\"}`;\r\n          return {\r\n            text,\r\n            title: `${text} ${target.label ?? \"\"}`\r\n          };\r\n        }\r\n      } else {\r\n        const target = this.actor.items?.get(consumeId);\r\n\r\n        // Return charges\r\n        if (target && consumeType === \"charges\") {\r\n          return this.#getUsesData(target);\r\n        }\r\n\r\n        // Return quantity\r\n        if (target?.system?.quantity) {\r\n          const text = `${consumeAmount > 1 ? `${consumeAmount} ${game.i18n.localize(\"DND5E.of\")} ` : \"\"}${target.system.quantity}`;\r\n          return {\r\n            text,\r\n            title: `${text} ${target.name}`\r\n          };\r\n        }\r\n      }\r\n\r\n      return {};\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Discard slow items\r\n     * @private\r\n     * @param {Map} items The items\r\n     * @returns {Map}     The filtered items\r\n     */\r\n    #discardSlowItems(items) {\r\n      // Return all items if slow actions are allowed\r\n      if (Utils.getSetting(\"showSlowActions\")) return items;\r\n\r\n      // Define slow activation types\r\n      const slowActivationTypes = new Set([\"minute\", \"hour\", \"day\"]);\r\n\r\n      // Filter out slow items and return the result\r\n      return new Map([...items.entries()].filter(([_, item]) => {\r\n        const activationType = item.system?.activation?.type;\r\n        return !slowActivationTypes.has(activationType);\r\n      }));\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Get proficiency icon\r\n     * @param {string} level\r\n     * @returns {string}\r\n     */\r\n    #getProficiencyIcon(level) {\r\n      const title = CONFIG.DND5E.proficiencyLevels[level] ?? \"\";\r\n      const icon = PROFICIENCY_LEVEL_ICON[level];\r\n      return (icon) ? `<i class=\"${icon}\" title=\"${title}\"></i>` : \"\";\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Get icon for the activation type\r\n     * @private\r\n     * @param {object} activationType The activation type\r\n     * @returns {string}              The icon\r\n     */\r\n    #getActivationTypeIcon(activationType) {\r\n      const title = CONFIG.DND5E.abilityActivationTypes[activationType] ?? \"\";\r\n      const icon = ACTIVATION_TYPE[activationType]?.icon;\r\n      return (icon) ? `<i class=\"${icon}\" title=\"${title}\"></i>` : \"\";\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Get icon for concentration type\r\n     * @private\r\n     * @param {object} spell The spell\r\n     * @returns {string}     The icon\r\n     */\r\n    #getConcentrationIcon(spell) {\r\n      if (spell?.type !== \"spell\" || !this.displaySpellInfo || !spell.system?.properties?.has(\"concentration\")) return null;\r\n      const title = game.i18n.localize(\"DND5E.Scroll.RequiresConcentration\");\r\n      const icon = CONCENTRATION_ICON;\r\n      return `<dnd5e-icon src=\"${icon}\" title=\"${title}\">`;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Get icon for a prepared spell\r\n     * @private\r\n     * @param {object} spell The spell\r\n     * @returns {string}     The icon\r\n     */\r\n    #getPreparedIcon(spell) {\r\n      if (spell?.type !== \"spell\" || !this.showUnpreparedSpells) return null;\r\n      const level = spell.system.level;\r\n      const preparationMode = spell.system.preparation.mode;\r\n      const prepared = spell.system.preparation.prepared;\r\n      const icon = prepared ? PREPARED_ICON : `${PREPARED_ICON} tah-icon-disabled`;\r\n      const title = preparationMode === \"always\" ? game.i18n.localize(\"DND5E.SpellPrepAlways\") : prepared ? game.i18n.localize(\"DND5E.SpellPrepared\") : game.i18n.localize(\"DND5E.SpellUnprepared\");\r\n\r\n      // Return icon if the preparation mode is 'prepared' or 'always' and the spell is not a cantrip\r\n      return ((preparationMode === \"prepared\" || preparationMode === \"always\") && level !== 0) ? `<i class=\"${icon}\" title=\"${title}\"></i>` : null;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    #getTooltipData(entity) {\r\n      if (this.tooltipsSetting === \"none\") return \"\";\r\n\r\n      const name = entity?.name ?? \"\";\r\n\r\n      if (this.tooltipsSetting === \"nameOnly\") return name;\r\n\r\n      const tooltip = {};\r\n      tooltip.content = `<section class=\"loading\" data-uuid=\"${entity.uuid}\"><i class=\"fas fa-spinner fa-spin-pulse\"></i></section>`;\r\n      tooltip.class = \"dnd5e2 dnd5e-tooltip item-tooltip\";\r\n\r\n      return tooltip;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Get condition tooltip data\r\n     * @param {*} id     The condition id\r\n     * @param {*} name   The condition name\r\n     * @returns {object} The tooltip data\r\n     */\r\n    #getConditionTooltipData(id, name) {\r\n      if (this.tooltipsSetting === \"none\") return \"\";\r\n\r\n      const condition = CONFIG.DND5E.conditionTypes[id];\r\n\r\n      if (this.tooltipsSetting === \"nameOnly\" || !condition?.reference) return name;\r\n\r\n      const tooltip = {};\r\n      tooltip.content = `<section class=\"loading\" data-uuid=\"${condition.reference}\"><i class=\"fas fa-spinner fa-spin-pulse\"></i></section>`;\r\n      tooltip.class = \"dnd5e2 dnd5e-tooltip rule-tooltip\";\r\n\r\n      return tooltip;\r\n    }\r\n  };\r\n});\r\n","export let MagicItemActionHandlerExtender = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  MagicItemActionHandlerExtender = class MagicItemActionHandlerExtender extends coreModule.api.ActionHandlerExtender {\r\n    constructor(actionHandler) {\r\n      super();\r\n      this.actionHandler = actionHandler;\r\n      this.actor = null;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Extend the action list\r\n     */\r\n    async extendActionHandler() {\r\n      this.actor = this.actionHandler.actor;\r\n      if (!this.actor) return;\r\n\r\n      const actor = await MagicItems.actor(this.actor.id);\r\n\r\n      if (!actor) return;\r\n\r\n      const magicItems = actor.items ?? [];\r\n\r\n      if (magicItems.length === 0) return;\r\n\r\n      const parentGroupId = \"magic-items\";\r\n      const parentGroupType = \"system\";\r\n      const parentGroupData = {\r\n        id: parentGroupId,\r\n        type: parentGroupType\r\n      };\r\n\r\n      magicItems.forEach(magicItem => {\r\n        if (magicItem.attuned && !this._isItemAttuned(magicItem)) return;\r\n        if (magicItem.equipped && !this._isItemEquipped(magicItem)) return;\r\n\r\n        const groupId = `magic-items_${magicItem.id}`;\r\n        const groupName = magicItem.name;\r\n        const groupType = \"system-derived\";\r\n        const groupInfo1 = `${magicItem.uses}/${magicItem.charges}`;\r\n        const groupData = {\r\n          id: groupId,\r\n          name: groupName,\r\n          type: groupType,\r\n          info1: groupInfo1\r\n        };\r\n\r\n        // Add group to HUD\r\n        this.actionHandler.addGroup(groupData, parentGroupData);\r\n\r\n        const actions = magicItem.ownedEntries.map(entry => {\r\n          const effect = entry.item;\r\n          const id = effect.id;\r\n          const name = effect.name;\r\n          const img = coreModule.api.Utils.getImage(effect);\r\n          const info1 = effect.consumption;\r\n          const info2 = (effect.baseLevel) ? `${coreModule.api.Utils.i18n(\"DND5E.AbbreviationLevel\")} ${effect.baseLevel}` : \"\";\r\n          return {\r\n            id,\r\n            name,\r\n            encodedValue,\r\n            img,\r\n            info1,\r\n            info2,\r\n            selected: true,\r\n            system: { actionType: \"magicItem\", itemId: magicItem.id, effectId: id}\r\n          };\r\n        });\r\n\r\n        // Add actions to action list\r\n        this.actionHandler.addActions(actions, groupData);\r\n      });\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Whether the magic item is equipped or not\r\n     * @param {object} magicItem The item\r\n     * @returns {boolean}\r\n     */\r\n    _isItemEquipped(magicItem) {\r\n      return magicItem.item.system.equipped;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Whether the magic items is attuned or not\r\n     * @param {object} magicItem The item\r\n     * @returns {boolean}\r\n     */\r\n    _isItemAttuned(magicItem) {\r\n      const attunement = magicItem.item.system.attunment;\r\n      const attunementRequired = CONFIG.DND5E.attunementTypes?.REQUIRED ?? 1;\r\n\r\n      if (attunement === attunementRequired) return false;\r\n\r\n      return true;\r\n    }\r\n  };\r\n});\r\n","import { CUSTOM_DND5E } from \"./constants.js\";\r\n\r\nexport let RollHandler = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  RollHandler = class RollHandler extends coreModule.api.RollHandler {\r\n    /**\r\n     * Handle action click\r\n     * @override\r\n     * @param {object} event\r\n     */\r\n    async handleActionClick(event) {\r\n      const { actionType, actionId } = this.action.system;\r\n\r\n      if (!this.actor) {\r\n        for (const token of coreModule.api.Utils.getControlledTokens()) {\r\n          const actor = token.actor;\r\n          await this.handleAction(event, actionType, actor, token, actionId);\r\n        }\r\n      } else {\r\n        await this.handleAction(event, actionType, this.actor, this.token, actionId);\r\n      }\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Handle action\r\n     * @private\r\n     * @param {object} event\r\n     * @param {string} actionType\r\n     * @param {object} actor\r\n     * @param {object} token\r\n     * @param {string} actionId\r\n     */\r\n    async handleAction(event, actionType, actor, token, actionId) {\r\n      switch (actionType) {\r\n        case \"ability\":\r\n          this.rollAbility(event, actor, actionId); break;\r\n        case \"check\":\r\n          this.rollAbilityCheck(event, actor, actionId); break;\r\n        case \"save\":\r\n          this.rollSavingThrow(event, actor, actionId); break;\r\n        case \"condition\":\r\n          if (!token) return;\r\n          await this.toggleCondition(actor, token, actionId); break;\r\n        case \"counter\":\r\n          await this.modifyCounter(event, actor); break;\r\n        case \"effect\":\r\n          await this.toggleEffect(actor, actionId); break;\r\n        case \"exhaustion\":\r\n          await this.modifyExhaustion(event, actor); break;\r\n        case \"feature\":\r\n        case \"item\":\r\n        case \"spell\":\r\n        case \"weapon\":\r\n          if (this.isRenderItem()) this.renderItem(actor, actionId);\r\n          else this.useItem(event, actor, actionId);\r\n          break;\r\n        case \"magicItem\":\r\n          await this.rollMagicItem(actor, actionId); break;\r\n        case \"skill\":\r\n          this.rollSkill(event, actor, actionId); break;\r\n        case \"utility\":\r\n          await this.performUtilityAction(event, actor, token, actionId); break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Modify Counter\r\n     * @private\r\n     * @param {object} event The event\r\n     * @param {object} actor The actor\r\n     */\r\n    async modifyCounter(event, actor) {\r\n      switch (this.action?.system?.counterKey) {\r\n        case \"death-saves\":\r\n          this.rollDeathSave(event, actor); break;\r\n        case \"exhaustion\":\r\n          await this.modifyExhaustion(actor); break;\r\n        case \"inspiration\":\r\n          await this.modifyInspiration(actor); break;\r\n        default:\r\n          await this.modifyCustomCounter(actor); break;\r\n      }\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Modify Exhaustion\r\n     * @private\r\n     * @param {object} actor The actor\r\n     */\r\n    async modifyExhaustion(actor) {\r\n      const currentExhaustion = actor.system.attributes.exhaustion;\r\n      const newExhaustion = currentExhaustion + (this.isRightClick ? -1 : 1);\r\n      if (newExhaustion >= 0 && newExhaustion !== currentExhaustion) {\r\n        actor.update({ \"system.attributes.exhaustion\": newExhaustion });\r\n      }\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Modify Inspiration\r\n     * @private\r\n     * @param {object} actor The actor\r\n     */\r\n    async modifyInspiration(actor) {\r\n      const update = !actor.system.attributes.inspiration;\r\n      actor.update({ \"system.attributes.inspiration\": update });\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Modify Custom Counter\r\n     * @private\r\n     * @param {object} actor The actor\r\n     */\r\n    async modifyCustomCounter(actor) {\r\n      const { counterKey, counterType } = this.action.system;\r\n\r\n      let value = actor.getFlag(CUSTOM_DND5E.ID, counterKey) || {};\r\n\r\n      const setFlag = async (key, currentValue, newValue) => {\r\n        if (newValue !== currentValue) {\r\n          await actor.setFlag(CUSTOM_DND5E.ID, key, newValue);\r\n        }\r\n      };\r\n\r\n      const adjustValue = (key, currentValue = 0, increment = 1) => {\r\n        const newValue = this.isRightClick ? Math.max(0, currentValue - increment) : currentValue + increment;\r\n        setFlag(key, currentValue, newValue);\r\n      };\r\n\r\n      switch (counterType) {\r\n        case \"checkbox\":\r\n          await setFlag(id, !value);\r\n          break;\r\n\r\n        case \"fraction\":\r\n          if (this.isRightClick || (value.max && value.value < value.max) || !value.max) {\r\n            adjustValue(`${id}.value`, value.value);\r\n          }\r\n          break;\r\n\r\n        case \"number\":\r\n          adjustValue(id, value);\r\n          break;\r\n\r\n        case \"successFailure\":\r\n          value.success = value?.success ?? 0;\r\n          value.failure = value?.failure ?? 0;\r\n          if (this.isCtrl) {\r\n            adjustValue(`${id}.failure`, value.failure);\r\n          } else {\r\n            adjustValue(`${id}.success`, value.success);\r\n          }\r\n      }\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Roll Ability\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollAbility(event, actor, actionId) {\r\n      if (!actor.system?.abilities) return;\r\n      actor.rollAbility({ ability: actionId, event });\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Roll Saving Throw\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollSavingThrow(event, actor, actionId) {\r\n      if ( !actor.system?.abilities ) return;\r\n      if ( typeof actor.rollSavingThrow === \"function\" ) {\r\n        actor.rollSavingThrow({ ability: actionId, event });\r\n      } else {\r\n        actor.rollAbilitySave(actionId, { event });\r\n      }\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Roll Ability Check\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollAbilityCheck(event, actor, actionId) {\r\n      if ( !actor.system?.abilities ) return;\r\n      if ( typeof actor.rollAbilityCheck === \"function\" ) {\r\n        actor.rollAbilityCheck({ ability: actionId, event });\r\n      } else {\r\n        actor.rollAbilityTest(actionId, { event });\r\n      }\r\n    }\r\n\r\n    /* -------------------------------------------- */Russe\r\n\r\n    /**\r\n     * Roll Death Save\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     */\r\n    rollDeathSave(event, actor) {\r\n      actor.rollDeathSave({ event });\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Roll Magic Item\r\n     * @private\r\n     * @param {object} actor    The actor\r\n     */\r\n    async rollMagicItem(actor) {\r\n      const { itemId, effectId } = this.action.system;\r\n\r\n      const magicItemActor = await MagicItems.actor(actor.id);\r\n      if (!magicItemActor) return;\r\n\r\n      // Magicitems module 3.0.0 does not support Item5e#use\r\n      magicItemActor.roll(itemId, effectId);\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Roll Skill\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollSkill(event, actor, actionId) {\r\n      if (!actor.system?.skills) return;\r\n      actor.rollSkill({ skill: actionId, event });\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Use Item\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    useItem(event, actor, actionId) {\r\n      const item = coreModule.api.Utils.getItem(actor, actionId);\r\n\r\n      if (this.#needsRecharge(item)) {\r\n        item.rollRecharge();\r\n      } else {\r\n        item.use({ event, legacy: false });\r\n      }\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Needs Recharge\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {boolean}\r\n     */\r\n    #needsRecharge(item) {\r\n      return (item?.system?.uses?.period === \"recharge\" && !(item?.system?.uses?.value > 0));\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Perform utility action\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {object} token    The token\r\n     * @param {string} actionId The action id\r\n     */\r\n    async performUtilityAction(event, actor, token, actionId) {\r\n      switch (actionId) {\r\n        case \"deathSave\":\r\n          this.rollDeathSave(event, actor); break;\r\n        case \"endTurn\":\r\n          if (!token || game.combat?.current?.tokenId !== token.id) break;\r\n          await game.combat?.nextTurn(); break;\r\n        case \"initiative\":\r\n          await this.rollInitiative(event, actor); break;\r\n        case \"inspiration\":\r\n          await this.modifyInspiration(actor); break;\r\n        case \"longRest\":\r\n          actor.longRest(); break;\r\n        case \"shortRest\":\r\n          actor.shortRest(); break;\r\n      }\r\n\r\n      // Update HUD\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Roll Initiative\r\n     * @param {object} event The event\r\n     * @param {object} actor The actor\r\n     * @private\r\n     */\r\n    async rollInitiative(event, actor) {\r\n      if (!actor) return;\r\n      await actor.rollInitiativeDialog({ event });\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Toggle Condition\r\n     * @private\r\n     * @param {object} actor    The actor\r\n     * @param {object} token    The token\r\n     * @param {string} actionId The action id\r\n     */\r\n    async toggleCondition(actor, token, actionId) {\r\n      if (!token) return;\r\n\r\n      const statusEffect = CONFIG.statusEffects.find(statusEffect => statusEffect.id === actionId);\r\n      const isConvenient = statusEffect?.flags?.[\"dfreds-convenient-effects\"]?.isConvenient\r\n        ?? actionId.startsWith(\"Convenient Effect\");\r\n\r\n      if (game.dfreds && isConvenient) {\r\n        const effectName = statusEffect.name ?? statusEffect.label;\r\n        await game.dfreds.effectInterface.toggleEffect(effectName, { overlay: !!this.isRightClick });\r\n      } else {\r\n        const condition = this.#findCondition(actionId);\r\n        if (!condition) return;\r\n\r\n        const effect = this.#findEffect(actor, actionId);\r\n        if (effect?.disabled) { await effect.delete(); }\r\n\r\n        await actor.toggleStatusEffect(condition.id, { overlay: !!this.isRightClick });\r\n      }\r\n\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Find condition\r\n     * @private\r\n     * @param {string} actionId The action id\r\n     * @returns {object}        The condition\r\n     */\r\n    #findCondition(actionId) {\r\n      return CONFIG.statusEffects.find(effect => effect.id === actionId);\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Find effect\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     * @returns {object}        The effect\r\n     */\r\n    #findEffect(actor, actionId) {\r\n      return actor.effects.find(effect => effect.statuses.every(status => status === actionId));\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Toggle Effect\r\n     * @private\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async toggleEffect(actor, actionId) {\r\n      const effect = actor.allApplicableEffects().find(effect => effect.id === actionId);\r\n      if (!effect) return;\r\n\r\n      if (this.isRightClick && !effect.transfer) {\r\n        await effect.delete();\r\n      } else {\r\n        await effect.update({ disabled: !effect.disabled });\r\n      }\r\n\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /**\r\n     * Handle action hover\r\n     * @override\r\n     * @param {object} event The event\r\n     */\r\n    async handleActionHover(event) {\r\n      const types = [\"feature\", \"item\", \"spell\", \"weapon\", \"magicItem\"];\r\n\r\n      if (!this.actor || !this.action?.system?.actionId) return;\r\n\r\n      const { actionType, actionId } = this.action.system;\r\n\r\n      if (!types.includes(actionType)) return;\r\n\r\n      const item = coreModule.api.Utils.getItem(this.actor, actionId);\r\n\r\n      if (this.isHover) {\r\n        Hooks.call(\"tokenActionHudSystemActionHoverOn\", event, item);\r\n      } else {\r\n        Hooks.call(\"tokenActionHudSystemActionHoverOff\", event, item);\r\n      }\r\n    }\r\n  };\r\n});\r\n","// System Module Imports\r\nimport { ActionHandler } from \"./action-handler.js\";\r\nimport { MagicItemActionHandlerExtender } from \"./magic-items-extender.js\";\r\nimport { RollHandler as Core } from \"./roll-handler.js\";\r\nimport { DEFAULTS } from \"./defaults.js\";\r\nimport * as systemSettings from \"./settings.js\";\r\n\r\nexport let SystemManager = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  SystemManager = class SystemManager extends coreModule.api.SystemManager {\r\n    /** @override */\r\n    getActionHandler() {\r\n      const actionHandler = new ActionHandler();\r\n      if (coreModule.api.Utils.isModuleActive(\"magic-items-2\")\r\n        || coreModule.api.Utils.isModuleActive(\"magicitems\")) {\r\n        actionHandler.addActionHandlerExtender(new MagicItemActionHandlerExtender(actionHandler));\r\n      }\r\n      return actionHandler;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    getAvailableRollHandlers() {\r\n      let coreTitle = \"Core D&D5e\";\r\n\r\n      if (coreModule.api.Utils.isModuleActive(\"midi-qol\")) {\r\n        coreTitle += ` [supports ${coreModule.api.Utils.getModuleTitle(\"midi-qol\")}]`;\r\n      }\r\n\r\n      const choices = { core: coreTitle };\r\n      return choices;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    getRollHandler(rollHandlerId) {\r\n      let rollHandler;\r\n      switch (rollHandlerId) {\r\n        case \"core\":\r\n        default:\r\n          rollHandler = new Core();\r\n          break;\r\n      }\r\n\r\n      return rollHandler;\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    registerSettings(onChangeFunction) {\r\n      systemSettings.register(onChangeFunction);\r\n    }\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    /** @override */\r\n    async registerDefaults() {\r\n      const defaults = DEFAULTS;\r\n      // If the 'Magic Items' module is active, then add a group for it\r\n      if (game.modules.get(\"magicitems\")?.active || game.modules.get(\"magic-items-2\")?.active) {\r\n        const name = coreModule.api.Utils.i18n(\"tokenActionHud.dnd5e.magicItems\");\r\n        defaults.groups.push(\r\n          {\r\n            id: \"magic-items\",\r\n            name,\r\n            listName: `Group: ${name}`,\r\n            type: \"system\"\r\n          }\r\n        );\r\n        defaults.groups.sort((a, b) => a.id.localeCompare(b.id));\r\n      }\r\n      return defaults;\r\n    }\r\n  };\r\n});\r\n","import { SystemManager } from \"./system-manager.js\";\r\nimport { MODULE, REQUIRED_CORE_MODULE_VERSION } from \"./constants.js\";\r\n\r\nHooks.on(\"tokenActionHudCoreApiReady\", async () => {\r\n  const module = game.modules.get(MODULE.ID);\r\n  module.api = {\r\n    requiredCoreModuleVersion: REQUIRED_CORE_MODULE_VERSION,\r\n    SystemManager\r\n  };\r\n  Hooks.call(\"tokenActionHudSystemReady\", module);\r\n});\r\n"],"names":["MODULE","ID","CORE_MODULE","REQUIRED_CORE_MODULE_VERSION","ACTION_TYPE","ability","check","condition","counter","effect","exhaustion","feature","item","save","skill","spell","utility","ACTIVATION_TYPE","action","group","bonus","icon","crew","day","hour","lair","minute","legendary","reaction","reactiondamage","reactionmanual","special","other","CONCENTRATION_ICON","CUSTOM_DND5E","COUNTERS","character","npc","FEATURE_GROUP_IDS","GROUP","_1stLevelSpells","id","name","spellMode","type","_2ndLevelSpells","_3rdLevelSpells","_4thLevelSpells","_5thLevelSpells","_6thLevelSpells","_7thLevelSpells","_8thLevelSpells","_9thLevelSpells","abilities","actions","activeFeatures","additionalSpells","artificerInfusions","atWillSpells","backgroundFeatures","bonusActions","cantrips","channelDivinity","checks","classFeatures","combat","conditions","consumables","containers","counters","crewActions","defensiveTactics","eldritchInvocations","elementalDisciplines","equipment","equipped","feats","fightingStyles","huntersPrey","innateSpells","kiAbilities","lairActions","legendaryActions","loot","maneuvers","metamagicOptions","monsterFeatures","multiattacks","otherActions","pactBoons","pactSpells","passiveEffects","passiveFeatures","psionicPowers","raceFeatures","reactions","rests","runes","saves","skills","superiorHuntersDefense","temporaryEffects","token","tools","unequipped","weapons","PREPARED_ICON","PROFICIENCY_LEVEL_ICON","RARITY","common","uncommon","rare","veryRare","artifact","RITUAL_ICON","SPELL_GROUP_IDS","DEFAULTS","register","updateFunc","game","settings","i18n","localize","hint","scope","config","Boolean","default","onChange","value","Hooks","once","async","groups","Object","values","forEach","coreModule","api","Utils","listName","groupsArray","layout","nestId","capitalize","replace","text","charAt","toUpperCase","substring","toLowerCase","getSetting","key","defaultValue","get","Logger","debug","setSetting","set","ActionHandler","featureActions","inventoryActions","spellActions","buildSystemActions","groupIds","this","actors","actor","getValidActors","tokens","getValidTokens","items","sortItemsByName","discardSlowItems","abbreviateSkills","displaySpellInfo","showItemsWithoutActivationCosts","showUnchargedItems","showUnequippedItems","showUnpreparedSpells","activationgroupIds","inventorygroupIds","buildCharacterActions","buildVehicleActions","buildMultipleTokenActions","Promise","all","buildConditions","buildEffects","buildFeatures","buildInventory","buildSpells","buildAbilities","buildCombat","buildCounters","buildExhaustion","buildRests","buildSkills","buildUtility","actionType","groupId","system","CONFIG","DND5E","length","entries","filter","map","abilityId","label","abilitySaveValue","mod","icon1","getProficiencyIcon","proficient","info1","getModifier","title","info2","getListName","actionId","addActions","buildActivations","data","groupData","actionData","activationItems","Map","activationType","activities","contents","activation","has","groupDataClone","includes","defaultSelected","parentgroupData","addGroup","addGroupInfo","buildActions","combatType","initiative","current","tokenId","endTurn","getControlledTokens","tokenIds","combatants","combatant","getInfo1","class","cssClass","every","statusEffects","hasCondition","effects","some","statuses","status","disabled","img","getImage","tooltip","getConditionTooltipData","isModuleActive","keys","_","visible","active","attributes","death","success","failure","getFlag","max","counterKey","counterType","allApplicableEffects","size","statusEffectIds","Set","statusEffect","_id","effectId","isSuppressed","parent","identified","user","isGM","isTemporary","featuresMap","featureType","background","monster","race","classFeatureType","artificerInfusion","defensiveTactic","eldritchInvocation","elementalDiscipline","fightingStyle","ki","maneuver","metamagic","multiattack","pact","psionicPower","rune","subType","subtype","inventoryMap","quantity","isActiveItem","isUsableItem","isEquippedItem","shortRest","longRest","total","error","spells","spellsMap","isUsableSpell","linkedActivity","displayInSpellbook","preparation","mode","level","systemSpells","reverse","spellSlotsMap","spellSlotAvailable","pactSlotAvailable","pactSlot","hasValue","hasMax","hasLevel","slotAvailable","startsWith","slotsAvailable","spellSlotModes","levelInfo","slots","info","utilityTypes","deathSave","inspiration","hp","utilityType","options","getAction","entity","hasOwn","getItemInfo","getTooltipData","getActivationTypeIcon","icon2","getPreparedIcon","icon3","getConcentrationIcon","info3","activationTypes","activityActivationTypes","uses","spellPreparationModes","preparationMode","prepared","actionName","getSpellInfo","getQuantityData","getUsesData","getConsumeData","components","properties","componentsArray","vocal","somatic","material","ritual","push","join","allowedTypes","per","recovery","period","limitedUsePeriods","perPeriod","spent","firstActivity","firstTarget","consumption","targets","consumeId","target","consumeType","consumeAmount","parentId","substr","lastIndexOf","foundry","utils","getProperty","slowActivationTypes","proficiencyLevels","abilityActivationTypes","tooltipsSetting","content","uuid","conditionTypes","reference","MagicItemActionHandlerExtender","ActionHandlerExtender","constructor","actionHandler","super","extendActionHandler","MagicItems","magicItems","parentGroupData","magicItem","attuned","_isItemAttuned","_isItemEquipped","charges","ownedEntries","entry","baseLevel","encodedValue","selected","itemId","attunment","attunementTypes","REQUIRED","RollHandler","handleActionClick","event","handleAction","rollAbility","rollAbilityCheck","rollSavingThrow","toggleCondition","modifyCounter","toggleEffect","modifyExhaustion","isRenderItem","renderItem","useItem","rollMagicItem","rollSkill","performUtilityAction","rollDeathSave","modifyInspiration","modifyCustomCounter","currentExhaustion","newExhaustion","isRightClick","update","setFlag","currentValue","newValue","adjustValue","increment","Math","isCtrl","rollAbilitySave","rollAbilityTest","Russe","magicItemActor","roll","callAll","getItem","needsRecharge","rollRecharge","use","legacy","nextTurn","rollInitiative","rollInitiativeDialog","find","isConvenient","flags","dfreds","effectName","effectInterface","overlay","findCondition","findEffect","delete","toggleStatusEffect","transfer","handleActionHover","isHover","call","SystemManager","getActionHandler","addActionHandlerExtender","getAvailableRollHandlers","coreTitle","getModuleTitle","core","getRollHandler","rollHandlerId","rollHandler","Core","registerSettings","onChangeFunction","systemSettings.register","registerDefaults","defaults","modules","sort","a","b","localeCompare","on","module","requiredCoreModuleVersion"],"mappings":"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"}