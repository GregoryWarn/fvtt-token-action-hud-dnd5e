{"version":3,"file":"token-action-hud-dnd5e.min.js","sources":["constants.js","defaults.js","utils.js","action-handler.js","magic-items-extender.js","roll-handler.js","settings.js","system-manager.js","init.js"],"sourcesContent":["/**\r\n * Module-based constants\r\n */\r\nexport const MODULE = {\r\n  ID: \"token-action-hud-dnd5e\"\r\n};\r\n\r\n/**\r\n * Core module\r\n */\r\nexport const CORE_MODULE = {\r\n  ID: \"token-action-hud-core\"\r\n};\r\n\r\n/**\r\n * Core module version required by the system module\r\n */\r\nexport const REQUIRED_CORE_MODULE_VERSION = \"1.5\";\r\n\r\n/**\r\n * Action type\r\n */\r\nexport const ACTION_TYPE = {\r\n  ability: \"DND5E.Ability\",\r\n  check: \"tokenActionHud.dnd5e.check\",\r\n  condition: \"tokenActionHud.dnd5e.condition\",\r\n  counter: \"tokenActionHud.dnd5e.counter\",\r\n  effect: \"DND5E.Effect\",\r\n  exhaustion: \"DND5E.Exhaustion\",\r\n  feature: \"TYPES.Item.feat\",\r\n  item: \"tokenActionHud.dnd5e.item\",\r\n  save: \"DND5E.SAVE.Title.one\",\r\n  skill: \"tokenActionHud.dnd5e.skill\",\r\n  spell: \"TYPES.Item.spell\",\r\n  utility: \"DND5E.ActionUtil\"\r\n};\r\n\r\n/**\r\n * Activation types\r\n */\r\nexport const ACTIVATION_TYPE = {\r\n  action: { group: \"actions\" },\r\n  bonus: { group: \"bonus-actions\", icon: \"fas fa-plus\" },\r\n  crew: { group: \"crew-actions\", icon: \"fas fa-users\" },\r\n  day: { icon: \"fas fa-hourglass-end\" },\r\n  hour: { icon: \"fas fa-hourglass-half\" },\r\n  lair: { group: \"lair-actions\", icon: \"fas fa-home\" },\r\n  minute: { icon: \"fas fa-hourglass-start\" },\r\n  legendary: { group: \"legendary-actions\", icon: \"fas fas fa-dragon\" },\r\n  reaction: { group: \"reactions\", icon: \"fas fa-bolt\" },\r\n  reactiondamage: { group: \"reactions\", icon: \"fas fa-bolt\" },\r\n  reactionmanual: { group: \"reactions\", icon: \"fas fa-bolt\" },\r\n  special: { group: \"special-actions\", icon: \"fas fa-star\" },\r\n  other: { group: \"other-actions\" }\r\n};\r\n\r\n/**\r\n * Concentration icon\r\n */\r\nexport const CONCENTRATION_ICON = \"systems/dnd5e/icons/svg/statuses/concentrating.svg\";\r\n\r\nexport const CUSTOM_DND5E = {\r\n  ID: \"custom-dnd5e\",\r\n  COUNTERS: {\r\n    character: \"character-counters\",\r\n    group: \"group-counters\",\r\n    npc: \"npc-counters\"\r\n  }\r\n};\r\n\r\n/**\r\n * Feature Group IDs\r\n */\r\nexport const FEATURE_GROUP_IDS = [\r\n  \"activeFeatures\",\r\n  \"passiveFeatures\",\r\n  \"backgroundFeatures\",\r\n  \"classFeatures\",\r\n  \"feats\",\r\n  \"monsterFeatures\",\r\n  \"raceFeatures\",\r\n  \"artificerInfusions\",\r\n  \"channelDivinity\",\r\n  \"defensiveTactics\",\r\n  \"eldritchInvocations\",\r\n  \"elementalDisciplines\",\r\n  \"fightingStyles\",\r\n  \"huntersPrey\",\r\n  \"kiAbilities\",\r\n  \"maneuvers\",\r\n  \"metamagicOptions\",\r\n  \"multiattacks\",\r\n  \"pactBoons\",\r\n  \"psionicPowers\",\r\n  \"runes\",\r\n  \"superiorHuntersDefense\"\r\n];\r\n\r\n/**\r\n * Groups\r\n */\r\nexport const GROUP = {\r\n  _1stLevelSpells: { id: \"1st-level-spells\", name: \"tokenActionHud.dnd5e.1stLevelSpells\", spellMode: 1, type: \"system\" },\r\n  _2ndLevelSpells: { id: \"2nd-level-spells\", name: \"tokenActionHud.dnd5e.2ndLevelSpells\", spellMode: 2, type: \"system\" },\r\n  _3rdLevelSpells: { id: \"3rd-level-spells\", name: \"tokenActionHud.dnd5e.3rdLevelSpells\", spellMode: 3, type: \"system\" },\r\n  _4thLevelSpells: { id: \"4th-level-spells\", name: \"tokenActionHud.dnd5e.4thLevelSpells\", spellMode: 4, type: \"system\" },\r\n  _5thLevelSpells: { id: \"5th-level-spells\", name: \"tokenActionHud.dnd5e.5thLevelSpells\", spellMode: 5, type: \"system\" },\r\n  _6thLevelSpells: { id: \"6th-level-spells\", name: \"tokenActionHud.dnd5e.6thLevelSpells\", spellMode: 6, type: \"system\" },\r\n  _7thLevelSpells: { id: \"7th-level-spells\", name: \"tokenActionHud.dnd5e.7thLevelSpells\", spellMode: 7, type: \"system\" },\r\n  _8thLevelSpells: { id: \"8th-level-spells\", name: \"tokenActionHud.dnd5e.8thLevelSpells\", spellMode: 8, type: \"system\" },\r\n  _9thLevelSpells: { id: \"9th-level-spells\", name: \"tokenActionHud.dnd5e.9thLevelSpells\", spellMode: 9, type: \"system\" },\r\n  abilities: { id: \"abilities\", name: \"tokenActionHud.dnd5e.abilities\", type: \"system\" },\r\n  actions: { id: \"actions\", name: \"DND5E.ActionPl\", type: \"system\" },\r\n  activeFeatures: { id: \"active-features\", name: \"tokenActionHud.dnd5e.activeFeatures\", type: \"system\" },\r\n  artificerInfusions: { id: \"artificer-infusions\", name: \"tokenActionHud.dnd5e.artificerInfusions\", type: \"system\" },\r\n  atWillSpells: { id: \"at-will-spells\", name: \"tokenActionHud.dnd5e.atWillSpells\", spellMode: \"atwill\", type: \"system\" },\r\n  backgroundFeatures: { id: \"background-features\", name: \"tokenActionHud.dnd5e.backgroundFeatures\", type: \"system\" },\r\n  bonusActions: { id: \"bonus-actions\", name: \"tokenActionHud.dnd5e.bonusActions\", type: \"system\" },\r\n  cantrips: { id: \"cantrips\", name: \"tokenActionHud.dnd5e.cantrips\", spellMode: 0, type: \"system\" },\r\n  channelDivinity: { id: \"channel-divinity\", name: \"tokenActionHud.dnd5e.channelDivinity\", type: \"system\" },\r\n  checks: { id: \"checks\", name: \"tokenActionHud.dnd5e.checks\", type: \"system\" },\r\n  classFeatures: { id: \"class-features\", name: \"tokenActionHud.dnd5e.classFeatures\", type: \"system\" },\r\n  combat: { id: \"combat\", name: \"tokenActionHud.combat\", type: \"system\" },\r\n  conditions: { id: \"conditions\", name: \"tokenActionHud.dnd5e.conditions\", type: \"system\" },\r\n  consumables: { id: \"consumables\", name: \"TYPES.Item.consumablePl\", type: \"system\" },\r\n  containers: { id: \"containers\", name: \"TYPES.Item.containerPl\", type: \"system\" },\r\n  counters: { id: \"counters\", name: \"tokenActionHud.dnd5e.counters\", type: \"system\" },\r\n  crewActions: { id: \"crew-actions\", name: \"tokenActionHud.dnd5e.crewActions\", type: \"system\" },\r\n  defensiveTactics: { id: \"defensive-tactics\", name: \"tokenActionHud.dnd5e.defensiveTactics\", type: \"system\" },\r\n  eldritchInvocations: { id: \"eldritch-invocations\", name: \"tokenActionHud.dnd5e.eldritchInvocations\", type: \"system\" },\r\n  elementalDisciplines: { id: \"elemental-disciplines\", name: \"tokenActionHud.dnd5e.elementalDisciplines\", type: \"system\" },\r\n  equipment: { id: \"equipment\", name: \"TYPES.Item.equipmentPl\", type: \"system\" },\r\n  equipped: { id: \"equipped\", name: \"DND5E.Equipped\", type: \"system\" },\r\n  exhaustion: { id: \"exhaustion\", name: \"DND5E.Exhaustion\", type: \"system\" },\r\n  feats: { id: \"feats\", name: \"tokenActionHud.dnd5e.feats\", type: \"system\" },\r\n  fightingStyles: { id: \"fighting-styles\", name: \"tokenActionHud.dnd5e.fightingStyles\", type: \"system\" },\r\n  huntersPrey: { id: \"hunters-prey\", name: \"tokenActionHud.dnd5e.huntersPrey\", type: \"system\" },\r\n  innateSpells: { id: \"innate-spells\", name: \"tokenActionHud.dnd5e.innateSpells\", spellMode: \"innate\", type: \"system\" },\r\n  kiAbilities: { id: \"ki-abilities\", name: \"tokenActionHud.dnd5e.kiAbilities\", type: \"system\" },\r\n  lairActions: { id: \"lair-actions\", name: \"tokenActionHud.dnd5e.lairActions\", type: \"system\" },\r\n  legendaryActions: { id: \"legendary-actions\", name: \"tokenActionHud.dnd5e.legendaryActions\", type: \"system\" },\r\n  loot: { id: \"loot\", name: \"TYPES.Item.lootPl\", type: \"system\" },\r\n  maneuvers: { id: \"maneuvers\", name: \"tokenActionHud.dnd5e.maneuvers\", type: \"system\" },\r\n  metamagicOptions: { id: \"metamagic-options\", name: \"tokenActionHud.dnd5e.metamagicOptions\", type: \"system\" },\r\n  monsterFeatures: { id: \"monster-features\", name: \"tokenActionHud.dnd5e.monsterFeatures\", type: \"system\" },\r\n  multiattacks: { id: \"multiattacks\", name: \"tokenActionHud.dnd5e.multiattacks\", type: \"system\" },\r\n  otherActions: { id: \"other-actions\", name: \"tokenActionHud.dnd5e.otherActions\", type: \"system\" },\r\n  pactBoons: { id: \"pact-boons\", name: \"tokenActionHud.dnd5e.pactBoons\", type: \"system\" },\r\n  pactSpells: { id: \"pact-spells\", name: \"tokenActionHud.dnd5e.pactSpells\", spellMode: \"pact\", type: \"system\" },\r\n  passiveEffects: { id: \"passive-effects\", name: \"DND5E.EffectPassive\", type: \"system\" },\r\n  passiveFeatures: { id: \"passive-features\", name: \"tokenActionHud.dnd5e.passiveFeatures\", type: \"system\" },\r\n  psionicPowers: { id: \"psionic-powers\", name: \"tokenActionHud.dnd5e.psionicPowers\", type: \"system\" },\r\n  raceFeatures: { id: \"race-features\", name: \"tokenActionHud.dnd5e.raceFeatures\", type: \"system\" },\r\n  reactions: { id: \"reactions\", name: \"DND5E.ReactionPl\", type: \"system\" },\r\n  rests: { id: \"rests\", name: \"tokenActionHud.dnd5e.rests\", type: \"system\" },\r\n  runes: { id: \"runes\", name: \"tokenActionHud.dnd5e.runes\", type: \"system\" },\r\n  saves: { id: \"saves\", name: \"DND5E.ClassSaves\", type: \"system\" },\r\n  skills: { id: \"skills\", name: \"tokenActionHud.dnd5e.skills\", type: \"system\" },\r\n  superiorHuntersDefense: { id: \"superior-hunters-defense\", name: \"tokenActionHud.dnd5e.superiorHuntersDefense\", type: \"system\" },\r\n  temporaryEffects: { id: \"temporary-effects\", name: \"DND5E.EffectTemporary\", type: \"system\" },\r\n  token: { id: \"token\", name: \"tokenActionHud.token\", type: \"system\" },\r\n  tools: { id: \"tools\", name: \"TYPES.Item.toolPl\", type: \"system\" },\r\n  unequipped: { id: \"unequipped\", name: \"DND5E.Unequipped\", type: \"system\" },\r\n  utility: { id: \"utility\", name: \"tokenActionHud.utility\", type: \"system\" },\r\n  weapons: { id: \"weapons\", name: \"TYPES.Item.weaponPl\", type: \"system\" }\r\n};\r\n\r\n/**\r\n * Prepared icon\r\n */\r\nexport const PREPARED_ICON = \"fas fa-sun\";\r\n\r\n/**\r\n * Proficiency level icons\r\n */\r\nexport const PROFICIENCY_LEVEL_ICON = {\r\n  0.5: \"fas fa-adjust\",\r\n  1: \"fas fa-check\",\r\n  2: \"fas fa-check-double\"\r\n};\r\n\r\n/**\r\n * Rarity\r\n */\r\nexport const RARITY = {\r\n  common: \"tokenActionHud.dnd5e.common\",\r\n  uncommon: \"tokenActionHud.dnd5e.uncommon\",\r\n  rare: \"tokenActionHud.dnd5e.rare\",\r\n  veryRare: \"tokenActionHud.dnd5e.veryRare\",\r\n  legendary: \"tokenActionHud.dnd5e.legendary\",\r\n  artifact: \"tokenActionHud.dnd5e.artifact\"\r\n};\r\n\r\n/**\r\n * Ritual icon\r\n */\r\nexport const RITUAL_ICON = \"fas fa-circle-r\";\r\n\r\n/**\r\n * Spell Group IDs\r\n */\r\nexport const SPELL_GROUP_IDS = [\r\n  \"cantrips\",\r\n  \"_1stLevelSpells\",\r\n  \"_2ndLevelSpells\",\r\n  \"_3rdLevelSpells\",\r\n  \"_4thLevelSpells\",\r\n  \"_5thLevelSpells\",\r\n  \"_6thLevelSpells\",\r\n  \"_7thLevelSpells\",\r\n  \"_8thLevelSpells\",\r\n  \"_9thLevelSpells\",\r\n  \"atWillSpells\",\r\n  \"innateSpells\",\r\n  \"pactSpells\"\r\n];\r\n","import { GROUP } from \"./constants.js\";\r\n\r\n/**\r\n * Default categories and groups\r\n */\r\nexport let DEFAULTS = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  const groups = GROUP;\r\n  Object.values(groups).forEach(group => {\r\n    group.name = coreModule.api.Utils.i18n(group.name);\r\n    group.listName = `Group: ${coreModule.api.Utils.i18n(group.name)}`;\r\n  });\r\n  const groupsArray = Object.values(groups);\r\n  DEFAULTS = {\r\n    layout: [\r\n      {\r\n        nestId: \"inventory\",\r\n        id: \"inventory\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Inventory\"),\r\n        groups: [\r\n          { ...groups.weapons, nestId: \"inventory_weapons\" },\r\n          { ...groups.equipment, nestId: \"inventory_equipment\" },\r\n          { ...groups.consumables, nestId: \"inventory_consumables\" },\r\n          { ...groups.tools, nestId: \"inventory_tools\" },\r\n          { ...groups.containers, nestId: \"inventory_containers\" },\r\n          { ...groups.loot, nestId: \"inventory_loot\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"features\",\r\n        id: \"features\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Features\"),\r\n        groups: [\r\n          { ...groups.activeFeatures, nestId: \"features_active-features\" },\r\n          { ...groups.passiveFeatures, nestId: \"features_passive-features\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"spells\",\r\n        id: \"spells\",\r\n        name: coreModule.api.Utils.i18n(\"TYPES.Item.spellPl\"),\r\n        groups: [\r\n          { ...groups.atWillSpells, nestId: \"spells_at-will-spells\" },\r\n          { ...groups.innateSpells, nestId: \"spells_innate-spells\" },\r\n          { ...groups.pactSpells, nestId: \"spells_pact-spells\" },\r\n          { ...groups.cantrips, nestId: \"spells_cantrips\" },\r\n          { ...groups._1stLevelSpells, nestId: \"spells_1st-level-spells\" },\r\n          { ...groups._2ndLevelSpells, nestId: \"spells_2nd-level-spells\" },\r\n          { ...groups._3rdLevelSpells, nestId: \"spells_3rd-level-spells\" },\r\n          { ...groups._4thLevelSpells, nestId: \"spells_4th-level-spells\" },\r\n          { ...groups._5thLevelSpells, nestId: \"spells_5th-level-spells\" },\r\n          { ...groups._6thLevelSpells, nestId: \"spells_6th-level-spells\" },\r\n          { ...groups._7thLevelSpells, nestId: \"spells_7th-level-spells\" },\r\n          { ...groups._8thLevelSpells, nestId: \"spells_8th-level-spells\" },\r\n          { ...groups._9thLevelSpells, nestId: \"spells_9th-level-spells\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"attributes\",\r\n        id: \"attributes\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Attributes\"),\r\n        groups: [\r\n          { ...groups.abilities, nestId: \"attributes_abilities\" },\r\n          { ...groups.skills, nestId: \"attributes_skills\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"effects\",\r\n        id: \"effects\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Effects\"),\r\n        groups: [\r\n          { ...groups.temporaryEffects, nestId: \"effects_temporary-effects\" },\r\n          { ...groups.passiveEffects, nestId: \"effects_passive-effects\" },\r\n          { ...groups.conditions, nestId: \"effects_conditions\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"utility\",\r\n        id: \"utility\",\r\n        name: coreModule.api.Utils.i18n(\"tokenActionHud.utility\"),\r\n        groups: [\r\n          { ...groups.combat, nestId: \"utility_combat\" },\r\n          { ...groups.token, nestId: \"utility_token\" },\r\n          { ...groups.rests, nestId: \"utility_rests\" },\r\n          { ...groups.utility, nestId: \"utility_utility\" }\r\n        ]\r\n      }\r\n    ],\r\n    groups: groupsArray\r\n  };\r\n});\r\n","import { MODULE } from './constants.js'\r\n\r\nexport let Utils = null\r\n\r\nHooks.once('tokenActionHudCoreApiReady', async (coreModule) => {\r\n    Utils = class Utils {\r\n    /**\r\n     * Get setting value\r\n     * @param {string} key The key\r\n     * @param {string=null} defaultValue The default value\r\n     * @returns The setting value\r\n     */\r\n        static getSetting (key, defaultValue = null) {\r\n            let value = defaultValue ?? null\r\n            try {\r\n                value = game.settings.get(MODULE.ID, key)\r\n            } catch {\r\n                coreModule.api.Logger.debug(`Setting '${key}' not found`)\r\n            }\r\n            return value\r\n        }\r\n\r\n        /**\r\n     * Set setting value\r\n     * @param {string} key The key\r\n     * @param {string} value The value\r\n     */\r\n        static async setSetting (key, value) {\r\n            try {\r\n                value = await game.settings.set(MODULE.ID, key, value)\r\n                coreModule.api.Logger.debug(`Setting '${key}' set to '${value}'`)\r\n            } catch {\r\n                coreModule.api.Logger.debug(`Setting '${key}' not found`)\r\n            }\r\n        }\r\n    }\r\n})\r\n","// System Module Imports\r\nimport {\r\n  ACTIVATION_TYPE, ACTION_TYPE, CONCENTRATION_ICON, CUSTOM_DND5E, FEATURE_GROUP_IDS,\r\n  GROUP, PREPARED_ICON, PROFICIENCY_LEVEL_ICON, RARITY, SPELL_GROUP_IDS\r\n} from \"./constants.js\";\r\nimport { Utils } from \"./utils.js\";\r\n\r\nexport let ActionHandler = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  ActionHandler = class ActionHandler extends coreModule.api.ActionHandler {\r\n    // Initialize action variables\r\n    featureActions = null;\r\n\r\n    inventoryActions = null;\r\n\r\n    spellActions = null;\r\n\r\n    /**\r\n     * Build System Actions\r\n     * @override\r\n     * @param {Array} groupIds\r\n     * @returns {object}\r\n     */\r\n    async buildSystemActions(groupIds) {\r\n      // Set actor and token variables\r\n      this.actors = (!this.actor) ? this.#getValidActors() : [this.actor];\r\n      this.tokens = (!this.token) ? this.#getValidTokens() : [this.token];\r\n\r\n      // Set items variable\r\n      if (this.actor) {\r\n        this.items = coreModule.api.Utils.sortItemsByName(this.#discardSlowItems(this.actor.items));\r\n      }\r\n\r\n      // Set settings variables\r\n      this.abbreviateSkills = Utils.getSetting(\"abbreviateSkills\");\r\n      this.displaySpellInfo = Utils.getSetting(\"displaySpellInfo\");\r\n      this.showItemsWithoutActivationCosts = Utils.getSetting(\"showItemsWithoutActivationCosts\");\r\n      this.showUnchargedItems = Utils.getSetting(\"showUnchargedItems\");\r\n      this.showUnequippedItems = Utils.getSetting(\"showUnequippedItems\");\r\n      if (this.actor?.type === \"npc\" && !this.showUnequippedItems) {\r\n        this.showUnequippedItems = Utils.getSetting(\"showUnequippedItemsNpcs\");\r\n      }\r\n      this.showUnpreparedSpells = Utils.getSetting(\"showUnpreparedSpells\");\r\n\r\n      this.activationgroupIds = [\r\n        \"actions\",\r\n        \"bonus-actions\",\r\n        \"crew-actions\",\r\n        \"lair-actions\",\r\n        \"legendary-actions\",\r\n        \"reactions\",\r\n        \"other-actions\"\r\n      ];\r\n\r\n      if (this.actor?.type === \"character\" || this.actor?.type === \"npc\") {\r\n        this.inventorygroupIds = [\r\n          \"equipped\",\r\n          \"consumables\",\r\n          \"containers\",\r\n          \"equipment\",\r\n          \"loot\",\r\n          \"tools\",\r\n          \"weapons\",\r\n          \"unequipped\"\r\n        ];\r\n\r\n        await this.#buildCharacterActions();\r\n      } else if (this.actor?.type === \"vehicle\") {\r\n        this.inventorygroupIds = [\r\n          \"consumables\",\r\n          \"equipment\",\r\n          \"tools\",\r\n          \"weapons\"\r\n        ];\r\n\r\n        await this.#buildVehicleActions();\r\n      } else if (!this.actor) {\r\n        await this.#buildMultipleTokenActions();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build character actions\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    async #buildCharacterActions() {\r\n      await Promise.all([\r\n        this.#buildConditions(),\r\n        this.#buildEffects(),\r\n        this.#buildFeatures(),\r\n        this.#buildInventory(),\r\n        this.#buildSpells()\r\n      ]);\r\n      this.#buildAbilities(\"ability\", \"abilities\");\r\n      this.#buildAbilities(\"check\", \"checks\");\r\n      this.#buildAbilities(\"save\", \"saves\");\r\n      this.#buildCombat();\r\n      this.#buildCounters();\r\n      this.#buildExhaustion();\r\n      this.#buildRests();\r\n      this.#buildSkills();\r\n      this.#buildUtility();\r\n    }\r\n\r\n    /**\r\n     * Build vehicle actions\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    async #buildVehicleActions() {\r\n      await Promise.all([\r\n        this.#buildConditions(),\r\n        this.#buildEffects(),\r\n        this.#buildFeatures(),\r\n        this.#buildInventory()\r\n      ]);\r\n      this.#buildAbilities(\"ability\", \"abilities\");\r\n      this.#buildAbilities(\"check\", \"checks\");\r\n      this.#buildAbilities(\"save\", \"saves\");\r\n      this.#buildCombat();\r\n      this.#buildUtility();\r\n    }\r\n\r\n    /**\r\n     * Build multiple token actions\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    async #buildMultipleTokenActions() {\r\n      this.#buildAbilities(\"ability\", \"abilities\");\r\n      this.#buildAbilities(\"check\", \"checks\");\r\n      this.#buildAbilities(\"save\", \"saves\");\r\n      this.#buildCombat();\r\n      await this.#buildConditions();\r\n      this.#buildRests();\r\n      this.#buildSkills();\r\n      this.#buildUtility();\r\n    }\r\n\r\n    /**\r\n     * Build abilities\r\n     * @private\r\n     * @param {string} actionType\r\n     * @param {string} groupId\r\n     */\r\n    #buildAbilities(actionType, groupId) {\r\n      // Get abilities and exit if none exist\r\n      const abilities = this.actor?.system.abilities || CONFIG.DND5E.abilities;\r\n      if (abilities.length === 0) return;\r\n\r\n      // Get actions\r\n      const actions = Object.entries(abilities)\r\n        .filter(ability => abilities[ability[0]].value !== 0)\r\n        .map(([abilityId, ability]) => {\r\n          const name = CONFIG.DND5E.abilities[abilityId].label;\r\n          const mod = (groupId === \"saves\") ? ability?.save : ability?.mod;\r\n          return {\r\n            id: `${actionType}-${abilityId}`,\r\n            name: (this.abbreviateSkills) ? coreModule.api.Utils.capitalize(abilityId) : name,\r\n            encodedValue: [actionType, abilityId].join(this.delimiter),\r\n            icon1: (groupId !== \"checks\") ? this.#getProficiencyIcon(abilities[abilityId].proficient) : \"\",\r\n            info1: (this.actor) ? { text: coreModule.api.Utils.getModifier(mod) } : null,\r\n            info2: (this.actor && groupId === \"abilities\") ? { text: `(${coreModule.api.Utils.getModifier(ability?.save)})` } : null,\r\n            listName: this.#getListName(actionType, name)\r\n          };\r\n        });\r\n\r\n      // Add actions to action list\r\n      this.addActions(actions, { id: groupId });\r\n    }\r\n\r\n    /**\r\n     * Build activations\r\n     * @public\r\n     * @param {object} data  groupData, actionData, actionType\r\n     */\r\n    async buildActivations(data) {\r\n      const { groupData, actionData, actionType = \"item\" } = data;\r\n\r\n      // Create map of items according to activation type\r\n      const activationItems = new Map();\r\n\r\n      // Loop items and add to activationItems\r\n      for (const [key, value] of actionData) {\r\n        const activationType = value.system?.activities?.contents[0]?.activation?.type;\r\n        const groupId = ACTIVATION_TYPE[activationType]?.group ?? \"other\";\r\n        if (!activationItems.has(groupId)) activationItems.set(groupId, new Map());\r\n        activationItems.get(groupId).set(key, value);\r\n      }\r\n\r\n      // Loop through action group ids\r\n      for (const value of Object.values(ACTIVATION_TYPE)) {\r\n        const group = value.group;\r\n\r\n        // Skip if no items exist\r\n        if (!activationItems.has(group)) continue;\r\n\r\n        // Clone and add to group data\r\n        const groupDataClone = { ...groupData, id: `${group}+${groupData.id}`, type: \"system-derived\" };\r\n\r\n        // Set Equipped and Unequipped groups to not selected by default\r\n        if ([\"equipped\", \"unequipped\"].includes(groupData.id)) { groupDataClone.defaultSelected = false; }\r\n\r\n        // Create parent group data\r\n        const parentgroupData = { id: group, type: \"system\" };\r\n\r\n        // Add group to HUD\r\n        await this.addGroup(groupDataClone, parentgroupData);\r\n\r\n        // Add spell slot info to group\r\n        if (actionType === \"spell\") { this.addGroupInfo(groupDataClone); }\r\n\r\n        // Build actions\r\n        await this.buildActions({\r\n          groupData: groupDataClone,\r\n          actionData: activationItems.get(group),\r\n          actionType\r\n        });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build combat\r\n     * @private\r\n     */\r\n    #buildCombat() {\r\n      // If token's turn, include endTurn\r\n      const combatType = {\r\n        initiative: \"tokenActionHud.dnd5e.rollInitiative\",\r\n        ...(game.combat?.current?.tokenId !== this.token?.id && { endTurn: \"tokenActionHud.endTurn\" })\r\n      };\r\n\r\n      const tokens = coreModule.api.Utils.getControlledTokens();\r\n      const tokenIds = tokens?.map(token => token.id);\r\n      const combatants = (game.combat)\r\n        ? game.combat.combatants.filter(combatant => tokenIds.includes(combatant.tokenId))\r\n        : [];\r\n\r\n      const getInfo1 = id => {\r\n        if (id === \"initiative\" && combatants.length === 1) {\r\n          const currentInitiative = combatants[0].initiative;\r\n          return { class: \"tah-spotlight\", text: currentInitiative };\r\n        }\r\n        return {};\r\n      };\r\n\r\n      const getActive = () => { return combatants.length > 0 && (combatants.every(combatant => combatant?.initiative)) ? \" active\" : \"\";};\r\n\r\n      // Get actions\r\n      const actionType = \"utility\";\r\n      const actions = Object.entries(combatType).map(([id, name]) => {\r\n        return {\r\n          id,\r\n          name: game.i18n.localize(name),\r\n          encodedValue: [actionType, id].join(this.delimiter),\r\n          info1: getInfo1(id),\r\n          cssClass: (id === \"initiative\" ) ? `toggle${getActive()}` : \"\",\r\n          listName: this.#getListName(actionType, name)\r\n        };\r\n      });\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"combat\" });\r\n    }\r\n\r\n    /**\r\n     * Build conditions\r\n     * @private\r\n     */\r\n    async #buildConditions() {\r\n      if (this.tokens?.length === 0) return;\r\n\r\n      // Get conditions and exit if none exist\r\n      const conditions = CONFIG.statusEffects.filter(condition => condition.id !== \"\");\r\n      if (conditions.length === 0) return;\r\n\r\n      // Get actions\r\n      const actionType = \"condition\";\r\n      const actions = await Promise.all(conditions.map(async condition => {\r\n        const hasCondition = this.actors.every(actor => {\r\n          return actor.effects.some(effect => effect.statuses.some(status => status === condition.id)\r\n          && !effect?.disabled);\r\n        });\r\n        const name = game.i18n.localize(condition.label) ?? condition.name;\r\n        return {\r\n          id: condition.id,\r\n          name,\r\n          encodedValue: [actionType, condition.id].join(this.delimiter),\r\n          img: coreModule.api.Utils.getImage(condition),\r\n          cssClass: `toggle${(hasCondition) ? \" active\" : \"\"}`,\r\n          listName: this.#getListName(actionType, name),\r\n          tooltip: await this.#getTooltip(await this.#getConditionTooltipData(condition.id, condition.name))\r\n        };\r\n      }));\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"conditions\" });\r\n    }\r\n\r\n    /**\r\n     * Build counters\r\n     * @private\r\n     */\r\n    async #buildCounters() {\r\n      if (!CUSTOM_DND5E.COUNTERS[this.actor?.type]) return;\r\n\r\n      const actionType = \"counter\";\r\n\r\n      let counters = game.settings.get(CUSTOM_DND5E.ID, CUSTOM_DND5E.COUNTERS[this.actor?.type]) ?? {};\r\n\r\n      if (coreModule.api.Utils.isModuleActive(CUSTOM_DND5E.ID) && Object.keys(counters).length) {\r\n        counters = Object.entries(counters)\r\n          .filter(([_, value]) => value.visible)\r\n          .map(([key, value]) => {\r\n            value.key = key;\r\n            return value;\r\n          });\r\n      } else {\r\n        counters = [\r\n          {\r\n            name: game.i18n.localize(\"DND5E.DeathSave\"),\r\n            type: \"successFailure\",\r\n            system: true,\r\n            visible: true,\r\n            key: \"death-saves\"\r\n          },\r\n          {\r\n            name: game.i18n.localize(\"DND5E.Exhaustion\"),\r\n            type: \"number\",\r\n            system: true,\r\n            visible: true,\r\n            key: \"exhaustion\"\r\n          },\r\n          {\r\n            name: game.i18n.localize(\"DND5E.Inspiration\"),\r\n            type: \"checkbox\",\r\n            system: true,\r\n            visible: true,\r\n            key: \"inspiration\"\r\n          }\r\n        ];\r\n      }\r\n\r\n      // Get actions\r\n      const actions = counters.map(counter => {\r\n        let active = \"\";\r\n        let cssClass = \"\";\r\n        let img = \"\";\r\n        let info1 = \"\";\r\n        if (counter.system) {\r\n          switch (counter.key) {\r\n            case \"exhaustion\":\r\n              active = (this.actor.system.attributes.exhaustion > 0) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              img = coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/exhaustion.svg\");\r\n              info1 = { text: this.actor.system.attributes.exhaustion };\r\n              break;\r\n            case \"death-saves\":\r\n              img = coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/death-saves.svg\");\r\n              info1 = { text: `${this.actor.system.attributes.death.success}/${this.actor.system.attributes.death.failure}` };\r\n              break;\r\n            case \"inspiration\":\r\n              active = (this.actor.system.attributes.inspiration) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              img = coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/inspiration.svg\");\r\n              break;\r\n          }\r\n        } else {\r\n          const value = this.actor.getFlag(CUSTOM_DND5E.ID, counter.key);\r\n          switch (counter.type) {\r\n            case \"checkbox\":\r\n              active = (value) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              break;\r\n            case \"fraction\":\r\n              active = (value.value > 0) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              info1 = { text: `${value.value ?? 0}/${value.max ?? 0}` };\r\n              break;\r\n            case \"number\":\r\n              active = (value > 0) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              info1 = { text: value };\r\n              break;\r\n            case \"successFailure\":\r\n              info1 = { text: `${value?.success ?? 0}/${value?.failure ?? 0}` };\r\n              break;\r\n          }\r\n        }\r\n\r\n        return {\r\n          id: counter.key,\r\n          name: counter.label,\r\n          listName: this.#getListName(actionType, counter.name),\r\n          encodedValue: [actionType, (counter.system) ? counter.key : encodeURIComponent(`${counter.key}>${counter.type}`)].join(this.delimiter),\r\n          cssClass,\r\n          img,\r\n          info1\r\n        };\r\n      });\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"counters\" });\r\n    }\r\n\r\n    /**\r\n     * Build effects\r\n     * @private\r\n     */\r\n    async #buildEffects() {\r\n      const actionType = \"effect\";\r\n\r\n      // Get effects and exit if none exist\r\n      const effects = new Map(this.actor.allApplicableEffects().map(effect => [effect.id, effect]));\r\n      if (effects.size === 0) return;\r\n\r\n      // Map passive and temporary effects to new maps\r\n      const passiveEffects = new Map();\r\n      const temporaryEffects = new Map();\r\n      const conditionIds = new Set(Object.keys(CONFIG.DND5E.conditionTypes).map(key => dnd5e.utils.staticID(`dnd5e${key}`)));\r\n\r\n      // Iterate effects and add to a map based on the isTemporary value\r\n      for (const [effectId, effect] of effects.entries()) {\r\n        if (effect.isSuppressed) continue;\r\n        if (effect.parent?.system?.identified === false && !game.user.isGM) continue;\r\n        if (conditionIds.has(effect.id)) continue;\r\n\r\n        if (effect.isTemporary) { temporaryEffects.set(effectId, effect); }\r\n        else { passiveEffects.set(effectId, effect); }\r\n      }\r\n\r\n      // Build passive and temporary effects\r\n      await Promise.all([\r\n        this.buildActions({ groupData: { id: \"passive-effects\" }, actionData: passiveEffects, actionType }),\r\n        this.buildActions({ groupData: { id: \"temporary-effects\" }, actionData: temporaryEffects, actionType })\r\n      ]);\r\n    }\r\n\r\n    /**\r\n     * Build exhaustion\r\n     * @private\r\n     */\r\n    #buildExhaustion() {\r\n      // Exit if every actor is not the character type\r\n      if (!this.actors.every(actor => actor.type === \"character\")) return;\r\n\r\n      // Get actions\r\n      const actionType = \"exhaustion\";\r\n      const active = this.actor.system.attributes.exhaustion > 0 ? \" active\" : \"\";\r\n      const actions = [{\r\n        id: \"exhaustion\",\r\n        name: game.i18n.localize(\"DND5E.Exhaustion\"),\r\n        encodedValue: [actionType, \"exhaustion\"].join(this.delimiter),\r\n        cssClass: `toggle${active}`,\r\n        img: coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/exhaustion.svg\"),\r\n        info1: { text: this.actor.system.attributes.exhaustion },\r\n        listName: this.#getListName(actionType, name)\r\n      }];\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"exhaustion\" });\r\n    }\r\n\r\n    /**\r\n     * Build features\r\n     * @private\r\n     */\r\n    async #buildFeatures() {\r\n      // Filter feats from items and exit if none exist\r\n      const feats = new Map([...this.items].filter(([, value]) => value.type === \"feat\"));\r\n      if (feats.size === 0) return;\r\n\r\n      // Map active and passive features to new maps\r\n      const featuresMap = new Map([\r\n        [\"activeFeatures\", new Map()],\r\n        [\"passiveFeatures\", new Map()]\r\n      ]);\r\n\r\n      const featureType = {\r\n        background: \"backgroundFeatures\",\r\n        class: \"classFeatures\",\r\n        monster: \"monsterFeatures\",\r\n        race: \"raceFeatures\",\r\n        feats: \"feats\"\r\n      };\r\n\r\n      const classFeatureType = {\r\n        artificerInfusion: \"artificerInfusions\",\r\n        channelDivinity: \"channelDivinity\",\r\n        defensiveTactic: \"defensiveTactics\",\r\n        eldritchInvocation: \"eldritchInvocations\",\r\n        elementalDiscipline: \"elementalDisciplines\",\r\n        fightingStyle: \"fightingStyles\",\r\n        huntersPrey: \"huntersPrey\",\r\n        ki: \"kiAbilities\",\r\n        maneuver: \"maneuvers\",\r\n        metamagic: \"metamagicOptions\",\r\n        multiattack: \"multiattacks\",\r\n        pact: \"pactBoons\",\r\n        psionicPower: \"psionicPowers\",\r\n        rune: \"runes\",\r\n        superiorHuntersDefense: \"superiorHuntersDefense\"\r\n      };\r\n\r\n      for (const [key, value] of feats) {\r\n        const activationType = value.system.activities.contents[0]?.type;\r\n        const type = value.system.type.value;\r\n        const subType = value.system.type?.subtype;\r\n\r\n        if (activationType) { featuresMap.get(\"activeFeatures\").set(key, value); }\r\n        else { featuresMap.get(\"passiveFeatures\").set(key, value); }\r\n\r\n        // Map feature types\r\n        if (featureType[type]) {\r\n          if (!featuresMap.has(featureType[type])) featuresMap.set(featureType[type], new Map());\r\n          featuresMap.get(featureType[type]).set(key, value);\r\n        }\r\n\r\n        // Map class feature subtypes\r\n        if (classFeatureType[subType]) {\r\n          if (!featuresMap.has(classFeatureType[subType])) featuresMap.set(classFeatureType[subType], new Map());\r\n          featuresMap.get(classFeatureType[subType]).set(key, value);\r\n        }\r\n      }\r\n\r\n      // Loop through inventory groups ids\r\n      for (const id of FEATURE_GROUP_IDS) {\r\n        const actionData = featuresMap.get(id);\r\n        if (!actionData || actionData.size === 0) continue;\r\n\r\n        // Create group data\r\n        const groupData = {\r\n          id: GROUP[id].id,\r\n          name: game.i18n.localize(GROUP[id].name) ?? \"\"\r\n        };\r\n\r\n        // Build actions and activations\r\n        const actionType = \"feature\";\r\n        await this.buildActions({ groupData, actionData, actionType });\r\n        await this.buildActivations({ groupData, actionData, actionType });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build inventory\r\n     * @private\r\n     */\r\n    async #buildInventory() {\r\n      // Exit early if no items exist\r\n      if (this.items.size === 0) return;\r\n\r\n      // Initialize inventory map categories\r\n      const inventoryMap = new Map([\r\n        [\"equipped\", new Map()],\r\n        [\"unequipped\", new Map()],\r\n        [\"consumables\", new Map()],\r\n        [\"containers\", new Map()],\r\n        [\"equipment\", new Map()],\r\n        [\"loot\", new Map()],\r\n        [\"tools\", new Map()],\r\n        [\"weapons\", new Map()]\r\n      ]);\r\n\r\n      for (const [key, value] of this.items) {\r\n        // Set items into maps\r\n        if (value.system?.quantity > 0 && this.#isActiveItem(value)) {\r\n          if (value.system.equipped) { inventoryMap.get(\"equipped\").set(key, value); }\r\n          else { inventoryMap.get(\"unequipped\").set(key, value); }\r\n\r\n          if (this.#isUsableItem(value) && value.type === \"consumable\") inventoryMap.get(\"consumables\").set(key, value);\r\n          if (this.#isEquippedItem(value)) {\r\n            switch (value.type) {\r\n              case \"container\": inventoryMap.get(\"containers\").set(key, value); break;\r\n              case \"equipment\": inventoryMap.get(\"equipment\").set(key, value); break;\r\n              case \"loot\": inventoryMap.get(\"loot\").set(key, value); break;\r\n              case \"tool\": inventoryMap.get(\"tools\").set(key, value); break;\r\n              case \"weapon\": inventoryMap.get(\"weapons\").set(key, value); break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Loop through inventory subcateogry ids\r\n      for (const groupId of this.inventorygroupIds) {\r\n        const actionData = inventoryMap.get(groupId);\r\n        if (!actionData || actionData.size === 0) continue;\r\n\r\n        // Create group data\r\n        const groupData = {\r\n          id: groupId,\r\n          name: game.i18n.localize(GROUP[groupId].name)\r\n        };\r\n\r\n        const data = { groupData, actionData };\r\n\r\n        // Build actions and activations\r\n        await this.buildActions(data);\r\n        await this.buildActivations(data);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build rests\r\n     * @private\r\n     */\r\n    #buildRests() {\r\n      // Exit if every actor is not the character type\r\n      if (this.actors.length === 0 || !this.actors.every(actor => actor.type === \"character\")) return;\r\n\r\n      // Get actions\r\n      const actionType = \"utility\";\r\n      const restTypes = { shortRest: \"DND5E.ShortRest\", longRest: \"DND5E.LongRest\" };\r\n      const actions = Object.entries(restTypes).map(([id, name]) => {\r\n        name = game.i18n.localize(name);\r\n        return {\r\n          id,\r\n          name,\r\n          encodedValue: [actionType, id].join(this.delimiter),\r\n          listName: this.#getListName(actionType, name)\r\n        };\r\n      });\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"rests\" });\r\n    }\r\n\r\n    /**\r\n     * Build skills\r\n     * @private\r\n     */\r\n    #buildSkills() {\r\n      // Get skills and exit if none exist\r\n      const skills = this.actor?.system.skills || CONFIG.DND5E.skills;\r\n      if (skills.length === 0) return;\r\n\r\n      // Get actions\r\n      const actionType = \"skill\";\r\n      const actions = Object.entries(skills).map(([id, skill]) => {\r\n        try {\r\n          const name = CONFIG.DND5E.skills[id].label;\r\n          return {\r\n            id,\r\n            name: this.abbreviateSkills ? coreModule.api.Utils.capitalize(id) : name,\r\n            encodedValue: [actionType, id].join(this.delimiter),\r\n            icon1: this.#getProficiencyIcon(skill.value),\r\n            info1: (this.actor) ? { text: coreModule.api.Utils.getModifier(skill.total) } : \"\",\r\n            listName: this.#getListName(actionType, name)\r\n          };\r\n        } catch(error) {\r\n          coreModule.api.Logger.error(skill);\r\n          return null;\r\n        }\r\n      }).filter(skill => !!skill);\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"skills\" });\r\n    }\r\n\r\n    /**\r\n     * Build spells\r\n     */\r\n    async #buildSpells() {\r\n      // Filter items for spells and exit if none exist\r\n      const spells = new Map([...this.items].filter(([, value]) => value.type === \"spell\"));\r\n      if (spells.size === 0) return;\r\n\r\n      // Initialize spells map categories\r\n      const spellsMap = new Map([\r\n        [\"atWillSpells\", new Map()],\r\n        [\"innateSpells\", new Map()],\r\n        [\"pactSpells\", new Map()],\r\n        [\"cantrips\", new Map()],\r\n        [\"_1stLevelSpells\", new Map()],\r\n        [\"_2ndLevelSpells\", new Map()],\r\n        [\"_3rdLevelSpells\", new Map()],\r\n        [\"_4thLevelSpells\", new Map()],\r\n        [\"_5thLevelSpells\", new Map()],\r\n        [\"_6thLevelSpells\", new Map()],\r\n        [\"_7thLevelSpells\", new Map()],\r\n        [\"_8thLevelSpells\", new Map()],\r\n        [\"_9thLevelSpells\", new Map()]\r\n      ]);\r\n\r\n      // Loop through items\r\n      for (const [key, value] of spells) {\r\n        if (!this.#isUsableItem(value) || !this.#isUsableSpell(value)) continue;\r\n\r\n        switch (value.system.preparation.mode) {\r\n          case \"atwill\":\r\n            spellsMap.get(\"atWillSpells\").set(key, value); break;\r\n          case \"innate\":\r\n            spellsMap.get(\"innateSpells\").set(key, value); break;\r\n          case \"pact\":\r\n            spellsMap.get(\"pactSpells\").set(key, value); break;\r\n          default: {\r\n            switch (value.system.level) {\r\n              case 0:\r\n                spellsMap.get(\"cantrips\").set(key, value); break;\r\n              case 1:\r\n                spellsMap.get(\"_1stLevelSpells\").set(key, value); break;\r\n              case 2:\r\n                spellsMap.get(\"_2ndLevelSpells\").set(key, value); break;\r\n              case 3:\r\n                spellsMap.get(\"_3rdLevelSpells\").set(key, value); break;\r\n              case 4:\r\n                spellsMap.get(\"_4thLevelSpells\").set(key, value); break;\r\n              case 5:\r\n                spellsMap.get(\"_5thLevelSpells\").set(key, value); break;\r\n              case 6:\r\n                spellsMap.get(\"_6thLevelSpells\").set(key, value); break;\r\n              case 7:\r\n                spellsMap.get(\"_7thLevelSpells\").set(key, value); break;\r\n              case 8:\r\n                spellsMap.get(\"_8thLevelSpells\").set(key, value); break;\r\n              case 9:\r\n                spellsMap.get(\"_9thLevelSpells\").set(key, value); break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Reverse sort spell slots by level\r\n      const systemSpells = Object.entries(this.actor.system.spells).reverse();\r\n\r\n      // Set spell slot availability\r\n      const spellSlotsMap = new Map();\r\n      let spellSlotAvailable = this.showUnchargedItems;\r\n      let pactSlotAvailable = this.showUnchargedItems;\r\n      let pactSlot = null;\r\n\r\n      for (const [key, value] of systemSpells) {\r\n        const hasValue = value.value > 0;\r\n        const hasMax = value.max > 0;\r\n        const hasLevel = value.level > 0;\r\n\r\n        if (key === \"pact\") {\r\n          pactSlotAvailable = pactSlotAvailable || (hasValue && hasMax && hasLevel);\r\n          value.slotAvailable = pactSlotAvailable && hasLevel;\r\n          pactSlot = [key, value];\r\n        } else if (key.startsWith(\"spell\") && key !== \"spell0\") {\r\n          spellSlotAvailable = spellSlotAvailable || (hasValue && hasMax);\r\n          value.slotAvailable = spellSlotAvailable;\r\n          spellSlotsMap.set(key, value);\r\n        } else if (hasValue) {\r\n          value.slotsAvailable = true;\r\n          spellSlotsMap.set(key, value);\r\n        }\r\n      }\r\n\r\n      // Set equivalent spell slot where pact slot is available\r\n      if (pactSlot[1].slotAvailable) {\r\n        const spellSlot = spellSlotsMap.get(f`spell${pactSlot[1].level}`);\r\n        spellSlot.slotsAvailable = true;\r\n      }\r\n\r\n      const spellSlotModes = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, \"pact\"]);\r\n\r\n      for (const id of SPELL_GROUP_IDS) {\r\n        // Skip if no spells exist\r\n        if (!spellsMap.has(id)) continue;\r\n\r\n        const spellMode = GROUP[id].spellMode;\r\n        const levelInfo = (spellMode === \"pact\") ? pactSlot[1] : spellSlotsMap.get(`spell${spellMode}`);\r\n        const { value: slots = 0, max = 0, slotAvailable = false } = levelInfo || {};\r\n\r\n        // Skip if spells require spell slots and none are available\r\n        if (!slotAvailable && spellSlotModes.has(spellMode)) continue;\r\n\r\n        // Create group data\r\n        const groupData = {\r\n          id: GROUP[id].id,\r\n          name: game.i18n.localize(GROUP[id].name),\r\n          info: { info1: { class: \"tah-spotlight\", text: (max > 0) ? `${slots}/${max}` : \"\" } }\r\n        };\r\n\r\n        // Add spell slot info to group\r\n        this.addGroupInfo(groupData);\r\n\r\n        const data = { groupData, actionData: spellsMap.get(id), actionType: \"spell\" };\r\n\r\n        // Build actions and activations\r\n        await this.buildActions(data);\r\n        await this.buildActivations(data);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build utility\r\n     * @private\r\n     */\r\n    #buildUtility() {\r\n      // Exit if every actor is not the character type\r\n      if (this.actors.length === 0) return;\r\n      if (!this.actors.every(actor => actor.type === \"character\")) return;\r\n\r\n      const actionType = \"utility\";\r\n\r\n      // Set utility types\r\n      const utilityTypes = {\r\n        deathSave: { name: game.i18n.localize(\"DND5E.DeathSave\") },\r\n        inspiration: { name: game.i18n.localize(\"DND5E.Inspiration\") }\r\n      };\r\n\r\n      // Delete 'deathSave' for multiple tokens\r\n      if (!this.actor || this.actor.system.attributes.hp.value > 0) delete utilityTypes.deathSave;\r\n\r\n      // Get actions\r\n      const actions = Object.entries(utilityTypes)\r\n        .map(utilityType => {\r\n          const id = utilityType[0];\r\n          const name = utilityType[1].name;\r\n          const encodedValue = [actionType, id].join(this.delimiter);\r\n          let cssClass = \"\";\r\n          if (utilityType[0] === \"inspiration\") {\r\n            const active = this.actors.every(actor => actor.system.attributes?.inspiration)\r\n              ? \" active\"\r\n              : \"\";\r\n            cssClass = `toggle${active}`;\r\n          }\r\n          return {\r\n            id,\r\n            name,\r\n            encodedValue,\r\n            cssClass,\r\n            listName: this.#getListName(actionType, name)\r\n          };\r\n        });\r\n\r\n      // Crreate group data\r\n      const groupData = { id: \"utility\" };\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /**\r\n     * Build actions\r\n     * @public\r\n     * @param {object} data actionData, groupData, actionType\r\n     * @param {object} options\r\n     */\r\n    async buildActions(data, options) {\r\n      const { actionData, groupData, actionType } = data;\r\n\r\n      // Exit if there is no action data\r\n      if (actionData.size === 0) return;\r\n\r\n      // Exit if there is no groupId\r\n      const groupId = (typeof groupData === \"string\" ? groupData : groupData?.id);\r\n      if (!groupId) return;\r\n\r\n      // Get actions\r\n      const actions = await Promise.all([...actionData].map(async item => await this.#getAction(item[1], actionType)));\r\n\r\n      // Add actions to action list\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /**\r\n     * Get action\r\n     * @private\r\n     * @param {object} entity      The entity\r\n     *  @param {string} actionType The action type\r\n     * @returns {object}           The action\r\n     */\r\n    async #getAction(entity, actionType = \"item\") {\r\n      const id = entity.id ?? entity._id;\r\n      let name = entity?.name ?? entity?.label;\r\n      let cssClass = \"\";\r\n      if (Object.hasOwn(entity, \"disabled\")) {\r\n        const active = (!entity.disabled) ? \" active\" : \"\";\r\n        cssClass = `toggle${active}`;\r\n      }\r\n      const info = this.#getItemInfo(entity);\r\n      const tooltip = await this.#getTooltip(await this.#getTooltipData(entity));\r\n      return {\r\n        id,\r\n        name,\r\n        encodedValue: [actionType, id].join(this.delimiter),\r\n        cssClass,\r\n        img: coreModule.api.Utils.getImage(entity),\r\n        icon1: this.#getActivationTypeIcon(entity.system?.activities?.contents[0]?.type),\r\n        icon2: this.#getPreparedIcon(entity),\r\n        icon3: this.#getConcentrationIcon(entity),\r\n        info1: info?.info1,\r\n        info2: info?.info2,\r\n        info3: info?.info3,\r\n        listName: this.#getListName(actionType, name),\r\n        tooltip\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Is active item\r\n     * @private\r\n     * @param {object} item The item\r\n     * @returns {boolean}   Whether the item is active\r\n     */\r\n    #isActiveItem(item) {\r\n      if (this.showItemsWithoutActivationCosts) return true;\r\n      const activationTypes = new Set(Object.keys(CONFIG.DND5E.activityActivationTypes).filter(activationType => activationType !== \"none\"));\r\n      const activationType = item.system?.activities?.contents[0]?.activation?.type;\r\n      return activationTypes.has(activationType) || item.type === \"tool\";\r\n    }\r\n\r\n    /**\r\n     * Is equipped item\r\n     * @private\r\n     * @param {object} item The item\r\n     * @returns {boolean}   Whether the item is equipped\r\n     */\r\n    #isEquippedItem(item) {\r\n      const excludedTypes = [\"consumable\", \"spell\", \"feat\"];\r\n      return (this.showUnequippedItems && !excludedTypes.includes(item.type))\r\n      || (item.system.equipped && item.type !== \"consumable\");\r\n    }\r\n\r\n    /**\r\n     * Is usable item\r\n     * @private\r\n     * @param {object} item The item\r\n     * @returns {boolean}   Whether the item is usable\r\n     */\r\n    #isUsableItem(item) {\r\n      return this.showUnchargedItems || item.system.uses.value || !item.system.uses.max;\r\n    }\r\n\r\n    /**\r\n     * Is usable spell\r\n     * @private\r\n     * @param {object} spell The spell\r\n     * @returns {boolean}    Whether the spell is usable\r\n     */\r\n    #isUsableSpell(spell) {\r\n      if (this.actor?.type !== \"character\" && this.showUnequippedItems) return true;\r\n      if (this.showUnpreparedSpells) return true;\r\n\r\n      const preparationModes = new Set(Object.keys(CONFIG.DND5E.spellPreparationModes).filter(preparationMode => preparationMode !== \"prepared\"));\r\n\r\n      // Return true if spell is a cantrip, has a preparation mode other than 'prepared' or is prepared\r\n      return spell.system.level === 0 || preparationModes.has(spell.system.preparation.mode)\r\n      || spell.system.preparation.prepared;\r\n    }\r\n\r\n    #getListName(actionType, actionName) {\r\n      const prefix = `${game.i18n.localize(ACTION_TYPE[actionType])}: ` ?? \"\";\r\n      return `${prefix}${actionName}` ?? \"\";\r\n    }\r\n\r\n    /**\r\n     * Get item info\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {object}\r\n     */\r\n    #getItemInfo(item) {\r\n      const info1 = item.type === \"spell\" ? this.#getSpellInfo(item) : this.#getQuantityData(item);\r\n      const info2 = this.#getUsesData(item);\r\n      const info3 = this.#getConsumeData(item);\r\n\r\n      return { info1, info2, info3 };\r\n    }\r\n\r\n    /**\r\n     * Add spell info\r\n     * @private\r\n     * @param {object} spell The spell\r\n     * @returns {object}     The spell info\r\n     */\r\n    #getSpellInfo(spell) {\r\n      if (!this.displaySpellInfo) return null;\r\n\r\n      const components = spell.system?.properties;\r\n      if (!components) return null;\r\n\r\n      const info = { text: \"\", title: \"\" };\r\n      const componentTypes = {\r\n        vocal: \"DND5E.ComponentVerbal\",\r\n        somatic: \"DND5E.ComponentSomatic\",\r\n        material: \"DND5E.ComponentMaterial\"\r\n      };\r\n\r\n\r\n      const componentsArray = Object.entries(componentTypes)\r\n        .filter(([key]) => components[key])\r\n        .map(([key, label]) => {\r\n          info.text += game.i18n.localize(`${label}Abbr`);\r\n          return game.i18n.localize(label);\r\n        });\r\n\r\n      // Ritual\r\n      if (components.ritual) {\r\n        componentsArray.push(`[${game.i18n.localize(\"DND5E.Ritual\")}]`);\r\n        info.text += ` [${game.i18n.localize(\"DND5E.RitualAbbr\")}]`;\r\n      }\r\n\r\n      info.title = componentsArray.join(\", \");\r\n\r\n      return info;\r\n    }\r\n\r\n    /**\r\n     * Get valid actors\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    #getValidActors() {\r\n      const allowedTypes = [\"character\", \"npc\"];\r\n      return this.actors.every(actor => allowedTypes.includes(actor.type)) ? this.actors : [];\r\n    }\r\n\r\n    /**\r\n     * Get valid tokens\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    #getValidTokens() {\r\n      const allowedTypes = [\"character\", \"npc\"];\r\n      return this.actors.every(actor => allowedTypes.includes(actor.type)) ? this.tokens : [];\r\n    }\r\n\r\n    /**\r\n     * Get quantity\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {string}\r\n     */\r\n    #getQuantityData(item) {\r\n      const quantity = item?.system?.quantity ?? 0;\r\n      return {\r\n        text: (quantity > 1) ? quantity : \"\",\r\n        title: `${game.i18n.localize(\"DND5E.Quantity\")}: ${quantity}`\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Get uses\r\n     * @private\r\n     * @param {object} item\r\n     * @param {string} consumeName\r\n     * @param {integer} consumeAmount\r\n     * @returns {string}\r\n     */\r\n    #getUsesData(item) {\r\n      const uses = item?.system?.uses;\r\n      if (!(uses?.max > 0)) return {};\r\n      const per = uses.recovery[0]?.period === \"charges\" ? \"\" : ` ${game.i18n.localize(\"DND5E.per\")} `;\r\n      const period = CONFIG.DND5E.limitedUsePeriods[uses.recovery[0]?.period]?.label ?? uses.recovery[0]?.period;\r\n      const perPeriod = (period) ? `${per}${period}` : ''\r\n      const remainingUses = uses.max - (uses.spent ?? 0);\r\n      const text = `${remainingUses}/${uses.max}`;\r\n      const title = `${text}${perPeriod}`;\r\n      return { text, title };\r\n    }\r\n\r\n    /**\r\n     * Get consume\r\n     * @private\r\n     * @param {object} item\r\n     * @param {object} actor\r\n     * @returns {string}\r\n     */\r\n    #getConsumeData(item) {\r\n      // Get consume target and type\r\n      const firstActivity = item?.system?.activities?.contents[0];\r\n      const firstTarget = firstActivity?.consumption?.targets?.[0];\r\n      const consumeId = firstTarget?.target;\r\n      const consumeType = firstTarget?.type;\r\n      const consumeAmount = firstTarget?.value;\r\n\r\n      if (!consumeId || !consumeType || consumeId === item.id) return {};\r\n\r\n      // Return resources\r\n      if (consumeType === \"attribute\") {\r\n        const parentId = consumeId.substr(0, consumeId.lastIndexOf(\".\"));\r\n        const target = foundry.utils.getProperty(this.actor.system, parentId);\r\n\r\n        if (target) {\r\n          const text = `${target.value ?? \"0\"}${target.max ? `/${target.max}` : \"\"}`;\r\n          return {\r\n            text,\r\n            title: `${text} ${target.label ?? \"\"}`\r\n          };\r\n        }\r\n      } else {\r\n        const target = this.actor.items?.get(consumeId);\r\n\r\n        // Return charges\r\n        if (target && consumeType === \"charges\") {\r\n          return this.#getUsesData(target);\r\n        }\r\n\r\n        // Return quantity\r\n        if (target?.system?.quantity) {\r\n          const text = `${consumeAmount > 1 ? `${consumeAmount} ${game.i18n.localize(\"DND5E.of\")} ` : \"\"}${target.system.quantity}`;\r\n          return {\r\n            text,\r\n            title: `${text} ${target.name}`\r\n          };\r\n        }\r\n      }\r\n\r\n      return {};\r\n    }\r\n\r\n    /**\r\n     * Discard slow items\r\n     * @private\r\n     * @param {Map} items The items\r\n     * @returns {Map}     The filtered items\r\n     */\r\n    #discardSlowItems(items) {\r\n      // Return all items if slow actions are allowed\r\n      if (Utils.getSetting(\"showSlowActions\")) return items;\r\n\r\n      // Define slow activation types\r\n      const slowActivationTypes = new Set([\"minute\", \"hour\", \"day\"]);\r\n\r\n      // Filter out slow items and return the result\r\n      return new Map([...items.entries()].filter(([_, item]) => {\r\n        const activationType = item.system?.activation?.type;\r\n        return !slowActivationTypes.has(activationType);\r\n      }));\r\n    }\r\n\r\n    /**\r\n     * Get proficiency icon\r\n     * @param {string} level\r\n     * @returns {string}\r\n     */\r\n    #getProficiencyIcon(level) {\r\n      const title = CONFIG.DND5E.proficiencyLevels[level] ?? \"\";\r\n      const icon = PROFICIENCY_LEVEL_ICON[level];\r\n      return (icon) ? `<i class=\"${icon}\" title=\"${title}\"></i>` : \"\";\r\n    }\r\n\r\n    /**\r\n     * Get icon for the activation type\r\n     * @private\r\n     * @param {object} activationType The activation type\r\n     * @returns {string}              The icon\r\n     */\r\n    #getActivationTypeIcon(activationType) {\r\n      const title = CONFIG.DND5E.abilityActivationTypes[activationType] ?? \"\";\r\n      const icon = ACTIVATION_TYPE[activationType]?.icon;\r\n      return (icon) ? `<i class=\"${icon}\" title=\"${title}\"></i>` : \"\";\r\n    }\r\n\r\n    /**\r\n     * Get icon for concentration type\r\n     * @private\r\n     * @param {object} spell\r\n     * @returns {string}\r\n     */\r\n    #getConcentrationIcon(spell) {\r\n      if (spell?.type !== \"spell\" || !this.displaySpellInfo || !spell.system?.properties?.has(\"concentration\")) return null;\r\n      const title = game.i18n.localize(\"DND5E.Scroll.RequiresConcentration\");\r\n      const icon = CONCENTRATION_ICON;\r\n      return `<dnd5e-icon src=\"${icon}\" title=\"${title}\">`;\r\n    }\r\n\r\n    /**\r\n     * Get icon for a prepared spell\r\n     * @private\r\n     * @param {object} spell\r\n     * @returns\r\n     */\r\n    #getPreparedIcon(spell) {\r\n      if (spell?.type !== \"spell\" || !this.showUnpreparedSpells) return null;\r\n      const level = spell.system.level;\r\n      const preparationMode = spell.system.preparation.mode;\r\n      const prepared = spell.system.preparation.prepared;\r\n      const icon = prepared ? PREPARED_ICON : `${PREPARED_ICON} tah-icon-disabled`;\r\n      const title = preparationMode === \"always\" ? game.i18n.localize(\"DND5E.SpellPrepAlways\") : prepared ? game.i18n.localize(\"DND5E.SpellPrepared\") : game.i18n.localize(\"DND5E.SpellUnprepared\");\r\n\r\n      // Return icon if the preparation mode is 'prepared' or 'always' and the spell is not a cantrip\r\n      return ((preparationMode === \"prepared\" || preparationMode === \"always\") && level !== 0) ? `<i class=\"${icon}\" title=\"${title}\"></i>` : null;\r\n    }\r\n\r\n    async #getTooltipData(entity) {\r\n      if (this.tooltipsSetting === \"none\") return \"\";\r\n\r\n      const name = entity?.name ?? \"\";\r\n\r\n      if (this.tooltipsSetting === \"nameOnly\") return name;\r\n\r\n      const unidentified = entity.system?.identified === false;\r\n      const description = (typeof entity?.system?.description === \"string\") ? entity?.system?.description : (unidentified ? entity?.system?.unidentified?.description : entity?.system?.description?.value) ?? \"\";\r\n      let modifiers; let properties; let rarity; let traits;\r\n      if (!unidentified) {\r\n        modifiers = entity?.modifiers ?? null;\r\n        properties = [\r\n          ...entity.system?.chatProperties ?? [],\r\n          ...entity.system?.equippableItemCardProperties ?? [],\r\n          entity.system?.parent?.labels?.activation,\r\n          entity.system?.parent?.labels?.target,\r\n          entity.system?.parent?.labels?.range,\r\n          entity.system?.parent?.labels?.duration\r\n        ].filter(p => p);\r\n        rarity = unidentified ? null : entity?.rarity ?? null;\r\n        traits = (entity?.type === \"weapon\") ? this.#getWeaponProperties(entity?.system?.properties) : null;\r\n      }\r\n      return { name, description, modifiers, properties, rarity, traits };\r\n    }\r\n\r\n    /**\r\n     * Get condition tooltip data\r\n     * @param {*} id     The condition id\r\n     * @param {*} name   The condition name\r\n     * @returns {object} The tooltip data\r\n     */\r\n    async #getConditionTooltipData(id, name) {\r\n      if (this.tooltipsSetting === \"none\") return \"\";\r\n\r\n      const condition = CONFIG.DND5E.conditionTypes[id];\r\n\r\n      if (this.tooltipsSetting === \"nameOnly\" || !condition) return name;\r\n\r\n      const journalEntry = (condition.reference) ? await fromUuid(condition.reference) : null;\r\n      const description = journalEntry?.text?.content ?? \"\";\r\n      const relativeTo = journalEntry;\r\n      return {\r\n        name,\r\n        description,\r\n        relativeTo\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Get tooltip\r\n     * @param {object} tooltipData The tooltip data\r\n     * @returns {string}           The tooltip\r\n     */\r\n    async #getTooltip(tooltipData) {\r\n      if (this.tooltipsSetting === \"none\") return \"\";\r\n      if (typeof tooltipData === \"string\") return tooltipData;\r\n\r\n      const name = game.i18n.localize(tooltipData.name);\r\n\r\n      if (this.tooltipsSetting === \"nameOnly\") return name;\r\n\r\n      const nameHtml = `<h3>${name}</h3>`;\r\n\r\n      const relativeTo = tooltipData.relativeTo ?? this.actor;\r\n\r\n      const description = tooltipData?.descriptionLocalised\r\n                ?? await TextEditor.enrichHTML(game.i18n.localize(tooltipData?.description ?? \"\"), { async: true, relativeTo, secrets: true });\r\n\r\n      const rarityHtml = tooltipData?.rarity\r\n        ? `<span class=\"tah-tag ${tooltipData.rarity}\">${game.i18n.localize(RARITY[tooltipData.rarity])}</span>`\r\n        : \"\";\r\n\r\n      const propertiesHtml = tooltipData?.properties\r\n        ? `<div class=\"tah-properties\">${tooltipData.properties.map(property => `<span class=\"tah-property\">${game.i18n.localize(property)}</span>`).join(\"\")}</div>`\r\n        : \"\";\r\n\r\n      const traitsHtml = tooltipData?.traits\r\n        ? tooltipData.traits.map(trait => `<span class=\"tah-tag\">${game.i18n.localize(trait.label ?? trait)}</span>`).join(\"\")\r\n        : \"\";\r\n\r\n      const traits2Html = tooltipData?.traits2\r\n        ? tooltipData.traits2.map(trait => `<span class=\"tah-tag tah-tag-secondary\">${game.i18n.localize(trait.label ?? trait)}</span>`).join(\"\")\r\n        : \"\";\r\n\r\n      const traitsAltHtml = tooltipData?.traitsAlt\r\n        ? tooltipData.traitsAlt.map(trait => `<span class=\"tah-tag tah-tag-alt\">${game.i18n.localize(trait.label)}</span>`).join(\"\")\r\n        : \"\";\r\n\r\n      const modifiersHtml = tooltipData?.modifiers\r\n        ? `<div class=\"tah-tags\">${tooltipData.modifiers.filter(modifier => modifier.enabled).map(modifier => {\r\n          const label = game.i18n.localize(modifier.label);\r\n          const sign = modifier.modifier >= 0 ? \"+\" : \"\";\r\n          const mod = `${sign}${modifier.modifier ?? \"\"}`;\r\n          return `<span class=\"tah-tag tah-tag-transparent\">${label} ${mod}</span>`;\r\n        }).join(\"\")}</div>`\r\n        : \"\";\r\n\r\n      const tagsJoined = [rarityHtml, traitsHtml, traits2Html, traitsAltHtml].join(\"\");\r\n\r\n      const tagsHtml = (tagsJoined) ? `<div class=\"tah-tags\">${tagsJoined}</div>` : \"\";\r\n\r\n      const headerTags = (tagsHtml || modifiersHtml) ? `<div class=\"tah-tags-wrapper\">${tagsHtml}${modifiersHtml}</div>` : \"\";\r\n\r\n      if (!description && !tagsHtml && !modifiersHtml) return name;\r\n\r\n      return `<div>${nameHtml}${headerTags}${description}${propertiesHtml}</div>`;\r\n    }\r\n\r\n    #getWeaponProperties(weaponProperties) {\r\n      if (!weaponProperties) return null;\r\n      return Object.entries(weaponProperties)\r\n        .filter(([id, selected]) => selected && CONFIG.DND5E.validProperties.weapon.has(id))\r\n        .map(([id, _]) => game.i18n.localize(CONFIG.DND5E.itemProperties[id]));\r\n    }\r\n  };\r\n});\r\n","export let MagicItemActionHandlerExtender = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  MagicItemActionHandlerExtender = class MagicItemActionHandlerExtender extends coreModule.api.ActionHandlerExtender {\r\n    constructor(actionHandler) {\r\n      super();\r\n      this.actionHandler = actionHandler;\r\n      this.actor = null;\r\n    }\r\n\r\n    /**\r\n     * Extend the action list\r\n     */\r\n    async extendActionHandler() {\r\n      this.actor = this.actionHandler.actor;\r\n      if (!this.actor) return;\r\n\r\n      const actor = await MagicItems.actor(this.actor.id);\r\n\r\n      if (!actor) return;\r\n\r\n      const magicItems = actor.items ?? [];\r\n\r\n      if (magicItems.length === 0) return;\r\n\r\n      const parentGroupId = \"magic-items\";\r\n      const parentGroupType = \"system\";\r\n      const parentGroupData = {\r\n        id: parentGroupId,\r\n        type: parentGroupType\r\n      };\r\n\r\n      magicItems.forEach(magicItem => {\r\n        if (magicItem.attuned && !this._isItemAttuned(magicItem)) return;\r\n        if (magicItem.equipped && !this._isItemEquipped(magicItem)) return;\r\n\r\n        const groupId = `magic-items_${magicItem.id}`;\r\n        const groupName = magicItem.name;\r\n        const groupType = \"system-derived\";\r\n        const groupInfo1 = `${magicItem.uses}/${magicItem.charges}`;\r\n        const groupData = {\r\n          id: groupId,\r\n          name: groupName,\r\n          type: groupType,\r\n          info1: groupInfo1\r\n        };\r\n\r\n        // Add group to HUD\r\n        this.actionHandler.addGroup(groupData, parentGroupData);\r\n\r\n        const actions = magicItem.ownedEntries.map(entry => {\r\n          const effect = entry.item;\r\n          const id = effect.id;\r\n          const name = effect.name;\r\n          const encodedValue = [\r\n            \"magicItem\",\r\n            `${magicItem.id}>${id}`\r\n          ].join(\"|\");\r\n          const img = coreModule.api.Utils.getImage(effect);\r\n          const info1 = effect.consumption;\r\n          const info2 = (effect.baseLevel) ? `${coreModule.api.Utils.i18n(\"DND5E.AbbreviationLevel\")} ${effect.baseLevel}` : \"\";\r\n          return {\r\n            id,\r\n            name,\r\n            encodedValue,\r\n            img,\r\n            info1,\r\n            info2,\r\n            selected: true\r\n          };\r\n        });\r\n\r\n        // Add actions to action list\r\n        this.actionHandler.addActions(actions, groupData);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Whether the magic item is equipped or not\r\n     * @param {object} magicItem The item\r\n     * @returns {boolean}\r\n     */\r\n    _isItemEquipped(magicItem) {\r\n      return magicItem.item.system.equipped;\r\n    }\r\n\r\n    /**\r\n     * Whether the magic items is attuned or not\r\n     * @param {object} magicItem The item\r\n     * @returns {boolean}\r\n     */\r\n    _isItemAttuned(magicItem) {\r\n      const attunement = magicItem.item.system.attunment;\r\n      const attunementRequired = CONFIG.DND5E.attunementTypes?.REQUIRED ?? 1;\r\n\r\n      if (attunement === attunementRequired) return false;\r\n\r\n      return true;\r\n    }\r\n  };\r\n});\r\n","import { CUSTOM_DND5E } from \"./constants.js\";\r\n\r\nexport let RollHandler = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  RollHandler = class RollHandler extends coreModule.api.RollHandler {\r\n    /**\r\n     * Handle action click\r\n     * @override\r\n     * @param {object} event\r\n     * @param {string} encodedValue\r\n     */\r\n    async handleActionClick(event, encodedValue) {\r\n      const [actionType, actionId] = encodedValue.split(\"|\");\r\n\r\n      if (!this.actor) {\r\n        for (const token of coreModule.api.Utils.getControlledTokens()) {\r\n          const actor = token.actor;\r\n          await this.handleAction(event, actionType, actor, token, actionId);\r\n        }\r\n      } else {\r\n        await this.handleAction(event, actionType, this.actor, this.token, actionId);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Handle action\r\n     * @private\r\n     * @param {object} event\r\n     * @param {string} actionType\r\n     * @param {object} actor\r\n     * @param {object} token\r\n     * @param {string} actionId\r\n     */\r\n    async handleAction(event, actionType, actor, token, actionId) {\r\n      switch (actionType) {\r\n        case \"ability\":\r\n          this.rollAbility(event, actor, actionId); break;\r\n        case \"check\":\r\n          this.rollAbilityTest(event, actor, actionId); break;\r\n        case \"save\":\r\n          this.rollAbilitySave(event, actor, actionId); break;\r\n        case \"condition\":\r\n          if (!token) return;\r\n          await this.toggleCondition(event, actor, token, actionId); break;\r\n        case \"counter\":\r\n          await this.modifyCounter(event, actor, actionId); break;\r\n        case \"effect\":\r\n          await this.toggleEffect(event, actor, actionId); break;\r\n        case \"exhaustion\":\r\n          await this.modifyExhaustion(event, actor); break;\r\n        case \"feature\":\r\n        case \"item\":\r\n        case \"spell\":\r\n        case \"weapon\":\r\n          if (this.isRenderItem()) this.renderItem(actor, actionId);\r\n          else this.useItem(event, actor, actionId);\r\n          break;\r\n        case \"magicItem\":\r\n          await this.rollMagicItem(actor, actionId); break;\r\n        case \"skill\":\r\n          this.rollSkill(event, actor, actionId); break;\r\n        case \"utility\":\r\n          await this.performUtilityAction(event, actor, token, actionId); break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Modify Counter\r\n     * @private\r\n     * @param {object} event The event\r\n     * @param {object} actor The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async modifyCounter(event, actor, actionId) {\r\n      switch (actionId) {\r\n        case \"death-saves\":\r\n          this.rollDeathSave(event, actor); break;\r\n        case \"exhaustion\":\r\n          await this.modifyExhaustion(event, actor); break;\r\n        case \"inspiration\":\r\n          await this.modifyInspiration(actor); break;\r\n        default:\r\n          await this.modifyCustomCounter(event, actor, actionId); break;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Modify Exhaustion\r\n     * @private\r\n     * @param {object} event The event\r\n     * @param {object} actor The actor\r\n     */\r\n    async modifyExhaustion(event, actor) {\r\n      const isRightClick = this.isRightClick(event);\r\n      const currentExhaustion = actor.system.attributes.exhaustion;\r\n      const newExhaustion = currentExhaustion + (isRightClick ? -1 : 1);\r\n      if (newExhaustion >= 0 && newExhaustion !== currentExhaustion) {\r\n        actor.update({ \"system.attributes.exhaustion\": newExhaustion });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Modify Inspiration\r\n     * @private\r\n     * @param {object} actor The actor\r\n     */\r\n    async modifyInspiration(actor) {\r\n      const update = !actor.system.attributes.inspiration;\r\n      actor.update({ \"system.attributes.inspiration\": update });\r\n    }\r\n\r\n    /**\r\n     * Modify Custom Counter\r\n     * @private\r\n     * @param {object} event The event\r\n     * @param {object} actor The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async modifyCustomCounter(event, actor, actionId) {\r\n      const [id, type] = decodeURIComponent(actionId).split(\">\");\r\n      const isRightClick = this.isRightClick(event);\r\n      const isCtrl = this.isCtrl(event);\r\n\r\n      let value = actor.getFlag(CUSTOM_DND5E.ID, id) || {};\r\n\r\n      const setFlag = async (key, currentValue, newValue) => {\r\n        if (newValue !== currentValue) {\r\n          await actor.setFlag(CUSTOM_DND5E.ID, key, newValue);\r\n        }\r\n      };\r\n\r\n      const adjustValue = (key, currentValue = 0, increment = 1) => {\r\n        const newValue = isRightClick ? Math.max(0, currentValue - increment) : currentValue + increment;\r\n        setFlag(key, currentValue, newValue);\r\n      };\r\n\r\n      switch (type) {\r\n        case \"checkbox\":\r\n          await setFlag(id, !value);\r\n          break;\r\n\r\n        case \"fraction\":\r\n          if (isRightClick || (value.max && value.value < value.max) || !value.max) {\r\n            adjustValue(`${id}.value`, value.value);\r\n          }\r\n          break;\r\n\r\n        case \"number\":\r\n          adjustValue(id, value);\r\n          break;\r\n\r\n        case \"successFailure\":\r\n          value.success = value?.success ?? 0;\r\n          value.failure = value?.failure ?? 0;\r\n          if (isCtrl) {\r\n            adjustValue(`${id}.failure`, value.failure);\r\n          } else {\r\n            adjustValue(`${id}.success`, value.success);\r\n          }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Roll Ability\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollAbility(event, actor, actionId) {\r\n      if (!actor.system?.abilities) return;\r\n      actor.rollAbility(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Roll Ability Save\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollAbilitySave(event, actor, actionId) {\r\n      if (!actor.system?.abilities) return;\r\n      actor.rollAbilitySave(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Roll Ability Test\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollAbilityTest(event, actor, actionId) {\r\n      if (!actor.system?.abilities) return;\r\n      actor.rollAbilityTest(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Roll Death Save\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     */\r\n    rollDeathSave(event, actor) {\r\n      actor.rollDeathSave({ event });\r\n    }\r\n\r\n    /**\r\n     * Roll Magic Item\r\n     * @private\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async rollMagicItem(actor, actionId) {\r\n      const [itemId, magicEffectId] = actionId.split(\">\");\r\n\r\n      const magicItemActor = await MagicItems.actor(actor.id);\r\n      if (!magicItemActor) return;\r\n\r\n      // Magicitems module 3.0.0 does not support Item5e#use\r\n      magicItemActor.roll(itemId, magicEffectId);\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Roll Skill\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollSkill(event, actor, actionId) {\r\n      if (!actor.system?.skills) return;\r\n      actor.rollSkill(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Use Item\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    useItem(event, actor, actionId) {\r\n      const item = coreModule.api.Utils.getItem(actor, actionId);\r\n\r\n      if (this.#needsRecharge(item)) {\r\n        item.rollRecharge();\r\n      } else {\r\n        item.use({ event, legacy: false });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Needs Recharge\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {boolean}\r\n     */\r\n    #needsRecharge(item) {\r\n      return (item?.system?.uses?.period === \"recharge\" && !(item?.system?.uses?.value > 0));\r\n    }\r\n\r\n    /**\r\n     * Perform utility action\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {object} token    The token\r\n     * @param {string} actionId The action id\r\n     */\r\n    async performUtilityAction(event, actor, token, actionId) {\r\n      switch (actionId) {\r\n        case \"deathSave\":\r\n          this.rollDeathSave(event, actor); break;\r\n        case \"endTurn\":\r\n          if (!token || game.combat?.current?.tokenId !== token.id) break;\r\n          await game.combat?.nextTurn(); break;\r\n        case \"initiative\":\r\n          await this.rollInitiative(actor); break;\r\n        case \"inspiration\":\r\n          await this.modifyInspiration(actor); break;\r\n        case \"longRest\":\r\n          actor.longRest(); break;\r\n        case \"shortRest\":\r\n          actor.shortRest(); break;\r\n      }\r\n\r\n      // Update HUD\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Roll Initiative\r\n     * @param {object} actor The actor\r\n     * @private\r\n     */\r\n    async rollInitiative(actor) {\r\n      if (!actor) return;\r\n      await actor.rollInitiative({ createCombatants: true });\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Toggle Condition\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {object} token    The token\r\n     * @param {string} actionId The action id\r\n     */\r\n    async toggleCondition(event, actor, token, actionId) {\r\n      if (!token) return;\r\n\r\n      const isRightClick = this.isRightClick(event);\r\n      const statusEffect = CONFIG.statusEffects.find(statusEffect => statusEffect.id === actionId);\r\n      const isConvenient = statusEffect?.flags?.[\"dfreds-convenient-effects\"]?.isConvenient\r\n        ?? actionId.startsWith(\"Convenient Effect\");\r\n\r\n      if (game.dfreds && isConvenient) {\r\n        const effectName = statusEffect.name ?? statusEffect.label;\r\n        await game.dfreds.effectInterface.toggleEffect(effectName, { overlay: !!isRightClick });\r\n      } else {\r\n        const condition = this.#findCondition(actionId);\r\n        if (!condition) return;\r\n\r\n        const effect = this.#findEffect(actor, actionId);\r\n        if (effect?.disabled) { await effect.delete(); }\r\n\r\n        await actor.toggleStatusEffect(condition.id, { overlay: !!isRightClick });\r\n      }\r\n\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Find condition\r\n     * @private\r\n     * @param {string} actionId The action id\r\n     * @returns {object}        The condition\r\n     */\r\n    #findCondition(actionId) {\r\n      return CONFIG.statusEffects.find(effect => effect.id === actionId);\r\n    }\r\n\r\n    /**\r\n     * Find effect\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     * @returns {object}        The effect\r\n     */\r\n    #findEffect(actor, actionId) {\r\n      return actor.effects.find(effect => effect.statuses.every(status => status === actionId));\r\n    }\r\n\r\n    /**\r\n     * Toggle Effect\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async toggleEffect(event, actor, actionId) {\r\n      const effects = actor.effects.entries ? actor.effects.entries : actor.effects;\r\n      const actorEffect = effects.find(effect => effect.id === actionId);\r\n\r\n      const effect = actorEffect ?? actor.allApplicableEffects().find(effect => effect.id === actionId);\r\n      if (!effect) return;\r\n\r\n      const isRightClick = this.isRightClick(event);\r\n\r\n      if (isRightClick && actorEffect) {\r\n        await effect.delete();\r\n      } else {\r\n        await effect.update({ disabled: !effect.disabled });\r\n      }\r\n\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Handle action hover\r\n     * @override\r\n     * @param {object} event\r\n     * @param {string} encodedValue\r\n     */\r\n    async handleActionHover(event, encodedValue) {\r\n      const types = [\"feature\", \"item\", \"spell\", \"weapon\", \"magicItem\"];\r\n      const [actionType, actionId] = encodedValue.split(\"|\");\r\n\r\n      if (!types.includes(actionType)) return;\r\n\r\n      const item = coreModule.api.Utils.getItem(this.actor, actionId);\r\n\r\n      switch (event.type) {\r\n        case \"mouseenter\":\r\n        case \"mouseover\":\r\n          Hooks.call(\"tokenActionHudSystemActionHoverOn\", event, item);\r\n          break;\r\n        case \"mouseleave\":\r\n        case \"mouseout\":\r\n          Hooks.call(\"tokenActionHudSystemActionHoverOff\", event, item);\r\n          break;\r\n      }\r\n    }\r\n  };\r\n});\r\n","import { MODULE } from \"./constants.js\";\r\n\r\n/**\r\n *\r\n * @param updateFunc\r\n */\r\nexport function register(updateFunc) {\r\n  game.settings.register(MODULE.ID, \"abbreviateSkills\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.abbreviateSkills.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.abbreviateSkills.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showSlowActions\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showSlowActions.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showSlowActions.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"displaySpellInfo\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.displaySpellInfo.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.displaySpellInfo.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnchargedItems\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnchargedItems.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnchargedItems.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnequippedItems\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItems.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItems.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnequippedItemsNpcs\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItemsNpcs.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItemsNpcs.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnpreparedSpells\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnpreparedSpells.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnpreparedSpells.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showItemsWithoutActivationCosts\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showItemsWithoutActivationCosts.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showItemsWithoutActivationCosts.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n}\r\n","// System Module Imports\r\nimport { ActionHandler } from \"./action-handler.js\";\r\nimport { MagicItemActionHandlerExtender } from \"./magic-items-extender.js\";\r\nimport { RollHandler as Core } from \"./roll-handler.js\";\r\nimport { DEFAULTS } from \"./defaults.js\";\r\nimport * as systemSettings from \"./settings.js\";\r\n\r\nexport let SystemManager = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  SystemManager = class SystemManager extends coreModule.api.SystemManager {\r\n    /** @override */\r\n    getActionHandler() {\r\n      const actionHandler = new ActionHandler();\r\n      if (coreModule.api.Utils.isModuleActive(\"magic-items-2\")\r\n        || coreModule.api.Utils.isModuleActive(\"magicitems\")) {\r\n        actionHandler.addActionHandlerExtender(new MagicItemActionHandlerExtender(actionHandler));\r\n      }\r\n      return actionHandler;\r\n    }\r\n\r\n    /** @override */\r\n    getAvailableRollHandlers() {\r\n      let coreTitle = \"Core D&D5e\";\r\n\r\n      if (coreModule.api.Utils.isModuleActive(\"midi-qol\")) {\r\n        coreTitle += ` [supports ${coreModule.api.Utils.getModuleTitle(\"midi-qol\")}]`;\r\n      }\r\n\r\n      const choices = { core: coreTitle };\r\n      return choices;\r\n    }\r\n\r\n    /** @override */\r\n    getRollHandler(rollHandlerId) {\r\n      let rollHandler;\r\n      switch (rollHandlerId) {\r\n        case \"core\":\r\n        default:\r\n          rollHandler = new Core();\r\n          break;\r\n      }\r\n\r\n      return rollHandler;\r\n    }\r\n\r\n    /** @override */\r\n    registerSettings(onChangeFunction) {\r\n      systemSettings.register(onChangeFunction);\r\n    }\r\n\r\n    /** @override */\r\n    async registerDefaults() {\r\n      const defaults = DEFAULTS;\r\n      // If the 'Magic Items' module is active, then add a group for it\r\n      if (game.modules.get(\"magicitems\")?.active || game.modules.get(\"magic-items-2\")?.active) {\r\n        const name = coreModule.api.Utils.i18n(\"tokenActionHud.dnd5e.magicItems\");\r\n        defaults.groups.push(\r\n          {\r\n            id: \"magic-items\",\r\n            name,\r\n            listName: `Group: ${name}`,\r\n            type: \"system\"\r\n          }\r\n        );\r\n        defaults.groups.sort((a, b) => a.id.localeCompare(b.id));\r\n      }\r\n      return defaults;\r\n    }\r\n  };\r\n});\r\n","import { SystemManager } from \"./system-manager.js\";\r\nimport { MODULE, REQUIRED_CORE_MODULE_VERSION } from \"./constants.js\";\r\n\r\nHooks.on(\"tokenActionHudCoreApiReady\", async () => {\r\n  const module = game.modules.get(MODULE.ID);\r\n  module.api = {\r\n    requiredCoreModuleVersion: REQUIRED_CORE_MODULE_VERSION,\r\n    SystemManager\r\n  };\r\n  Hooks.call(\"tokenActionHudSystemReady\", module);\r\n});\r\n"],"names":["MODULE","ID","CORE_MODULE","REQUIRED_CORE_MODULE_VERSION","ACTION_TYPE","ability","check","condition","counter","effect","exhaustion","feature","item","save","skill","spell","utility","ACTIVATION_TYPE","action","group","bonus","icon","crew","day","hour","lair","minute","legendary","reaction","reactiondamage","reactionmanual","special","other","CONCENTRATION_ICON","CUSTOM_DND5E","COUNTERS","character","npc","FEATURE_GROUP_IDS","GROUP","_1stLevelSpells","id","name","spellMode","type","_2ndLevelSpells","_3rdLevelSpells","_4thLevelSpells","_5thLevelSpells","_6thLevelSpells","_7thLevelSpells","_8thLevelSpells","_9thLevelSpells","abilities","actions","activeFeatures","artificerInfusions","atWillSpells","backgroundFeatures","bonusActions","cantrips","channelDivinity","checks","classFeatures","combat","conditions","consumables","containers","counters","crewActions","defensiveTactics","eldritchInvocations","elementalDisciplines","equipment","equipped","feats","fightingStyles","huntersPrey","innateSpells","kiAbilities","lairActions","legendaryActions","loot","maneuvers","metamagicOptions","monsterFeatures","multiattacks","otherActions","pactBoons","pactSpells","passiveEffects","passiveFeatures","psionicPowers","raceFeatures","reactions","rests","runes","saves","skills","superiorHuntersDefense","temporaryEffects","token","tools","unequipped","weapons","PREPARED_ICON","PROFICIENCY_LEVEL_ICON","RARITY","common","uncommon","rare","veryRare","artifact","RITUAL_ICON","SPELL_GROUP_IDS","DEFAULTS","Hooks","once","async","groups","Object","values","forEach","coreModule","api","Utils","i18n","listName","groupsArray","layout","nestId","static","key","defaultValue","value","game","settings","get","Logger","debug","set","ActionHandler","featureActions","inventoryActions","spellActions","groupIds","this","actors","actor","getValidActors","tokens","getValidTokens","items","sortItemsByName","discardSlowItems","abbreviateSkills","getSetting","displaySpellInfo","showItemsWithoutActivationCosts","showUnchargedItems","showUnequippedItems","showUnpreparedSpells","activationgroupIds","inventorygroupIds","buildCharacterActions","buildVehicleActions","buildMultipleTokenActions","Promise","all","buildConditions","buildEffects","buildFeatures","buildInventory","buildSpells","buildAbilities","buildCombat","buildCounters","buildExhaustion","buildRests","buildSkills","buildUtility","actionType","groupId","system","CONFIG","DND5E","length","entries","filter","map","abilityId","label","mod","capitalize","encodedValue","join","delimiter","icon1","getProficiencyIcon","proficient","info1","text","getModifier","info2","getListName","addActions","data","groupData","actionData","activationItems","Map","activationType","activities","contents","activation","has","groupDataClone","includes","defaultSelected","parentgroupData","addGroup","addGroupInfo","buildActions","combatType","initiative","current","tokenId","endTurn","tokenIds","getControlledTokens","combatants","combatant","getInfo1","class","localize","cssClass","every","statusEffects","hasCondition","effects","some","statuses","status","disabled","img","getImage","tooltip","getTooltip","getConditionTooltipData","isModuleActive","keys","_","visible","active","attributes","death","success","failure","getFlag","max","encodeURIComponent","allApplicableEffects","size","conditionIds","Set","conditionTypes","dnd5e","utils","staticID","effectId","isSuppressed","parent","identified","user","isGM","isTemporary","featuresMap","featureType","background","monster","race","classFeatureType","artificerInfusion","defensiveTactic","eldritchInvocation","elementalDiscipline","fightingStyle","ki","maneuver","metamagic","multiattack","pact","psionicPower","rune","subType","subtype","buildActivations","inventoryMap","quantity","isActiveItem","isUsableItem","isEquippedItem","shortRest","longRest","total","error","spells","spellsMap","isUsableSpell","preparation","mode","level","systemSpells","reverse","spellSlotsMap","spellSlotAvailable","pactSlotAvailable","pactSlot","hasValue","hasMax","hasLevel","slotAvailable","startsWith","slotsAvailable","f","spellSlotModes","levelInfo","slots","info","utilityTypes","deathSave","inspiration","hp","utilityType","options","getAction","entity","_id","hasOwn","getItemInfo","getTooltipData","getActivationTypeIcon","icon2","getPreparedIcon","icon3","getConcentrationIcon","info3","activationTypes","activityActivationTypes","uses","preparationModes","spellPreparationModes","preparationMode","prepared","actionName","getSpellInfo","getQuantityData","getUsesData","getConsumeData","components","properties","title","componentsArray","vocal","somatic","material","ritual","push","allowedTypes","per","recovery","period","limitedUsePeriods","perPeriod","spent","firstActivity","firstTarget","consumption","targets","consumeId","target","consumeType","consumeAmount","parentId","substr","lastIndexOf","foundry","getProperty","slowActivationTypes","proficiencyLevels","abilityActivationTypes","tooltipsSetting","unidentified","description","modifiers","rarity","traits","chatProperties","equippableItemCardProperties","labels","range","duration","p","getWeaponProperties","journalEntry","fromUuid","reference","content","relativeTo","tooltipData","nameHtml","descriptionLocalised","TextEditor","enrichHTML","secrets","rarityHtml","propertiesHtml","property","traitsHtml","trait","traits2Html","traits2","traitsAltHtml","traitsAlt","modifiersHtml","modifier","enabled","tagsJoined","tagsHtml","weaponProperties","selected","validProperties","weapon","itemProperties","MagicItemActionHandlerExtender","ActionHandlerExtender","constructor","actionHandler","super","MagicItems","magicItems","parentGroupData","magicItem","attuned","_isItemAttuned","_isItemEquipped","charges","ownedEntries","entry","baseLevel","attunment","attunementTypes","REQUIRED","RollHandler","register","updateFunc","hint","scope","config","Boolean","default","onChange","event","actionId","split","handleAction","rollAbility","rollAbilityTest","rollAbilitySave","toggleCondition","modifyCounter","toggleEffect","modifyExhaustion","isRenderItem","renderItem","useItem","rollMagicItem","rollSkill","performUtilityAction","rollDeathSave","modifyInspiration","modifyCustomCounter","isRightClick","currentExhaustion","newExhaustion","update","decodeURIComponent","isCtrl","setFlag","currentValue","newValue","adjustValue","increment","Math","itemId","magicEffectId","magicItemActor","roll","callAll","getItem","needsRecharge","rollRecharge","use","legacy","nextTurn","rollInitiative","createCombatants","statusEffect","find","isConvenient","flags","dfreds","effectName","effectInterface","overlay","findCondition","findEffect","delete","toggleStatusEffect","actorEffect","call","SystemManager","getActionHandler","addActionHandlerExtender","getAvailableRollHandlers","coreTitle","getModuleTitle","core","getRollHandler","rollHandlerId","rollHandler","Core","registerSettings","onChangeFunction","systemSettings.register","defaults","modules","sort","a","b","localeCompare","on","module","requiredCoreModuleVersion"],"mappings":"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"}