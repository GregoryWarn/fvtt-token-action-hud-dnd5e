{"version":3,"file":"token-action-hud-dnd5e.min.js","sources":["constants.js","defaults.js","utils.js","action-handler.js","magic-items-extender.js","roll-handler.js","settings.js","system-manager.js","init.js"],"sourcesContent":["/**\r\n * Module-based constants\r\n */\r\nexport const MODULE = {\r\n  ID: \"token-action-hud-dnd5e\"\r\n};\r\n\r\n/**\r\n * Core module\r\n */\r\nexport const CORE_MODULE = {\r\n  ID: \"token-action-hud-core\"\r\n};\r\n\r\n/**\r\n * Core module version required by the system module\r\n */\r\nexport const REQUIRED_CORE_MODULE_VERSION = \"1.5\";\r\n\r\n/**\r\n * Action type\r\n */\r\nexport const ACTION_TYPE = {\r\n  ability: \"DND5E.Ability\",\r\n  check: \"tokenActionHud.dnd5e.check\",\r\n  condition: \"tokenActionHud.dnd5e.condition\",\r\n  counter: \"tokenActionHud.dnd5e.counter\",\r\n  effect: \"DND5E.Effect\",\r\n  exhaustion: \"DND5E.Exhaustion\",\r\n  feature: \"TYPES.Item.feat\",\r\n  item: \"tokenActionHud.dnd5e.item\",\r\n  save: \"DND5E.SAVE.Title.one\",\r\n  skill: \"tokenActionHud.dnd5e.skill\",\r\n  spell: \"TYPES.Item.spell\",\r\n  utility: \"DND5E.ActionUtil\"\r\n};\r\n\r\n/**\r\n * Activation types\r\n */\r\nexport const ACTIVATION_TYPE = {\r\n  action: { group: \"actions\" },\r\n  bonus: { group: \"bonus-actions\", icon: \"fas fa-plus\" },\r\n  crew: { group: \"crew-actions\", icon: \"fas fa-users\" },\r\n  day: { icon: \"fas fa-hourglass-end\" },\r\n  hour: { icon: \"fas fa-hourglass-half\" },\r\n  lair: { group: \"lair-actions\", icon: \"fas fa-home\" },\r\n  minute: { icon: \"fas fa-hourglass-start\" },\r\n  legendary: { group: \"legendary-actions\", icon: \"fas fas fa-dragon\" },\r\n  reaction: { group: \"reactions\", icon: \"fas fa-bolt\" },\r\n  reactiondamage: { group: \"reactions\", icon: \"fas fa-bolt\" },\r\n  reactionmanual: { group: \"reactions\", icon: \"fas fa-bolt\" },\r\n  special: { group: \"special-actions\", icon: \"fas fa-star\" },\r\n  other: { group: \"other-actions\" }\r\n};\r\n\r\n/**\r\n * Concentration icon\r\n */\r\nexport const CONCENTRATION_ICON = \"systems/dnd5e/icons/svg/statuses/concentrating.svg\";\r\n\r\nexport const CUSTOM_DND5E = {\r\n  ID: \"custom-dnd5e\",\r\n  COUNTERS: {\r\n    character: \"character-counters\",\r\n    group: \"group-counters\",\r\n    npc: \"npc-counters\"\r\n  }\r\n};\r\n\r\n/**\r\n * Feature Group IDs\r\n */\r\nexport const FEATURE_GROUP_IDS = [\r\n  \"activeFeatures\",\r\n  \"passiveFeatures\",\r\n  \"backgroundFeatures\",\r\n  \"classFeatures\",\r\n  \"feats\",\r\n  \"monsterFeatures\",\r\n  \"raceFeatures\",\r\n  \"artificerInfusions\",\r\n  \"channelDivinity\",\r\n  \"defensiveTactics\",\r\n  \"eldritchInvocations\",\r\n  \"elementalDisciplines\",\r\n  \"fightingStyles\",\r\n  \"huntersPrey\",\r\n  \"kiAbilities\",\r\n  \"maneuvers\",\r\n  \"metamagicOptions\",\r\n  \"multiattacks\",\r\n  \"pactBoons\",\r\n  \"psionicPowers\",\r\n  \"runes\",\r\n  \"superiorHuntersDefense\"\r\n];\r\n\r\n/**\r\n * Groups\r\n */\r\nexport const GROUP = {\r\n  _1stLevelSpells: { id: \"1st-level-spells\", name: \"tokenActionHud.dnd5e.1stLevelSpells\", spellMode: 1, type: \"system\" },\r\n  _2ndLevelSpells: { id: \"2nd-level-spells\", name: \"tokenActionHud.dnd5e.2ndLevelSpells\", spellMode: 2, type: \"system\" },\r\n  _3rdLevelSpells: { id: \"3rd-level-spells\", name: \"tokenActionHud.dnd5e.3rdLevelSpells\", spellMode: 3, type: \"system\" },\r\n  _4thLevelSpells: { id: \"4th-level-spells\", name: \"tokenActionHud.dnd5e.4thLevelSpells\", spellMode: 4, type: \"system\" },\r\n  _5thLevelSpells: { id: \"5th-level-spells\", name: \"tokenActionHud.dnd5e.5thLevelSpells\", spellMode: 5, type: \"system\" },\r\n  _6thLevelSpells: { id: \"6th-level-spells\", name: \"tokenActionHud.dnd5e.6thLevelSpells\", spellMode: 6, type: \"system\" },\r\n  _7thLevelSpells: { id: \"7th-level-spells\", name: \"tokenActionHud.dnd5e.7thLevelSpells\", spellMode: 7, type: \"system\" },\r\n  _8thLevelSpells: { id: \"8th-level-spells\", name: \"tokenActionHud.dnd5e.8thLevelSpells\", spellMode: 8, type: \"system\" },\r\n  _9thLevelSpells: { id: \"9th-level-spells\", name: \"tokenActionHud.dnd5e.9thLevelSpells\", spellMode: 9, type: \"system\" },\r\n  abilities: { id: \"abilities\", name: \"tokenActionHud.dnd5e.abilities\", type: \"system\" },\r\n  actions: { id: \"actions\", name: \"DND5E.ActionPl\", type: \"system\" },\r\n  activeFeatures: { id: \"active-features\", name: \"tokenActionHud.dnd5e.activeFeatures\", type: \"system\" },\r\n  artificerInfusions: { id: \"artificer-infusions\", name: \"tokenActionHud.dnd5e.artificerInfusions\", type: \"system\" },\r\n  atWillSpells: { id: \"at-will-spells\", name: \"tokenActionHud.dnd5e.atWillSpells\", spellMode: \"atwill\", type: \"system\" },\r\n  backgroundFeatures: { id: \"background-features\", name: \"tokenActionHud.dnd5e.backgroundFeatures\", type: \"system\" },\r\n  bonusActions: { id: \"bonus-actions\", name: \"tokenActionHud.dnd5e.bonusActions\", type: \"system\" },\r\n  cantrips: { id: \"cantrips\", name: \"tokenActionHud.dnd5e.cantrips\", spellMode: 0, type: \"system\" },\r\n  channelDivinity: { id: \"channel-divinity\", name: \"tokenActionHud.dnd5e.channelDivinity\", type: \"system\" },\r\n  checks: { id: \"checks\", name: \"tokenActionHud.dnd5e.checks\", type: \"system\" },\r\n  classFeatures: { id: \"class-features\", name: \"tokenActionHud.dnd5e.classFeatures\", type: \"system\" },\r\n  combat: { id: \"combat\", name: \"tokenActionHud.combat\", type: \"system\" },\r\n  conditions: { id: \"conditions\", name: \"tokenActionHud.dnd5e.conditions\", type: \"system\" },\r\n  consumables: { id: \"consumables\", name: \"TYPES.Item.consumablePl\", type: \"system\" },\r\n  containers: { id: \"containers\", name: \"TYPES.Item.containerPl\", type: \"system\" },\r\n  counters: { id: \"counters\", name: \"tokenActionHud.dnd5e.counters\", type: \"system\" },\r\n  crewActions: { id: \"crew-actions\", name: \"tokenActionHud.dnd5e.crewActions\", type: \"system\" },\r\n  defensiveTactics: { id: \"defensive-tactics\", name: \"tokenActionHud.dnd5e.defensiveTactics\", type: \"system\" },\r\n  eldritchInvocations: { id: \"eldritch-invocations\", name: \"tokenActionHud.dnd5e.eldritchInvocations\", type: \"system\" },\r\n  elementalDisciplines: { id: \"elemental-disciplines\", name: \"tokenActionHud.dnd5e.elementalDisciplines\", type: \"system\" },\r\n  equipment: { id: \"equipment\", name: \"TYPES.Item.equipmentPl\", type: \"system\" },\r\n  equipped: { id: \"equipped\", name: \"DND5E.Equipped\", type: \"system\" },\r\n  exhaustion: { id: \"exhaustion\", name: \"DND5E.Exhaustion\", type: \"system\" },\r\n  feats: { id: \"feats\", name: \"tokenActionHud.dnd5e.feats\", type: \"system\" },\r\n  fightingStyles: { id: \"fighting-styles\", name: \"tokenActionHud.dnd5e.fightingStyles\", type: \"system\" },\r\n  huntersPrey: { id: \"hunters-prey\", name: \"tokenActionHud.dnd5e.huntersPrey\", type: \"system\" },\r\n  innateSpells: { id: \"innate-spells\", name: \"tokenActionHud.dnd5e.innateSpells\", spellMode: \"innate\", type: \"system\" },\r\n  kiAbilities: { id: \"ki-abilities\", name: \"tokenActionHud.dnd5e.kiAbilities\", type: \"system\" },\r\n  lairActions: { id: \"lair-actions\", name: \"tokenActionHud.dnd5e.lairActions\", type: \"system\" },\r\n  legendaryActions: { id: \"legendary-actions\", name: \"tokenActionHud.dnd5e.legendaryActions\", type: \"system\" },\r\n  loot: { id: \"loot\", name: \"TYPES.Item.lootPl\", type: \"system\" },\r\n  maneuvers: { id: \"maneuvers\", name: \"tokenActionHud.dnd5e.maneuvers\", type: \"system\" },\r\n  metamagicOptions: { id: \"metamagic-options\", name: \"tokenActionHud.dnd5e.metamagicOptions\", type: \"system\" },\r\n  monsterFeatures: { id: \"monster-features\", name: \"tokenActionHud.dnd5e.monsterFeatures\", type: \"system\" },\r\n  multiattacks: { id: \"multiattacks\", name: \"tokenActionHud.dnd5e.multiattacks\", type: \"system\" },\r\n  otherActions: { id: \"other-actions\", name: \"tokenActionHud.dnd5e.otherActions\", type: \"system\" },\r\n  pactBoons: { id: \"pact-boons\", name: \"tokenActionHud.dnd5e.pactBoons\", type: \"system\" },\r\n  pactSpells: { id: \"pact-spells\", name: \"tokenActionHud.dnd5e.pactSpells\", spellMode: \"pact\", type: \"system\" },\r\n  passiveEffects: { id: \"passive-effects\", name: \"DND5E.EffectPassive\", type: \"system\" },\r\n  passiveFeatures: { id: \"passive-features\", name: \"tokenActionHud.dnd5e.passiveFeatures\", type: \"system\" },\r\n  psionicPowers: { id: \"psionic-powers\", name: \"tokenActionHud.dnd5e.psionicPowers\", type: \"system\" },\r\n  raceFeatures: { id: \"race-features\", name: \"tokenActionHud.dnd5e.raceFeatures\", type: \"system\" },\r\n  reactions: { id: \"reactions\", name: \"DND5E.ReactionPl\", type: \"system\" },\r\n  rests: { id: \"rests\", name: \"tokenActionHud.dnd5e.rests\", type: \"system\" },\r\n  runes: { id: \"runes\", name: \"tokenActionHud.dnd5e.runes\", type: \"system\" },\r\n  saves: { id: \"saves\", name: \"DND5E.ClassSaves\", type: \"system\" },\r\n  skills: { id: \"skills\", name: \"tokenActionHud.dnd5e.skills\", type: \"system\" },\r\n  superiorHuntersDefense: { id: \"superior-hunters-defense\", name: \"tokenActionHud.dnd5e.superiorHuntersDefense\", type: \"system\" },\r\n  temporaryEffects: { id: \"temporary-effects\", name: \"DND5E.EffectTemporary\", type: \"system\" },\r\n  token: { id: \"token\", name: \"tokenActionHud.token\", type: \"system\" },\r\n  tools: { id: \"tools\", name: \"TYPES.Item.toolPl\", type: \"system\" },\r\n  unequipped: { id: \"unequipped\", name: \"DND5E.Unequipped\", type: \"system\" },\r\n  utility: { id: \"utility\", name: \"tokenActionHud.utility\", type: \"system\" },\r\n  weapons: { id: \"weapons\", name: \"TYPES.Item.weaponPl\", type: \"system\" }\r\n};\r\n\r\n/**\r\n * Prepared icon\r\n */\r\nexport const PREPARED_ICON = \"fas fa-sun\";\r\n\r\n/**\r\n * Proficiency level icons\r\n */\r\nexport const PROFICIENCY_LEVEL_ICON = {\r\n  0: \"fa-regular fa-circle\",\r\n  0.5: \"fa-regular fa-circle-half-stroke\",\r\n  1: \"fa-solid fa-circle\",\r\n  2: \"fa-regular fa-circle-dot\"\r\n};\r\n\r\n/**\r\n * Rarity\r\n */\r\nexport const RARITY = {\r\n  common: \"tokenActionHud.dnd5e.common\",\r\n  uncommon: \"tokenActionHud.dnd5e.uncommon\",\r\n  rare: \"tokenActionHud.dnd5e.rare\",\r\n  veryRare: \"tokenActionHud.dnd5e.veryRare\",\r\n  legendary: \"tokenActionHud.dnd5e.legendary\",\r\n  artifact: \"tokenActionHud.dnd5e.artifact\"\r\n};\r\n\r\n/**\r\n * Ritual icon\r\n */\r\nexport const RITUAL_ICON = \"fas fa-circle-r\";\r\n\r\n/**\r\n * Spell Group IDs\r\n */\r\nexport const SPELL_GROUP_IDS = [\r\n  \"cantrips\",\r\n  \"_1stLevelSpells\",\r\n  \"_2ndLevelSpells\",\r\n  \"_3rdLevelSpells\",\r\n  \"_4thLevelSpells\",\r\n  \"_5thLevelSpells\",\r\n  \"_6thLevelSpells\",\r\n  \"_7thLevelSpells\",\r\n  \"_8thLevelSpells\",\r\n  \"_9thLevelSpells\",\r\n  \"atWillSpells\",\r\n  \"innateSpells\",\r\n  \"pactSpells\"\r\n];\r\n","import { GROUP } from \"./constants.js\";\r\n\r\n/**\r\n * Default categories and groups\r\n */\r\nexport let DEFAULTS = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  const groups = GROUP;\r\n  Object.values(groups).forEach(group => {\r\n    group.name = coreModule.api.Utils.i18n(group.name);\r\n    group.listName = `Group: ${coreModule.api.Utils.i18n(group.name)}`;\r\n  });\r\n  const groupsArray = Object.values(groups);\r\n  DEFAULTS = {\r\n    layout: [\r\n      {\r\n        nestId: \"inventory\",\r\n        id: \"inventory\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Inventory\"),\r\n        groups: [\r\n          { ...groups.weapons, nestId: \"inventory_weapons\" },\r\n          { ...groups.equipment, nestId: \"inventory_equipment\" },\r\n          { ...groups.consumables, nestId: \"inventory_consumables\" },\r\n          { ...groups.tools, nestId: \"inventory_tools\" },\r\n          { ...groups.containers, nestId: \"inventory_containers\" },\r\n          { ...groups.loot, nestId: \"inventory_loot\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"features\",\r\n        id: \"features\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Features\"),\r\n        groups: [\r\n          { ...groups.activeFeatures, nestId: \"features_active-features\" },\r\n          { ...groups.passiveFeatures, nestId: \"features_passive-features\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"spells\",\r\n        id: \"spells\",\r\n        name: coreModule.api.Utils.i18n(\"TYPES.Item.spellPl\"),\r\n        groups: [\r\n          { ...groups.atWillSpells, nestId: \"spells_at-will-spells\" },\r\n          { ...groups.innateSpells, nestId: \"spells_innate-spells\" },\r\n          { ...groups.pactSpells, nestId: \"spells_pact-spells\" },\r\n          { ...groups.cantrips, nestId: \"spells_cantrips\" },\r\n          { ...groups._1stLevelSpells, nestId: \"spells_1st-level-spells\" },\r\n          { ...groups._2ndLevelSpells, nestId: \"spells_2nd-level-spells\" },\r\n          { ...groups._3rdLevelSpells, nestId: \"spells_3rd-level-spells\" },\r\n          { ...groups._4thLevelSpells, nestId: \"spells_4th-level-spells\" },\r\n          { ...groups._5thLevelSpells, nestId: \"spells_5th-level-spells\" },\r\n          { ...groups._6thLevelSpells, nestId: \"spells_6th-level-spells\" },\r\n          { ...groups._7thLevelSpells, nestId: \"spells_7th-level-spells\" },\r\n          { ...groups._8thLevelSpells, nestId: \"spells_8th-level-spells\" },\r\n          { ...groups._9thLevelSpells, nestId: \"spells_9th-level-spells\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"attributes\",\r\n        id: \"attributes\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Attributes\"),\r\n        groups: [\r\n          { ...groups.abilities, nestId: \"attributes_abilities\" },\r\n          { ...groups.skills, nestId: \"attributes_skills\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"effects\",\r\n        id: \"effects\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Effects\"),\r\n        groups: [\r\n          { ...groups.temporaryEffects, nestId: \"effects_temporary-effects\" },\r\n          { ...groups.passiveEffects, nestId: \"effects_passive-effects\" },\r\n          { ...groups.conditions, nestId: \"effects_conditions\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"utility\",\r\n        id: \"utility\",\r\n        name: coreModule.api.Utils.i18n(\"tokenActionHud.utility\"),\r\n        groups: [\r\n          { ...groups.combat, nestId: \"utility_combat\" },\r\n          { ...groups.token, nestId: \"utility_token\" },\r\n          { ...groups.rests, nestId: \"utility_rests\" },\r\n          { ...groups.utility, nestId: \"utility_utility\" }\r\n        ]\r\n      }\r\n    ],\r\n    groups: groupsArray\r\n  };\r\n});\r\n","import { MODULE } from \"./constants.js\";\r\n\r\nexport let Utils = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  Utils = class Utils {\r\n    /**\r\n     * Capitalize the first letter of every word\r\n     * @param {string} value The string to capitalize\r\n     * @returns {string}     The capitalized string\r\n     */\r\n    static capitalize(value) {\r\n      return value.replace(\r\n        /\\w\\S*/g,\r\n        text => text.charAt(0).toUpperCase() + text.substring(1).toLowerCase()\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Get setting value\r\n     * @param {string} key The key\r\n     * @param {string=null} defaultValue The default value\r\n     * @returns {*} The setting value\r\n     */\r\n    static getSetting(key, defaultValue = null) {\r\n      let value = defaultValue ?? null;\r\n      try {\r\n        value = game.settings.get(MODULE.ID, key);\r\n      } catch{\r\n        coreModule.api.Logger.debug(`Setting '${key}' not found`);\r\n      }\r\n      return value;\r\n    }\r\n\r\n    /**\r\n     * Set setting value\r\n     * @param {string} key The key\r\n     * @param {string} value The value\r\n     */\r\n    static async setSetting(key, value) {\r\n      try {\r\n        value = await game.settings.set(MODULE.ID, key, value);\r\n        coreModule.api.Logger.debug(`Setting '${key}' set to '${value}'`);\r\n      } catch{\r\n        coreModule.api.Logger.debug(`Setting '${key}' not found`);\r\n      }\r\n    }\r\n  };\r\n});\r\n","// System Module Imports\r\nimport {\r\n  ACTIVATION_TYPE, ACTION_TYPE, CONCENTRATION_ICON, CUSTOM_DND5E, FEATURE_GROUP_IDS,\r\n  GROUP, PREPARED_ICON, PROFICIENCY_LEVEL_ICON, RARITY, SPELL_GROUP_IDS\r\n} from \"./constants.js\";\r\nimport { Utils } from \"./utils.js\";\r\n\r\nexport let ActionHandler = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  ActionHandler = class ActionHandler extends coreModule.api.ActionHandler {\r\n    // Initialize action variables\r\n    featureActions = null;\r\n\r\n    inventoryActions = null;\r\n\r\n    spellActions = null;\r\n\r\n    /**\r\n     * Build System Actions\r\n     * @override\r\n     * @param {Array} groupIds\r\n     * @returns {object}\r\n     */\r\n    async buildSystemActions(groupIds) {\r\n      // Set actor and token variables\r\n      this.actors = (!this.actor) ? this.#getValidActors() : [this.actor];\r\n      this.tokens = (!this.token) ? this.#getValidTokens() : [this.token];\r\n\r\n      // Set items variable\r\n      if (this.actor) {\r\n        this.items = coreModule.api.Utils.sortItemsByName(this.#discardSlowItems(this.actor.items));\r\n      }\r\n\r\n      // Set settings variables\r\n      this.abbreviateSkills = Utils.getSetting(\"abbreviateSkills\");\r\n      this.displaySpellInfo = Utils.getSetting(\"displaySpellInfo\");\r\n      this.showItemsWithoutActivationCosts = Utils.getSetting(\"showItemsWithoutActivationCosts\");\r\n      this.showUnchargedItems = Utils.getSetting(\"showUnchargedItems\");\r\n      this.showUnequippedItems = Utils.getSetting(\"showUnequippedItems\");\r\n      if (this.actor?.type === \"npc\" && !this.showUnequippedItems) {\r\n        this.showUnequippedItems = Utils.getSetting(\"showUnequippedItemsNpcs\");\r\n      }\r\n      this.showUnpreparedSpells = Utils.getSetting(\"showUnpreparedSpells\");\r\n\r\n      this.activationgroupIds = [\r\n        \"actions\",\r\n        \"bonus-actions\",\r\n        \"crew-actions\",\r\n        \"lair-actions\",\r\n        \"legendary-actions\",\r\n        \"reactions\",\r\n        \"other-actions\"\r\n      ];\r\n\r\n      if (this.actor?.type === \"character\" || this.actor?.type === \"npc\") {\r\n        this.inventorygroupIds = [\r\n          \"equipped\",\r\n          \"consumables\",\r\n          \"containers\",\r\n          \"equipment\",\r\n          \"loot\",\r\n          \"tools\",\r\n          \"weapons\",\r\n          \"unequipped\"\r\n        ];\r\n\r\n        await this.#buildCharacterActions();\r\n      } else if (this.actor?.type === \"vehicle\") {\r\n        this.inventorygroupIds = [\r\n          \"consumables\",\r\n          \"equipment\",\r\n          \"tools\",\r\n          \"weapons\"\r\n        ];\r\n\r\n        await this.#buildVehicleActions();\r\n      } else if (!this.actor) {\r\n        await this.#buildMultipleTokenActions();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build character actions\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    async #buildCharacterActions() {\r\n      await Promise.all([\r\n        this.#buildConditions(),\r\n        this.#buildEffects(),\r\n        this.#buildFeatures(),\r\n        this.#buildInventory(),\r\n        this.#buildSpells()\r\n      ]);\r\n      this.#buildAbilities(\"ability\", \"abilities\");\r\n      this.#buildAbilities(\"check\", \"checks\");\r\n      this.#buildAbilities(\"save\", \"saves\");\r\n      this.#buildCombat();\r\n      this.#buildCounters();\r\n      this.#buildExhaustion();\r\n      this.#buildRests();\r\n      this.#buildSkills();\r\n      this.#buildUtility();\r\n    }\r\n\r\n    /**\r\n     * Build vehicle actions\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    async #buildVehicleActions() {\r\n      await Promise.all([\r\n        this.#buildConditions(),\r\n        this.#buildEffects(),\r\n        this.#buildFeatures(),\r\n        this.#buildInventory()\r\n      ]);\r\n      this.#buildAbilities(\"ability\", \"abilities\");\r\n      this.#buildAbilities(\"check\", \"checks\");\r\n      this.#buildAbilities(\"save\", \"saves\");\r\n      this.#buildCombat();\r\n      this.#buildUtility();\r\n    }\r\n\r\n    /**\r\n     * Build multiple token actions\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    async #buildMultipleTokenActions() {\r\n      this.#buildAbilities(\"ability\", \"abilities\");\r\n      this.#buildAbilities(\"check\", \"checks\");\r\n      this.#buildAbilities(\"save\", \"saves\");\r\n      this.#buildCombat();\r\n      await this.#buildConditions();\r\n      this.#buildRests();\r\n      this.#buildSkills();\r\n      this.#buildUtility();\r\n    }\r\n\r\n    /**\r\n     * Build abilities\r\n     * @private\r\n     * @param {string} actionType\r\n     * @param {string} groupId\r\n     */\r\n    #buildAbilities(actionType, groupId) {\r\n      // Get abilities and exit if none exist\r\n      const abilities = this.actor?.system.abilities || CONFIG.DND5E.abilities;\r\n      if (abilities.length === 0) return;\r\n\r\n      // Get actions\r\n      const actions = Object.entries(abilities)\r\n        .filter(ability => abilities[ability[0]].value !== 0)\r\n        .map(([abilityId, ability]) => {\r\n          const name = CONFIG.DND5E.abilities[abilityId].label;\r\n          const mod = (groupId === \"saves\") ? ability?.save : ability?.mod;\r\n          return {\r\n            id: `${actionType}-${abilityId}`,\r\n            name: (this.abbreviateSkills) ? Utils.capitalize(abilityId) : name,\r\n            encodedValue: [actionType, abilityId].join(this.delimiter),\r\n            icon1: (groupId !== \"checks\") ? this.#getProficiencyIcon(abilities[abilityId].proficient) : \"\",\r\n            info1: (this.actor) ? {\r\n              text: coreModule.api.Utils.getModifier(mod),\r\n              title: `${game.i18n.localize(\"DND5E.ActionAbil\")}: ${coreModule.api.Utils.getModifier(mod)}`\r\n            } : null,\r\n            info2: (this.actor && groupId === \"abilities\") ? {\r\n              text: `(${coreModule.api.Utils.getModifier(ability?.save)})`,\r\n              title: `${game.i18n.localize(\"DND5E.SavingThrow\")}: ${coreModule.api.Utils.getModifier(ability?.save)}`\r\n            } : null,\r\n            listName: this.#getListName(actionType, name)\r\n          };\r\n        });\r\n\r\n      // Add actions to action list\r\n      this.addActions(actions, { id: groupId });\r\n    }\r\n\r\n    /**\r\n     * Build activations\r\n     * @public\r\n     * @param {object} data  groupData, actionData, actionType\r\n     */\r\n    async buildActivations(data) {\r\n      const { groupData, actionData, actionType = \"item\" } = data;\r\n\r\n      // Create map of items according to activation type\r\n      const activationItems = new Map();\r\n\r\n      // Loop items and add to activationItems\r\n      for (const [key, value] of actionData) {\r\n        const activationType = value.system?.activities?.contents[0]?.activation?.type;\r\n        const groupId = ACTIVATION_TYPE[activationType]?.group ?? \"other\";\r\n        if (!activationItems.has(groupId)) activationItems.set(groupId, new Map());\r\n        activationItems.get(groupId).set(key, value);\r\n      }\r\n\r\n      // Loop through action group ids\r\n      for (const value of Object.values(ACTIVATION_TYPE)) {\r\n        const group = value.group;\r\n\r\n        // Skip if no items exist\r\n        if (!activationItems.has(group)) continue;\r\n\r\n        // Clone and add to group data\r\n        const groupDataClone = { ...groupData, id: `${group}+${groupData.id}`, type: \"system-derived\" };\r\n\r\n        // Set Equipped and Unequipped groups to not selected by default\r\n        if ([\"equipped\", \"unequipped\"].includes(groupData.id)) { groupDataClone.defaultSelected = false; }\r\n\r\n        // Create parent group data\r\n        const parentgroupData = { id: group, type: \"system\" };\r\n\r\n        // Add group to HUD\r\n        await this.addGroup(groupDataClone, parentgroupData);\r\n\r\n        // Add spell slot info to group\r\n        if (actionType === \"spell\") { this.addGroupInfo(groupDataClone); }\r\n\r\n        // Build actions\r\n        await this.buildActions({\r\n          groupData: groupDataClone,\r\n          actionData: activationItems.get(group),\r\n          actionType\r\n        });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build combat\r\n     * @private\r\n     */\r\n    #buildCombat() {\r\n      // If token's turn, include endTurn\r\n      const combatType = {\r\n        initiative: \"tokenActionHud.dnd5e.rollInitiative\",\r\n        ...(game.combat?.current?.tokenId !== this.token?.id && { endTurn: \"tokenActionHud.endTurn\" })\r\n      };\r\n\r\n      const tokens = coreModule.api.Utils.getControlledTokens();\r\n      const tokenIds = tokens?.map(token => token.id);\r\n      const combatants = (game.combat)\r\n        ? game.combat.combatants.filter(combatant => tokenIds.includes(combatant.tokenId))\r\n        : [];\r\n\r\n      const getInfo1 = id => {\r\n        if (id === \"initiative\" && combatants.length === 1) {\r\n          const currentInitiative = combatants[0].initiative;\r\n          return { class: \"tah-spotlight\", text: currentInitiative };\r\n        }\r\n        return {};\r\n      };\r\n\r\n      const getActive = () => { return combatants.length > 0 && (combatants.every(combatant => combatant?.initiative)) ? \" active\" : \"\";};\r\n\r\n      // Get actions\r\n      const actionType = \"utility\";\r\n      const actions = Object.entries(combatType).map(([id, name]) => {\r\n        return {\r\n          id,\r\n          name: game.i18n.localize(name),\r\n          encodedValue: [actionType, id].join(this.delimiter),\r\n          info1: getInfo1(id),\r\n          cssClass: (id === \"initiative\" ) ? `toggle${getActive()}` : \"\",\r\n          listName: this.#getListName(actionType, name)\r\n        };\r\n      });\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"combat\" });\r\n    }\r\n\r\n    /**\r\n     * Build conditions\r\n     * @private\r\n     */\r\n    async #buildConditions() {\r\n      if (this.tokens?.length === 0) return;\r\n\r\n      // Get conditions and exit if none exist\r\n      const conditions = CONFIG.statusEffects.filter(condition => condition.id !== \"\");\r\n      if (conditions.length === 0) return;\r\n\r\n      // Get actions\r\n      const actionType = \"condition\";\r\n      const actions = await Promise.all(conditions.map(async condition => {\r\n        const hasCondition = this.actors.every(actor => {\r\n          return actor.effects.some(effect => effect.statuses.some(status => status === condition.id)\r\n          && !effect?.disabled);\r\n        });\r\n        const name = game.i18n.localize(condition.label) ?? condition.name;\r\n        return {\r\n          id: condition.id,\r\n          name,\r\n          encodedValue: [actionType, condition.id].join(this.delimiter),\r\n          img: coreModule.api.Utils.getImage(condition),\r\n          cssClass: `toggle${(hasCondition) ? \" active\" : \"\"}`,\r\n          listName: this.#getListName(actionType, name),\r\n          tooltip: await this.#getTooltip(await this.#getConditionTooltipData(condition.id, condition.name))\r\n        };\r\n      }));\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"conditions\" });\r\n    }\r\n\r\n    /**\r\n     * Build counters\r\n     * @private\r\n     */\r\n    async #buildCounters() {\r\n      if (!coreModule.api.Utils.isModuleActive(CUSTOM_DND5E.ID)\r\n        || !CUSTOM_DND5E.COUNTERS[this.actor?.type]) return;\r\n\r\n      const actionType = \"counter\";\r\n\r\n      let counters = game.settings.get(CUSTOM_DND5E.ID, CUSTOM_DND5E.COUNTERS[this.actor?.type]) ?? {};\r\n\r\n      if (coreModule.api.Utils.isModuleActive(CUSTOM_DND5E.ID) && Object.keys(counters).length) {\r\n        counters = Object.entries(counters)\r\n          .filter(([_, value]) => value.visible)\r\n          .map(([key, value]) => {\r\n            value.key = key;\r\n            return value;\r\n          });\r\n      } else {\r\n        counters = [\r\n          {\r\n            name: game.i18n.localize(\"DND5E.DeathSave\"),\r\n            type: \"successFailure\",\r\n            system: true,\r\n            visible: true,\r\n            key: \"death-saves\"\r\n          },\r\n          {\r\n            name: game.i18n.localize(\"DND5E.Exhaustion\"),\r\n            type: \"number\",\r\n            system: true,\r\n            visible: true,\r\n            key: \"exhaustion\"\r\n          },\r\n          {\r\n            name: game.i18n.localize(\"DND5E.Inspiration\"),\r\n            type: \"checkbox\",\r\n            system: true,\r\n            visible: true,\r\n            key: \"inspiration\"\r\n          }\r\n        ];\r\n      }\r\n\r\n      // Get actions\r\n      const actions = counters.map(counter => {\r\n        let active = \"\";\r\n        let cssClass = \"\";\r\n        let img = \"\";\r\n        let info1 = \"\";\r\n        if (counter.system) {\r\n          switch (counter.key) {\r\n            case \"exhaustion\":\r\n              active = (this.actor.system.attributes.exhaustion > 0) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              img = coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/exhaustion.svg\");\r\n              info1 = { text: this.actor.system.attributes.exhaustion };\r\n              break;\r\n            case \"death-saves\":\r\n              img = coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/death-saves.svg\");\r\n              info1 = { text: `${this.actor.system.attributes.death.success}/${this.actor.system.attributes.death.failure}` };\r\n              break;\r\n            case \"inspiration\":\r\n              active = (this.actor.system.attributes.inspiration) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              img = coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/inspiration.svg\");\r\n              break;\r\n          }\r\n        } else {\r\n          const value = this.actor.getFlag(CUSTOM_DND5E.ID, counter.key);\r\n          switch (counter.type) {\r\n            case \"checkbox\":\r\n              active = (value) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              break;\r\n            case \"fraction\":\r\n              active = (value.value > 0) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              info1 = { text: `${value.value ?? 0}/${value.max ?? 0}` };\r\n              break;\r\n            case \"number\":\r\n              active = (value > 0) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              info1 = { text: value };\r\n              break;\r\n            case \"successFailure\":\r\n              info1 = { text: `${value?.success ?? 0}/${value?.failure ?? 0}` };\r\n              break;\r\n          }\r\n        }\r\n\r\n        return {\r\n          id: counter.key,\r\n          name: counter.label,\r\n          listName: this.#getListName(actionType, counter.name),\r\n          encodedValue: [actionType, (counter.system) ? counter.key : encodeURIComponent(`${counter.key}>${counter.type}`)].join(this.delimiter),\r\n          cssClass,\r\n          img,\r\n          info1\r\n        };\r\n      });\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"counters\" });\r\n    }\r\n\r\n    /**\r\n     * Build effects\r\n     * @private\r\n     */\r\n    async #buildEffects() {\r\n      const actionType = \"effect\";\r\n\r\n      // Get effects and exit if none exist\r\n      const effects = new Map(this.actor.allApplicableEffects().map(effect => [effect.id, effect]));\r\n      if (effects.size === 0) return;\r\n\r\n      // Map passive and temporary effects to new maps\r\n      const passiveEffects = new Map();\r\n      const temporaryEffects = new Map();\r\n      const conditionIds = new Set(Object.keys(CONFIG.DND5E.conditionTypes).map(key => dnd5e.utils.staticID(`dnd5e${key}`)));\r\n\r\n      // Iterate effects and add to a map based on the isTemporary value\r\n      for (const [effectId, effect] of effects.entries()) {\r\n        if (effect.isSuppressed) continue;\r\n        if (effect.parent?.system?.identified === false && !game.user.isGM) continue;\r\n        if (conditionIds.has(effect.id)) continue;\r\n\r\n        if (effect.isTemporary) { temporaryEffects.set(effectId, effect); }\r\n        else { passiveEffects.set(effectId, effect); }\r\n      }\r\n\r\n      // Build passive and temporary effects\r\n      await Promise.all([\r\n        this.buildActions({ groupData: { id: \"passive-effects\" }, actionData: passiveEffects, actionType }),\r\n        this.buildActions({ groupData: { id: \"temporary-effects\" }, actionData: temporaryEffects, actionType })\r\n      ]);\r\n    }\r\n\r\n    /**\r\n     * Build exhaustion\r\n     * @private\r\n     */\r\n    #buildExhaustion() {\r\n      // Exit if every actor is not the character type\r\n      if (!this.actors.every(actor => actor.type === \"character\")) return;\r\n\r\n      // Get actions\r\n      const actionType = \"exhaustion\";\r\n      const active = this.actor.system.attributes.exhaustion > 0 ? \" active\" : \"\";\r\n      const actions = [{\r\n        id: \"exhaustion\",\r\n        name: game.i18n.localize(\"DND5E.Exhaustion\"),\r\n        encodedValue: [actionType, \"exhaustion\"].join(this.delimiter),\r\n        cssClass: `toggle${active}`,\r\n        img: coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/exhaustion.svg\"),\r\n        info1: { text: this.actor.system.attributes.exhaustion },\r\n        listName: this.#getListName(actionType, name)\r\n      }];\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"exhaustion\" });\r\n    }\r\n\r\n    /**\r\n     * Build features\r\n     * @private\r\n     */\r\n    async #buildFeatures() {\r\n      // Filter feats from items and exit if none exist\r\n      const feats = new Map([...this.items].filter(([, value]) => value.type === \"feat\"));\r\n      if (feats.size === 0) return;\r\n\r\n      // Map active and passive features to new maps\r\n      const featuresMap = new Map([\r\n        [\"activeFeatures\", new Map()],\r\n        [\"passiveFeatures\", new Map()]\r\n      ]);\r\n\r\n      const featureType = {\r\n        background: \"backgroundFeatures\",\r\n        class: \"classFeatures\",\r\n        monster: \"monsterFeatures\",\r\n        race: \"raceFeatures\",\r\n        feats: \"feats\"\r\n      };\r\n\r\n      const classFeatureType = {\r\n        artificerInfusion: \"artificerInfusions\",\r\n        channelDivinity: \"channelDivinity\",\r\n        defensiveTactic: \"defensiveTactics\",\r\n        eldritchInvocation: \"eldritchInvocations\",\r\n        elementalDiscipline: \"elementalDisciplines\",\r\n        fightingStyle: \"fightingStyles\",\r\n        huntersPrey: \"huntersPrey\",\r\n        ki: \"kiAbilities\",\r\n        maneuver: \"maneuvers\",\r\n        metamagic: \"metamagicOptions\",\r\n        multiattack: \"multiattacks\",\r\n        pact: \"pactBoons\",\r\n        psionicPower: \"psionicPowers\",\r\n        rune: \"runes\",\r\n        superiorHuntersDefense: \"superiorHuntersDefense\"\r\n      };\r\n\r\n      for (const [key, value] of feats) {\r\n        const activationType = value.system.activities.contents[0]?.type;\r\n        const type = value.system.type.value;\r\n        const subType = value.system.type?.subtype;\r\n\r\n        if (activationType) { featuresMap.get(\"activeFeatures\").set(key, value); }\r\n        else { featuresMap.get(\"passiveFeatures\").set(key, value); }\r\n\r\n        // Map feature types\r\n        if (featureType[type]) {\r\n          if (!featuresMap.has(featureType[type])) featuresMap.set(featureType[type], new Map());\r\n          featuresMap.get(featureType[type]).set(key, value);\r\n        }\r\n\r\n        // Map class feature subtypes\r\n        if (classFeatureType[subType]) {\r\n          if (!featuresMap.has(classFeatureType[subType])) featuresMap.set(classFeatureType[subType], new Map());\r\n          featuresMap.get(classFeatureType[subType]).set(key, value);\r\n        }\r\n      }\r\n\r\n      // Loop through inventory groups ids\r\n      for (const id of FEATURE_GROUP_IDS) {\r\n        const actionData = featuresMap.get(id);\r\n        if (!actionData || actionData.size === 0) continue;\r\n\r\n        // Create group data\r\n        const groupData = {\r\n          id: GROUP[id].id,\r\n          name: game.i18n.localize(GROUP[id].name) ?? \"\"\r\n        };\r\n\r\n        // Build actions and activations\r\n        const actionType = \"feature\";\r\n        await this.buildActions({ groupData, actionData, actionType });\r\n        await this.buildActivations({ groupData, actionData, actionType });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build inventory\r\n     * @private\r\n     */\r\n    async #buildInventory() {\r\n      // Exit early if no items exist\r\n      if (this.items.size === 0) return;\r\n\r\n      // Initialize inventory map categories\r\n      const inventoryMap = new Map([\r\n        [\"equipped\", new Map()],\r\n        [\"unequipped\", new Map()],\r\n        [\"consumables\", new Map()],\r\n        [\"containers\", new Map()],\r\n        [\"equipment\", new Map()],\r\n        [\"loot\", new Map()],\r\n        [\"tools\", new Map()],\r\n        [\"weapons\", new Map()]\r\n      ]);\r\n\r\n      for (const [key, value] of this.items) {\r\n        // Set items into maps\r\n        if (value.system?.quantity > 0 && this.#isActiveItem(value)) {\r\n          if (value.system.equipped) { inventoryMap.get(\"equipped\").set(key, value); }\r\n          else { inventoryMap.get(\"unequipped\").set(key, value); }\r\n\r\n          if (this.#isUsableItem(value) && value.type === \"consumable\") inventoryMap.get(\"consumables\").set(key, value);\r\n          if (this.#isEquippedItem(value)) {\r\n            switch (value.type) {\r\n              case \"container\": inventoryMap.get(\"containers\").set(key, value); break;\r\n              case \"equipment\": inventoryMap.get(\"equipment\").set(key, value); break;\r\n              case \"loot\": inventoryMap.get(\"loot\").set(key, value); break;\r\n              case \"tool\": inventoryMap.get(\"tools\").set(key, value); break;\r\n              case \"weapon\": inventoryMap.get(\"weapons\").set(key, value); break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Loop through inventory subcateogry ids\r\n      for (const groupId of this.inventorygroupIds) {\r\n        const actionData = inventoryMap.get(groupId);\r\n        if (!actionData || actionData.size === 0) continue;\r\n\r\n        // Create group data\r\n        const groupData = {\r\n          id: groupId,\r\n          name: game.i18n.localize(GROUP[groupId].name)\r\n        };\r\n\r\n        const data = { groupData, actionData };\r\n\r\n        // Build actions and activations\r\n        await this.buildActions(data);\r\n        await this.buildActivations(data);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build rests\r\n     * @private\r\n     */\r\n    #buildRests() {\r\n      // Exit if every actor is not the character type\r\n      if (this.actors.length === 0 || !this.actors.every(actor => actor.type === \"character\")) return;\r\n\r\n      // Get actions\r\n      const actionType = \"utility\";\r\n      const restTypes = { shortRest: \"DND5E.ShortRest\", longRest: \"DND5E.LongRest\" };\r\n      const actions = Object.entries(restTypes).map(([id, name]) => {\r\n        name = game.i18n.localize(name);\r\n        return {\r\n          id,\r\n          name,\r\n          encodedValue: [actionType, id].join(this.delimiter),\r\n          listName: this.#getListName(actionType, name)\r\n        };\r\n      });\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"rests\" });\r\n    }\r\n\r\n    /**\r\n     * Build skills\r\n     * @private\r\n     */\r\n    #buildSkills() {\r\n      // Get skills and exit if none exist\r\n      const skills = this.actor?.system.skills || CONFIG.DND5E.skills;\r\n      if (skills.length === 0) return;\r\n\r\n      // Get actions\r\n      const actionType = \"skill\";\r\n      const actions = Object.entries(skills).map(([id, skill]) => {\r\n        try {\r\n          const name = CONFIG.DND5E.skills[id].label;\r\n          return {\r\n            id,\r\n            name: this.abbreviateSkills ? Utils.capitalize(id) : name,\r\n            encodedValue: [actionType, id].join(this.delimiter),\r\n            icon1: this.#getProficiencyIcon(skill.value),\r\n            info1: (this.actor) ? { text: coreModule.api.Utils.getModifier(skill.total) } : \"\",\r\n            listName: this.#getListName(actionType, name)\r\n          };\r\n        } catch(error) {\r\n          coreModule.api.Logger.error(skill);\r\n          return null;\r\n        }\r\n      }).filter(skill => !!skill);\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, { id: \"skills\" });\r\n    }\r\n\r\n    /**\r\n     * Build spells\r\n     */\r\n    async #buildSpells() {\r\n      // Filter items for spells and exit if none exist\r\n      const spells = new Map([...this.items].filter(([, value]) => value.type === \"spell\"));\r\n      if (spells.size === 0) return;\r\n\r\n      // Initialize spells map categories\r\n      const spellsMap = new Map([\r\n        [\"atWillSpells\", new Map()],\r\n        [\"innateSpells\", new Map()],\r\n        [\"pactSpells\", new Map()],\r\n        [\"cantrips\", new Map()],\r\n        [\"_1stLevelSpells\", new Map()],\r\n        [\"_2ndLevelSpells\", new Map()],\r\n        [\"_3rdLevelSpells\", new Map()],\r\n        [\"_4thLevelSpells\", new Map()],\r\n        [\"_5thLevelSpells\", new Map()],\r\n        [\"_6thLevelSpells\", new Map()],\r\n        [\"_7thLevelSpells\", new Map()],\r\n        [\"_8thLevelSpells\", new Map()],\r\n        [\"_9thLevelSpells\", new Map()]\r\n      ]);\r\n\r\n      // Loop through items\r\n      for (const [key, value] of spells) {\r\n        if (!this.#isUsableItem(value) || !this.#isUsableSpell(value)) continue;\r\n\r\n        switch (value.system.preparation.mode) {\r\n          case \"atwill\":\r\n            spellsMap.get(\"atWillSpells\").set(key, value); break;\r\n          case \"innate\":\r\n            spellsMap.get(\"innateSpells\").set(key, value); break;\r\n          case \"pact\":\r\n            spellsMap.get(\"pactSpells\").set(key, value); break;\r\n          default: {\r\n            switch (value.system.level) {\r\n              case 0:\r\n                spellsMap.get(\"cantrips\").set(key, value); break;\r\n              case 1:\r\n                spellsMap.get(\"_1stLevelSpells\").set(key, value); break;\r\n              case 2:\r\n                spellsMap.get(\"_2ndLevelSpells\").set(key, value); break;\r\n              case 3:\r\n                spellsMap.get(\"_3rdLevelSpells\").set(key, value); break;\r\n              case 4:\r\n                spellsMap.get(\"_4thLevelSpells\").set(key, value); break;\r\n              case 5:\r\n                spellsMap.get(\"_5thLevelSpells\").set(key, value); break;\r\n              case 6:\r\n                spellsMap.get(\"_6thLevelSpells\").set(key, value); break;\r\n              case 7:\r\n                spellsMap.get(\"_7thLevelSpells\").set(key, value); break;\r\n              case 8:\r\n                spellsMap.get(\"_8thLevelSpells\").set(key, value); break;\r\n              case 9:\r\n                spellsMap.get(\"_9thLevelSpells\").set(key, value); break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Reverse sort spell slots by level\r\n      const systemSpells = Object.entries(this.actor.system.spells).reverse();\r\n\r\n      // Set spell slot availability\r\n      const spellSlotsMap = new Map();\r\n      let spellSlotAvailable = this.showUnchargedItems;\r\n      let pactSlotAvailable = this.showUnchargedItems;\r\n      let pactSlot = null;\r\n\r\n      for (const [key, value] of systemSpells) {\r\n        const hasValue = value.value > 0;\r\n        const hasMax = value.max > 0;\r\n        const hasLevel = value.level > 0;\r\n\r\n        if (key === \"pact\") {\r\n          pactSlotAvailable = pactSlotAvailable || (hasValue && hasMax && hasLevel);\r\n          value.slotAvailable = pactSlotAvailable && hasLevel;\r\n          pactSlot = [key, value];\r\n        } else if (key.startsWith(\"spell\") && key !== \"spell0\") {\r\n          spellSlotAvailable = spellSlotAvailable || (hasValue && hasMax);\r\n          value.slotAvailable = spellSlotAvailable;\r\n          spellSlotsMap.set(key, value);\r\n        } else if (hasValue) {\r\n          value.slotsAvailable = true;\r\n          spellSlotsMap.set(key, value);\r\n        }\r\n      }\r\n\r\n      // Set equivalent spell slot where pact slot is available\r\n      if (pactSlot[1].slotAvailable) {\r\n        const spellSlot = spellSlotsMap.get(f`spell${pactSlot[1].level}`);\r\n        spellSlot.slotsAvailable = true;\r\n      }\r\n\r\n      const spellSlotModes = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, \"pact\"]);\r\n\r\n      for (const id of SPELL_GROUP_IDS) {\r\n        // Skip if no spells exist\r\n        if (!spellsMap.has(id)) continue;\r\n\r\n        const spellMode = GROUP[id].spellMode;\r\n        const levelInfo = (spellMode === \"pact\") ? pactSlot[1] : spellSlotsMap.get(`spell${spellMode}`);\r\n        const { value: slots = 0, max = 0, slotAvailable = false } = levelInfo || {};\r\n\r\n        // Skip if spells require spell slots and none are available\r\n        if (!slotAvailable && spellSlotModes.has(spellMode)) continue;\r\n\r\n        // Create group data\r\n        const groupData = {\r\n          id: GROUP[id].id,\r\n          name: game.i18n.localize(GROUP[id].name),\r\n          info: { info1: { class: \"tah-spotlight\", text: (max > 0) ? `${slots}/${max}` : \"\" } }\r\n        };\r\n\r\n        // Add spell slot info to group\r\n        this.addGroupInfo(groupData);\r\n\r\n        const data = { groupData, actionData: spellsMap.get(id), actionType: \"spell\" };\r\n\r\n        // Build actions and activations\r\n        await this.buildActions(data);\r\n        await this.buildActivations(data);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build utility\r\n     * @private\r\n     */\r\n    #buildUtility() {\r\n      // Exit if every actor is not the character type\r\n      if (this.actors.length === 0) return;\r\n      if (!this.actors.every(actor => actor.type === \"character\")) return;\r\n\r\n      const actionType = \"utility\";\r\n\r\n      // Set utility types\r\n      const utilityTypes = {\r\n        deathSave: { name: game.i18n.localize(\"DND5E.DeathSave\") },\r\n        inspiration: { name: game.i18n.localize(\"DND5E.Inspiration\") }\r\n      };\r\n\r\n      // Delete 'deathSave' for multiple tokens\r\n      if (!this.actor || this.actor.system.attributes.hp.value > 0) delete utilityTypes.deathSave;\r\n\r\n      // Get actions\r\n      const actions = Object.entries(utilityTypes)\r\n        .map(utilityType => {\r\n          const id = utilityType[0];\r\n          const name = utilityType[1].name;\r\n          const encodedValue = [actionType, id].join(this.delimiter);\r\n          let cssClass = \"\";\r\n          if (utilityType[0] === \"inspiration\") {\r\n            const active = this.actors.every(actor => actor.system.attributes?.inspiration)\r\n              ? \" active\"\r\n              : \"\";\r\n            cssClass = `toggle${active}`;\r\n          }\r\n          return {\r\n            id,\r\n            name,\r\n            encodedValue,\r\n            cssClass,\r\n            listName: this.#getListName(actionType, name)\r\n          };\r\n        });\r\n\r\n      // Crreate group data\r\n      const groupData = { id: \"utility\" };\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /**\r\n     * Build actions\r\n     * @public\r\n     * @param {object} data actionData, groupData, actionType\r\n     * @param {object} options\r\n     */\r\n    async buildActions(data, options) {\r\n      const { actionData, groupData, actionType } = data;\r\n\r\n      // Exit if there is no action data\r\n      if (actionData.size === 0) return;\r\n\r\n      // Exit if there is no groupId\r\n      const groupId = (typeof groupData === \"string\" ? groupData : groupData?.id);\r\n      if (!groupId) return;\r\n\r\n      // Get actions\r\n      const actions = await Promise.all([...actionData].map(async item => await this.#getAction(item[1], actionType)));\r\n\r\n      // Add actions to action list\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /**\r\n     * Get action\r\n     * @private\r\n     * @param {object} entity      The entity\r\n     *  @param {string} actionType The action type\r\n     * @returns {object}           The action\r\n     */\r\n    async #getAction(entity, actionType = \"item\") {\r\n      const id = entity.id ?? entity._id;\r\n      let name = entity?.name ?? entity?.label;\r\n      let cssClass = \"\";\r\n      if (Object.hasOwn(entity, \"disabled\")) {\r\n        const active = (!entity.disabled) ? \" active\" : \"\";\r\n        cssClass = `toggle${active}`;\r\n      }\r\n      const info = this.#getItemInfo(entity);\r\n      const tooltip = await this.#getTooltip(await this.#getTooltipData(entity));\r\n      return {\r\n        id,\r\n        name,\r\n        encodedValue: [actionType, id].join(this.delimiter),\r\n        cssClass,\r\n        img: coreModule.api.Utils.getImage(entity),\r\n        icon1: this.#getActivationTypeIcon(entity.system?.activities?.contents[0]?.activation.type),\r\n        icon2: this.#getPreparedIcon(entity),\r\n        icon3: this.#getConcentrationIcon(entity),\r\n        info1: info?.info1,\r\n        info2: info?.info2,\r\n        info3: info?.info3,\r\n        listName: this.#getListName(actionType, name),\r\n        tooltip\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Is active item\r\n     * @private\r\n     * @param {object} item The item\r\n     * @returns {boolean}   Whether the item is active\r\n     */\r\n    #isActiveItem(item) {\r\n      if (this.showItemsWithoutActivationCosts) return true;\r\n      const activationTypes = new Set(Object.keys(CONFIG.DND5E.activityActivationTypes).filter(activationType => activationType !== \"none\"));\r\n      const activationType = item.system?.activities?.contents[0]?.activation?.type;\r\n      return activationTypes.has(activationType) || item.type === \"tool\";\r\n    }\r\n\r\n    /**\r\n     * Is equipped item\r\n     * @private\r\n     * @param {object} item The item\r\n     * @returns {boolean}   Whether the item is equipped\r\n     */\r\n    #isEquippedItem(item) {\r\n      const excludedTypes = [\"consumable\", \"spell\", \"feat\"];\r\n      return (this.showUnequippedItems && !excludedTypes.includes(item.type))\r\n      || (item.system.equipped && item.type !== \"consumable\");\r\n    }\r\n\r\n    /**\r\n     * Is usable item\r\n     * @private\r\n     * @param {object} item The item\r\n     * @returns {boolean}   Whether the item is usable\r\n     */\r\n    #isUsableItem(item) {\r\n      return this.showUnchargedItems || item.system.uses.value || !item.system.uses.max;\r\n    }\r\n\r\n    /**\r\n     * Is usable spell\r\n     * @private\r\n     * @param {object} spell The spell\r\n     * @returns {boolean}    Whether the spell is usable\r\n     */\r\n    #isUsableSpell(spell) {\r\n      if (this.actor?.type !== \"character\" && this.showUnequippedItems) return true;\r\n      if (this.showUnpreparedSpells) return true;\r\n\r\n      const preparationModes = new Set(Object.keys(CONFIG.DND5E.spellPreparationModes).filter(preparationMode => preparationMode !== \"prepared\"));\r\n\r\n      // Return true if spell is a cantrip, has a preparation mode other than 'prepared' or is prepared\r\n      return spell.system.level === 0 || preparationModes.has(spell.system.preparation.mode)\r\n      || spell.system.preparation.prepared;\r\n    }\r\n\r\n    #getListName(actionType, actionName) {\r\n      const prefix = `${game.i18n.localize(ACTION_TYPE[actionType])}: ` ?? \"\";\r\n      return `${prefix}${actionName}` ?? \"\";\r\n    }\r\n\r\n    /**\r\n     * Get item info\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {object}\r\n     */\r\n    #getItemInfo(item) {\r\n      const info1 = item.type === \"spell\" ? this.#getSpellInfo(item) : this.#getQuantityData(item);\r\n      const info2 = this.#getUsesData(item);\r\n      const info3 = this.#getConsumeData(item);\r\n\r\n      return { info1, info2, info3 };\r\n    }\r\n\r\n    /**\r\n     * Add spell info\r\n     * @private\r\n     * @param {object} spell The spell\r\n     * @returns {object}     The spell info\r\n     */\r\n    #getSpellInfo(spell) {\r\n      if (!this.displaySpellInfo) return null;\r\n\r\n      const components = spell.system?.properties;\r\n      if (!components) return null;\r\n\r\n      const info = { text: \"\", title: \"\" };\r\n      const componentTypes = {\r\n        vocal: \"DND5E.ComponentVerbal\",\r\n        somatic: \"DND5E.ComponentSomatic\",\r\n        material: \"DND5E.ComponentMaterial\"\r\n      };\r\n\r\n\r\n      const componentsArray = Object.entries(componentTypes)\r\n        .filter(([key]) => components[key])\r\n        .map(([key, label]) => {\r\n          info.text += game.i18n.localize(`${label}Abbr`);\r\n          return game.i18n.localize(label);\r\n        });\r\n\r\n      // Ritual\r\n      if (components.ritual) {\r\n        componentsArray.push(`[${game.i18n.localize(\"DND5E.Ritual\")}]`);\r\n        info.text += ` [${game.i18n.localize(\"DND5E.RitualAbbr\")}]`;\r\n      }\r\n\r\n      info.title = componentsArray.join(\", \");\r\n\r\n      return info;\r\n    }\r\n\r\n    /**\r\n     * Get valid actors\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    #getValidActors() {\r\n      const allowedTypes = [\"character\", \"npc\"];\r\n      return this.actors.every(actor => allowedTypes.includes(actor.type)) ? this.actors : [];\r\n    }\r\n\r\n    /**\r\n     * Get valid tokens\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    #getValidTokens() {\r\n      const allowedTypes = [\"character\", \"npc\"];\r\n      return this.actors.every(actor => allowedTypes.includes(actor.type)) ? this.tokens : [];\r\n    }\r\n\r\n    /**\r\n     * Get quantity\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {string}\r\n     */\r\n    #getQuantityData(item) {\r\n      const quantity = item?.system?.quantity ?? 0;\r\n      return {\r\n        text: (quantity > 1) ? quantity : \"\",\r\n        title: `${game.i18n.localize(\"DND5E.Quantity\")}: ${quantity}`\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Get uses\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {string}\r\n     */\r\n    #getUsesData(item) {\r\n      const uses = item?.system?.uses;\r\n      if (!(uses?.max > 0)) return {};\r\n      const per = uses.recovery[0]?.period === \"charges\" ? \"\" : ` ${game.i18n.localize(\"DND5E.per\")} `;\r\n      const period = CONFIG.DND5E.limitedUsePeriods[uses.recovery[0]?.period]?.label ?? uses.recovery[0]?.period;\r\n      const perPeriod = (period) ? `${per}${period}` : \"\";\r\n      const remainingUses = uses.max - (uses.spent ?? 0);\r\n      const text = `${remainingUses}/${uses.max}`;\r\n      const title = `${text}${perPeriod}`;\r\n      return { text, title };\r\n    }\r\n\r\n    /**\r\n     * Get consume\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {string}\r\n     */\r\n    #getConsumeData(item) {\r\n      // Get consume target and type\r\n      const firstActivity = item?.system?.activities?.contents[0];\r\n      const firstTarget = firstActivity?.consumption?.targets?.[0];\r\n      const consumeId = firstTarget?.target;\r\n      const consumeType = firstTarget?.type;\r\n      const consumeAmount = firstTarget?.value;\r\n\r\n      if (!consumeId || !consumeType || consumeId === item.id) return {};\r\n\r\n      // Return resources\r\n      if (consumeType === \"attribute\") {\r\n        const parentId = consumeId.substr(0, consumeId.lastIndexOf(\".\"));\r\n        const target = foundry.utils.getProperty(this.actor.system, parentId);\r\n\r\n        if (target) {\r\n          const text = `${target.value ?? \"0\"}${target.max ? `/${target.max}` : \"\"}`;\r\n          return {\r\n            text,\r\n            title: `${text} ${target.label ?? \"\"}`\r\n          };\r\n        }\r\n      } else {\r\n        const target = this.actor.items?.get(consumeId);\r\n\r\n        // Return charges\r\n        if (target && consumeType === \"charges\") {\r\n          return this.#getUsesData(target);\r\n        }\r\n\r\n        // Return quantity\r\n        if (target?.system?.quantity) {\r\n          const text = `${consumeAmount > 1 ? `${consumeAmount} ${game.i18n.localize(\"DND5E.of\")} ` : \"\"}${target.system.quantity}`;\r\n          return {\r\n            text,\r\n            title: `${text} ${target.name}`\r\n          };\r\n        }\r\n      }\r\n\r\n      return {};\r\n    }\r\n\r\n    /**\r\n     * Discard slow items\r\n     * @private\r\n     * @param {Map} items The items\r\n     * @returns {Map}     The filtered items\r\n     */\r\n    #discardSlowItems(items) {\r\n      // Return all items if slow actions are allowed\r\n      if (Utils.getSetting(\"showSlowActions\")) return items;\r\n\r\n      // Define slow activation types\r\n      const slowActivationTypes = new Set([\"minute\", \"hour\", \"day\"]);\r\n\r\n      // Filter out slow items and return the result\r\n      return new Map([...items.entries()].filter(([_, item]) => {\r\n        const activationType = item.system?.activation?.type;\r\n        return !slowActivationTypes.has(activationType);\r\n      }));\r\n    }\r\n\r\n    /**\r\n     * Get proficiency icon\r\n     * @param {string} level\r\n     * @returns {string}\r\n     */\r\n    #getProficiencyIcon(level) {\r\n      const title = CONFIG.DND5E.proficiencyLevels[level] ?? \"\";\r\n      const icon = PROFICIENCY_LEVEL_ICON[level];\r\n      return (icon) ? `<i class=\"${icon}\" title=\"${title}\"></i>` : \"\";\r\n    }\r\n\r\n    /**\r\n     * Get icon for the activation type\r\n     * @private\r\n     * @param {object} activationType The activation type\r\n     * @returns {string}              The icon\r\n     */\r\n    #getActivationTypeIcon(activationType) {\r\n      const title = CONFIG.DND5E.abilityActivationTypes[activationType] ?? \"\";\r\n      const icon = ACTIVATION_TYPE[activationType]?.icon;\r\n      return (icon) ? `<i class=\"${icon}\" title=\"${title}\"></i>` : \"\";\r\n    }\r\n\r\n    /**\r\n     * Get icon for concentration type\r\n     * @private\r\n     * @param {object} spell\r\n     * @returns {string}\r\n     */\r\n    #getConcentrationIcon(spell) {\r\n      if (spell?.type !== \"spell\" || !this.displaySpellInfo || !spell.system?.properties?.has(\"concentration\")) return null;\r\n      const title = game.i18n.localize(\"DND5E.Scroll.RequiresConcentration\");\r\n      const icon = CONCENTRATION_ICON;\r\n      return `<dnd5e-icon src=\"${icon}\" title=\"${title}\">`;\r\n    }\r\n\r\n    /**\r\n     * Get icon for a prepared spell\r\n     * @private\r\n     * @param {object} spell\r\n     * @returns\r\n     */\r\n    #getPreparedIcon(spell) {\r\n      if (spell?.type !== \"spell\" || !this.showUnpreparedSpells) return null;\r\n      const level = spell.system.level;\r\n      const preparationMode = spell.system.preparation.mode;\r\n      const prepared = spell.system.preparation.prepared;\r\n      const icon = prepared ? PREPARED_ICON : `${PREPARED_ICON} tah-icon-disabled`;\r\n      const title = preparationMode === \"always\" ? game.i18n.localize(\"DND5E.SpellPrepAlways\") : prepared ? game.i18n.localize(\"DND5E.SpellPrepared\") : game.i18n.localize(\"DND5E.SpellUnprepared\");\r\n\r\n      // Return icon if the preparation mode is 'prepared' or 'always' and the spell is not a cantrip\r\n      return ((preparationMode === \"prepared\" || preparationMode === \"always\") && level !== 0) ? `<i class=\"${icon}\" title=\"${title}\"></i>` : null;\r\n    }\r\n\r\n    async #getTooltipData(entity) {\r\n      if (this.tooltipsSetting === \"none\") return \"\";\r\n\r\n      const name = entity?.name ?? \"\";\r\n\r\n      if (this.tooltipsSetting === \"nameOnly\") return name;\r\n\r\n      const unidentified = entity.system?.identified === false;\r\n      const description = (typeof entity?.system?.description === \"string\") ? entity?.system?.description : (unidentified ? entity?.system?.unidentified?.description : entity?.system?.description?.value) ?? \"\";\r\n      let modifiers; let properties; let rarity; let traits;\r\n      if (!unidentified) {\r\n        modifiers = entity?.modifiers ?? null;\r\n        properties = [\r\n          ...entity.system?.chatProperties ?? [],\r\n          ...entity.system?.equippableItemCardProperties ?? [],\r\n          entity.system?.parent?.labels?.activation,\r\n          entity.system?.parent?.labels?.target,\r\n          entity.system?.parent?.labels?.range,\r\n          entity.system?.parent?.labels?.duration\r\n        ].filter(p => p);\r\n        rarity = unidentified ? null : entity?.rarity ?? null;\r\n        traits = (entity?.type === \"weapon\") ? this.#getWeaponProperties(entity?.system?.properties) : null;\r\n      }\r\n      return { name, description, modifiers, properties, rarity, traits };\r\n    }\r\n\r\n    /**\r\n     * Get condition tooltip data\r\n     * @param {*} id     The condition id\r\n     * @param {*} name   The condition name\r\n     * @returns {object} The tooltip data\r\n     */\r\n    async #getConditionTooltipData(id, name) {\r\n      if (this.tooltipsSetting === \"none\") return \"\";\r\n\r\n      const condition = CONFIG.DND5E.conditionTypes[id];\r\n\r\n      if (this.tooltipsSetting === \"nameOnly\" || !condition) return name;\r\n\r\n      const journalEntry = (condition.reference) ? await fromUuid(condition.reference) : null;\r\n      const description = journalEntry?.text?.content ?? \"\";\r\n      const relativeTo = journalEntry;\r\n      return {\r\n        name,\r\n        description,\r\n        relativeTo\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Get tooltip\r\n     * @param {object} tooltipData The tooltip data\r\n     * @returns {string}           The tooltip\r\n     */\r\n    async #getTooltip(tooltipData) {\r\n      if (this.tooltipsSetting === \"none\") return \"\";\r\n      if (typeof tooltipData === \"string\") return tooltipData;\r\n\r\n      const name = game.i18n.localize(tooltipData.name);\r\n\r\n      if (this.tooltipsSetting === \"nameOnly\") return name;\r\n\r\n      const nameHtml = `<h3>${name}</h3>`;\r\n\r\n      const relativeTo = tooltipData.relativeTo ?? this.actor;\r\n\r\n      const description = tooltipData?.descriptionLocalised\r\n                ?? await TextEditor.enrichHTML(game.i18n.localize(tooltipData?.description ?? \"\"), { async: true, relativeTo, secrets: true });\r\n\r\n      const rarityHtml = tooltipData?.rarity\r\n        ? `<span class=\"tah-tag ${tooltipData.rarity}\">${game.i18n.localize(RARITY[tooltipData.rarity])}</span>`\r\n        : \"\";\r\n\r\n      const propertiesHtml = tooltipData?.properties\r\n        ? `<div class=\"tah-properties\">${tooltipData.properties.map(property => `<span class=\"tah-property\">${game.i18n.localize(property)}</span>`).join(\"\")}</div>`\r\n        : \"\";\r\n\r\n      const traitsHtml = tooltipData?.traits\r\n        ? tooltipData.traits.map(trait => `<span class=\"tah-tag\">${game.i18n.localize(trait.label ?? trait)}</span>`).join(\"\")\r\n        : \"\";\r\n\r\n      const traits2Html = tooltipData?.traits2\r\n        ? tooltipData.traits2.map(trait => `<span class=\"tah-tag tah-tag-secondary\">${game.i18n.localize(trait.label ?? trait)}</span>`).join(\"\")\r\n        : \"\";\r\n\r\n      const traitsAltHtml = tooltipData?.traitsAlt\r\n        ? tooltipData.traitsAlt.map(trait => `<span class=\"tah-tag tah-tag-alt\">${game.i18n.localize(trait.label)}</span>`).join(\"\")\r\n        : \"\";\r\n\r\n      const modifiersHtml = tooltipData?.modifiers\r\n        ? `<div class=\"tah-tags\">${tooltipData.modifiers.filter(modifier => modifier.enabled).map(modifier => {\r\n          const label = game.i18n.localize(modifier.label);\r\n          const sign = modifier.modifier >= 0 ? \"+\" : \"\";\r\n          const mod = `${sign}${modifier.modifier ?? \"\"}`;\r\n          return `<span class=\"tah-tag tah-tag-transparent\">${label} ${mod}</span>`;\r\n        }).join(\"\")}</div>`\r\n        : \"\";\r\n\r\n      const tagsJoined = [rarityHtml, traitsHtml, traits2Html, traitsAltHtml].join(\"\");\r\n\r\n      const tagsHtml = (tagsJoined) ? `<div class=\"tah-tags\">${tagsJoined}</div>` : \"\";\r\n\r\n      const headerTags = (tagsHtml || modifiersHtml) ? `<div class=\"tah-tags-wrapper\">${tagsHtml}${modifiersHtml}</div>` : \"\";\r\n\r\n      if (!description && !tagsHtml && !modifiersHtml) return name;\r\n\r\n      return `<div>${nameHtml}${headerTags}${description}${propertiesHtml}</div>`;\r\n    }\r\n\r\n    #getWeaponProperties(weaponProperties) {\r\n      if (!weaponProperties) return null;\r\n      return Object.entries(weaponProperties)\r\n        .filter(([id, selected]) => selected && CONFIG.DND5E.validProperties.weapon.has(id))\r\n        .map(([id, _]) => game.i18n.localize(CONFIG.DND5E.itemProperties[id]));\r\n    }\r\n  };\r\n});\r\n","export let MagicItemActionHandlerExtender = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  MagicItemActionHandlerExtender = class MagicItemActionHandlerExtender extends coreModule.api.ActionHandlerExtender {\r\n    constructor(actionHandler) {\r\n      super();\r\n      this.actionHandler = actionHandler;\r\n      this.actor = null;\r\n    }\r\n\r\n    /**\r\n     * Extend the action list\r\n     */\r\n    async extendActionHandler() {\r\n      this.actor = this.actionHandler.actor;\r\n      if (!this.actor) return;\r\n\r\n      const actor = await MagicItems.actor(this.actor.id);\r\n\r\n      if (!actor) return;\r\n\r\n      const magicItems = actor.items ?? [];\r\n\r\n      if (magicItems.length === 0) return;\r\n\r\n      const parentGroupId = \"magic-items\";\r\n      const parentGroupType = \"system\";\r\n      const parentGroupData = {\r\n        id: parentGroupId,\r\n        type: parentGroupType\r\n      };\r\n\r\n      magicItems.forEach(magicItem => {\r\n        if (magicItem.attuned && !this._isItemAttuned(magicItem)) return;\r\n        if (magicItem.equipped && !this._isItemEquipped(magicItem)) return;\r\n\r\n        const groupId = `magic-items_${magicItem.id}`;\r\n        const groupName = magicItem.name;\r\n        const groupType = \"system-derived\";\r\n        const groupInfo1 = `${magicItem.uses}/${magicItem.charges}`;\r\n        const groupData = {\r\n          id: groupId,\r\n          name: groupName,\r\n          type: groupType,\r\n          info1: groupInfo1\r\n        };\r\n\r\n        // Add group to HUD\r\n        this.actionHandler.addGroup(groupData, parentGroupData);\r\n\r\n        const actions = magicItem.ownedEntries.map(entry => {\r\n          const effect = entry.item;\r\n          const id = effect.id;\r\n          const name = effect.name;\r\n          const encodedValue = [\r\n            \"magicItem\",\r\n            `${magicItem.id}>${id}`\r\n          ].join(\"|\");\r\n          const img = coreModule.api.Utils.getImage(effect);\r\n          const info1 = effect.consumption;\r\n          const info2 = (effect.baseLevel) ? `${coreModule.api.Utils.i18n(\"DND5E.AbbreviationLevel\")} ${effect.baseLevel}` : \"\";\r\n          return {\r\n            id,\r\n            name,\r\n            encodedValue,\r\n            img,\r\n            info1,\r\n            info2,\r\n            selected: true\r\n          };\r\n        });\r\n\r\n        // Add actions to action list\r\n        this.actionHandler.addActions(actions, groupData);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Whether the magic item is equipped or not\r\n     * @param {object} magicItem The item\r\n     * @returns {boolean}\r\n     */\r\n    _isItemEquipped(magicItem) {\r\n      return magicItem.item.system.equipped;\r\n    }\r\n\r\n    /**\r\n     * Whether the magic items is attuned or not\r\n     * @param {object} magicItem The item\r\n     * @returns {boolean}\r\n     */\r\n    _isItemAttuned(magicItem) {\r\n      const attunement = magicItem.item.system.attunment;\r\n      const attunementRequired = CONFIG.DND5E.attunementTypes?.REQUIRED ?? 1;\r\n\r\n      if (attunement === attunementRequired) return false;\r\n\r\n      return true;\r\n    }\r\n  };\r\n});\r\n","import { CUSTOM_DND5E } from \"./constants.js\";\r\n\r\nexport let RollHandler = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  RollHandler = class RollHandler extends coreModule.api.RollHandler {\r\n    /**\r\n     * Handle action click\r\n     * @override\r\n     * @param {object} event\r\n     * @param {string} encodedValue\r\n     */\r\n    async handleActionClick(event, encodedValue) {\r\n      const [actionType, actionId] = encodedValue.split(\"|\");\r\n\r\n      if (!this.actor) {\r\n        for (const token of coreModule.api.Utils.getControlledTokens()) {\r\n          const actor = token.actor;\r\n          await this.handleAction(event, actionType, actor, token, actionId);\r\n        }\r\n      } else {\r\n        await this.handleAction(event, actionType, this.actor, this.token, actionId);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Handle action\r\n     * @private\r\n     * @param {object} event\r\n     * @param {string} actionType\r\n     * @param {object} actor\r\n     * @param {object} token\r\n     * @param {string} actionId\r\n     */\r\n    async handleAction(event, actionType, actor, token, actionId) {\r\n      switch (actionType) {\r\n        case \"ability\":\r\n          this.rollAbility(event, actor, actionId); break;\r\n        case \"check\":\r\n          this.rollAbilityTest(event, actor, actionId); break;\r\n        case \"save\":\r\n          this.rollAbilitySave(event, actor, actionId); break;\r\n        case \"condition\":\r\n          if (!token) return;\r\n          await this.toggleCondition(event, actor, token, actionId); break;\r\n        case \"counter\":\r\n          await this.modifyCounter(event, actor, actionId); break;\r\n        case \"effect\":\r\n          await this.toggleEffect(event, actor, actionId); break;\r\n        case \"exhaustion\":\r\n          await this.modifyExhaustion(event, actor); break;\r\n        case \"feature\":\r\n        case \"item\":\r\n        case \"spell\":\r\n        case \"weapon\":\r\n          if (this.isRenderItem()) this.renderItem(actor, actionId);\r\n          else this.useItem(event, actor, actionId);\r\n          break;\r\n        case \"magicItem\":\r\n          await this.rollMagicItem(actor, actionId); break;\r\n        case \"skill\":\r\n          this.rollSkill(event, actor, actionId); break;\r\n        case \"utility\":\r\n          await this.performUtilityAction(event, actor, token, actionId); break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Modify Counter\r\n     * @private\r\n     * @param {object} event The event\r\n     * @param {object} actor The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async modifyCounter(event, actor, actionId) {\r\n      switch (actionId) {\r\n        case \"death-saves\":\r\n          this.rollDeathSave(event, actor); break;\r\n        case \"exhaustion\":\r\n          await this.modifyExhaustion(event, actor); break;\r\n        case \"inspiration\":\r\n          await this.modifyInspiration(actor); break;\r\n        default:\r\n          await this.modifyCustomCounter(event, actor, actionId); break;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Modify Exhaustion\r\n     * @private\r\n     * @param {object} event The event\r\n     * @param {object} actor The actor\r\n     */\r\n    async modifyExhaustion(event, actor) {\r\n      const isRightClick = this.isRightClick(event);\r\n      const currentExhaustion = actor.system.attributes.exhaustion;\r\n      const newExhaustion = currentExhaustion + (isRightClick ? -1 : 1);\r\n      if (newExhaustion >= 0 && newExhaustion !== currentExhaustion) {\r\n        actor.update({ \"system.attributes.exhaustion\": newExhaustion });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Modify Inspiration\r\n     * @private\r\n     * @param {object} actor The actor\r\n     */\r\n    async modifyInspiration(actor) {\r\n      const update = !actor.system.attributes.inspiration;\r\n      actor.update({ \"system.attributes.inspiration\": update });\r\n    }\r\n\r\n    /**\r\n     * Modify Custom Counter\r\n     * @private\r\n     * @param {object} event The event\r\n     * @param {object} actor The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async modifyCustomCounter(event, actor, actionId) {\r\n      const [id, type] = decodeURIComponent(actionId).split(\">\");\r\n      const isRightClick = this.isRightClick(event);\r\n      const isCtrl = this.isCtrl(event);\r\n\r\n      let value = actor.getFlag(CUSTOM_DND5E.ID, id) || {};\r\n\r\n      const setFlag = async (key, currentValue, newValue) => {\r\n        if (newValue !== currentValue) {\r\n          await actor.setFlag(CUSTOM_DND5E.ID, key, newValue);\r\n        }\r\n      };\r\n\r\n      const adjustValue = (key, currentValue = 0, increment = 1) => {\r\n        const newValue = isRightClick ? Math.max(0, currentValue - increment) : currentValue + increment;\r\n        setFlag(key, currentValue, newValue);\r\n      };\r\n\r\n      switch (type) {\r\n        case \"checkbox\":\r\n          await setFlag(id, !value);\r\n          break;\r\n\r\n        case \"fraction\":\r\n          if (isRightClick || (value.max && value.value < value.max) || !value.max) {\r\n            adjustValue(`${id}.value`, value.value);\r\n          }\r\n          break;\r\n\r\n        case \"number\":\r\n          adjustValue(id, value);\r\n          break;\r\n\r\n        case \"successFailure\":\r\n          value.success = value?.success ?? 0;\r\n          value.failure = value?.failure ?? 0;\r\n          if (isCtrl) {\r\n            adjustValue(`${id}.failure`, value.failure);\r\n          } else {\r\n            adjustValue(`${id}.success`, value.success);\r\n          }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Roll Ability\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollAbility(event, actor, actionId) {\r\n      if (!actor.system?.abilities) return;\r\n      actor.rollAbility(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Roll Ability Save\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollAbilitySave(event, actor, actionId) {\r\n      if (!actor.system?.abilities) return;\r\n      actor.rollAbilitySave(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Roll Ability Test\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollAbilityTest(event, actor, actionId) {\r\n      if (!actor.system?.abilities) return;\r\n      actor.rollAbilityTest(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Roll Death Save\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     */\r\n    rollDeathSave(event, actor) {\r\n      actor.rollDeathSave({ event });\r\n    }\r\n\r\n    /**\r\n     * Roll Magic Item\r\n     * @private\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async rollMagicItem(actor, actionId) {\r\n      const [itemId, magicEffectId] = actionId.split(\">\");\r\n\r\n      const magicItemActor = await MagicItems.actor(actor.id);\r\n      if (!magicItemActor) return;\r\n\r\n      // Magicitems module 3.0.0 does not support Item5e#use\r\n      magicItemActor.roll(itemId, magicEffectId);\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Roll Skill\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    rollSkill(event, actor, actionId) {\r\n      if (!actor.system?.skills) return;\r\n      actor.rollSkill(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Use Item\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    useItem(event, actor, actionId) {\r\n      const item = coreModule.api.Utils.getItem(actor, actionId);\r\n\r\n      if (this.#needsRecharge(item)) {\r\n        item.rollRecharge();\r\n      } else {\r\n        item.use({ event, legacy: false });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Needs Recharge\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {boolean}\r\n     */\r\n    #needsRecharge(item) {\r\n      return (item?.system?.uses?.period === \"recharge\" && !(item?.system?.uses?.value > 0));\r\n    }\r\n\r\n    /**\r\n     * Perform utility action\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {object} token    The token\r\n     * @param {string} actionId The action id\r\n     */\r\n    async performUtilityAction(event, actor, token, actionId) {\r\n      switch (actionId) {\r\n        case \"deathSave\":\r\n          this.rollDeathSave(event, actor); break;\r\n        case \"endTurn\":\r\n          if (!token || game.combat?.current?.tokenId !== token.id) break;\r\n          await game.combat?.nextTurn(); break;\r\n        case \"initiative\":\r\n          await this.rollInitiative(actor); break;\r\n        case \"inspiration\":\r\n          await this.modifyInspiration(actor); break;\r\n        case \"longRest\":\r\n          actor.longRest(); break;\r\n        case \"shortRest\":\r\n          actor.shortRest(); break;\r\n      }\r\n\r\n      // Update HUD\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Roll Initiative\r\n     * @param {object} actor The actor\r\n     * @private\r\n     */\r\n    async rollInitiative(actor) {\r\n      if (!actor) return;\r\n      await actor.rollInitiative({ createCombatants: true });\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Toggle Condition\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {object} token    The token\r\n     * @param {string} actionId The action id\r\n     */\r\n    async toggleCondition(event, actor, token, actionId) {\r\n      if (!token) return;\r\n\r\n      const isRightClick = this.isRightClick(event);\r\n      const statusEffect = CONFIG.statusEffects.find(statusEffect => statusEffect.id === actionId);\r\n      const isConvenient = statusEffect?.flags?.[\"dfreds-convenient-effects\"]?.isConvenient\r\n        ?? actionId.startsWith(\"Convenient Effect\");\r\n\r\n      if (game.dfreds && isConvenient) {\r\n        const effectName = statusEffect.name ?? statusEffect.label;\r\n        await game.dfreds.effectInterface.toggleEffect(effectName, { overlay: !!isRightClick });\r\n      } else {\r\n        const condition = this.#findCondition(actionId);\r\n        if (!condition) return;\r\n\r\n        const effect = this.#findEffect(actor, actionId);\r\n        if (effect?.disabled) { await effect.delete(); }\r\n\r\n        await actor.toggleStatusEffect(condition.id, { overlay: !!isRightClick });\r\n      }\r\n\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Find condition\r\n     * @private\r\n     * @param {string} actionId The action id\r\n     * @returns {object}        The condition\r\n     */\r\n    #findCondition(actionId) {\r\n      return CONFIG.statusEffects.find(effect => effect.id === actionId);\r\n    }\r\n\r\n    /**\r\n     * Find effect\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     * @returns {object}        The effect\r\n     */\r\n    #findEffect(actor, actionId) {\r\n      return actor.effects.find(effect => effect.statuses.every(status => status === actionId));\r\n    }\r\n\r\n    /**\r\n     * Toggle Effect\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async toggleEffect(event, actor, actionId) {\r\n      const effects = actor.effects.entries ? actor.effects.entries : actor.effects;\r\n      const actorEffect = effects.find(effect => effect.id === actionId);\r\n\r\n      const effect = actorEffect ?? actor.allApplicableEffects().find(effect => effect.id === actionId);\r\n      if (!effect) return;\r\n\r\n      const isRightClick = this.isRightClick(event);\r\n\r\n      if (isRightClick && actorEffect) {\r\n        await effect.delete();\r\n      } else {\r\n        await effect.update({ disabled: !effect.disabled });\r\n      }\r\n\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Handle action hover\r\n     * @override\r\n     * @param {object} event\r\n     * @param {string} encodedValue\r\n     */\r\n    async handleActionHover(event, encodedValue) {\r\n      const types = [\"feature\", \"item\", \"spell\", \"weapon\", \"magicItem\"];\r\n      const [actionType, actionId] = encodedValue.split(\"|\");\r\n\r\n      if (!types.includes(actionType)) return;\r\n\r\n      const item = coreModule.api.Utils.getItem(this.actor, actionId);\r\n\r\n      switch (event.type) {\r\n        case \"mouseenter\":\r\n        case \"mouseover\":\r\n          Hooks.call(\"tokenActionHudSystemActionHoverOn\", event, item);\r\n          break;\r\n        case \"mouseleave\":\r\n        case \"mouseout\":\r\n          Hooks.call(\"tokenActionHudSystemActionHoverOff\", event, item);\r\n          break;\r\n      }\r\n    }\r\n  };\r\n});\r\n","import { MODULE } from \"./constants.js\";\r\n\r\n/**\r\n *\r\n * @param updateFunc\r\n */\r\nexport function register(updateFunc) {\r\n  game.settings.register(MODULE.ID, \"abbreviateSkills\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.abbreviateSkills.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.abbreviateSkills.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showSlowActions\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showSlowActions.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showSlowActions.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"displaySpellInfo\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.displaySpellInfo.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.displaySpellInfo.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnchargedItems\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnchargedItems.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnchargedItems.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnequippedItems\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItems.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItems.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnequippedItemsNpcs\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItemsNpcs.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItemsNpcs.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnpreparedSpells\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnpreparedSpells.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnpreparedSpells.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showItemsWithoutActivationCosts\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showItemsWithoutActivationCosts.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showItemsWithoutActivationCosts.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n}\r\n","// System Module Imports\r\nimport { ActionHandler } from \"./action-handler.js\";\r\nimport { MagicItemActionHandlerExtender } from \"./magic-items-extender.js\";\r\nimport { RollHandler as Core } from \"./roll-handler.js\";\r\nimport { DEFAULTS } from \"./defaults.js\";\r\nimport * as systemSettings from \"./settings.js\";\r\n\r\nexport let SystemManager = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  SystemManager = class SystemManager extends coreModule.api.SystemManager {\r\n    /** @override */\r\n    getActionHandler() {\r\n      const actionHandler = new ActionHandler();\r\n      if (coreModule.api.Utils.isModuleActive(\"magic-items-2\")\r\n        || coreModule.api.Utils.isModuleActive(\"magicitems\")) {\r\n        actionHandler.addActionHandlerExtender(new MagicItemActionHandlerExtender(actionHandler));\r\n      }\r\n      return actionHandler;\r\n    }\r\n\r\n    /** @override */\r\n    getAvailableRollHandlers() {\r\n      let coreTitle = \"Core D&D5e\";\r\n\r\n      if (coreModule.api.Utils.isModuleActive(\"midi-qol\")) {\r\n        coreTitle += ` [supports ${coreModule.api.Utils.getModuleTitle(\"midi-qol\")}]`;\r\n      }\r\n\r\n      const choices = { core: coreTitle };\r\n      return choices;\r\n    }\r\n\r\n    /** @override */\r\n    getRollHandler(rollHandlerId) {\r\n      let rollHandler;\r\n      switch (rollHandlerId) {\r\n        case \"core\":\r\n        default:\r\n          rollHandler = new Core();\r\n          break;\r\n      }\r\n\r\n      return rollHandler;\r\n    }\r\n\r\n    /** @override */\r\n    registerSettings(onChangeFunction) {\r\n      systemSettings.register(onChangeFunction);\r\n    }\r\n\r\n    /** @override */\r\n    async registerDefaults() {\r\n      const defaults = DEFAULTS;\r\n      // If the 'Magic Items' module is active, then add a group for it\r\n      if (game.modules.get(\"magicitems\")?.active || game.modules.get(\"magic-items-2\")?.active) {\r\n        const name = coreModule.api.Utils.i18n(\"tokenActionHud.dnd5e.magicItems\");\r\n        defaults.groups.push(\r\n          {\r\n            id: \"magic-items\",\r\n            name,\r\n            listName: `Group: ${name}`,\r\n            type: \"system\"\r\n          }\r\n        );\r\n        defaults.groups.sort((a, b) => a.id.localeCompare(b.id));\r\n      }\r\n      return defaults;\r\n    }\r\n  };\r\n});\r\n","import { SystemManager } from \"./system-manager.js\";\r\nimport { MODULE, REQUIRED_CORE_MODULE_VERSION } from \"./constants.js\";\r\n\r\nHooks.on(\"tokenActionHudCoreApiReady\", async () => {\r\n  const module = game.modules.get(MODULE.ID);\r\n  module.api = {\r\n    requiredCoreModuleVersion: REQUIRED_CORE_MODULE_VERSION,\r\n    SystemManager\r\n  };\r\n  Hooks.call(\"tokenActionHudSystemReady\", module);\r\n});\r\n"],"names":["MODULE","ID","CORE_MODULE","REQUIRED_CORE_MODULE_VERSION","ACTION_TYPE","ability","check","condition","counter","effect","exhaustion","feature","item","save","skill","spell","utility","ACTIVATION_TYPE","action","group","bonus","icon","crew","day","hour","lair","minute","legendary","reaction","reactiondamage","reactionmanual","special","other","CONCENTRATION_ICON","CUSTOM_DND5E","COUNTERS","character","npc","FEATURE_GROUP_IDS","GROUP","_1stLevelSpells","id","name","spellMode","type","_2ndLevelSpells","_3rdLevelSpells","_4thLevelSpells","_5thLevelSpells","_6thLevelSpells","_7thLevelSpells","_8thLevelSpells","_9thLevelSpells","abilities","actions","activeFeatures","artificerInfusions","atWillSpells","backgroundFeatures","bonusActions","cantrips","channelDivinity","checks","classFeatures","combat","conditions","consumables","containers","counters","crewActions","defensiveTactics","eldritchInvocations","elementalDisciplines","equipment","equipped","feats","fightingStyles","huntersPrey","innateSpells","kiAbilities","lairActions","legendaryActions","loot","maneuvers","metamagicOptions","monsterFeatures","multiattacks","otherActions","pactBoons","pactSpells","passiveEffects","passiveFeatures","psionicPowers","raceFeatures","reactions","rests","runes","saves","skills","superiorHuntersDefense","temporaryEffects","token","tools","unequipped","weapons","PREPARED_ICON","PROFICIENCY_LEVEL_ICON","RARITY","common","uncommon","rare","veryRare","artifact","RITUAL_ICON","SPELL_GROUP_IDS","DEFAULTS","Hooks","once","async","groups","Object","values","forEach","coreModule","api","Utils","i18n","listName","groupsArray","layout","nestId","capitalize","value","replace","text","charAt","toUpperCase","substring","toLowerCase","getSetting","key","defaultValue","game","settings","get","Logger","debug","setSetting","set","ActionHandler","featureActions","inventoryActions","spellActions","buildSystemActions","groupIds","this","actors","actor","getValidActors","tokens","getValidTokens","items","sortItemsByName","discardSlowItems","abbreviateSkills","displaySpellInfo","showItemsWithoutActivationCosts","showUnchargedItems","showUnequippedItems","showUnpreparedSpells","activationgroupIds","inventorygroupIds","buildCharacterActions","buildVehicleActions","buildMultipleTokenActions","Promise","all","buildConditions","buildEffects","buildFeatures","buildInventory","buildSpells","buildAbilities","buildCombat","buildCounters","buildExhaustion","buildRests","buildSkills","buildUtility","actionType","groupId","system","CONFIG","DND5E","length","entries","filter","map","abilityId","label","mod","encodedValue","join","delimiter","icon1","getProficiencyIcon","proficient","info1","getModifier","title","localize","info2","getListName","addActions","buildActivations","data","groupData","actionData","activationItems","Map","activationType","activities","contents","activation","has","groupDataClone","includes","defaultSelected","parentgroupData","addGroup","addGroupInfo","buildActions","combatType","initiative","current","tokenId","endTurn","getControlledTokens","tokenIds","combatants","combatant","getInfo1","class","cssClass","every","statusEffects","hasCondition","effects","some","statuses","status","disabled","img","getImage","tooltip","getTooltip","getConditionTooltipData","isModuleActive","keys","_","visible","active","attributes","death","success","failure","getFlag","max","encodeURIComponent","allApplicableEffects","size","conditionIds","Set","conditionTypes","dnd5e","utils","staticID","effectId","isSuppressed","parent","identified","user","isGM","isTemporary","featuresMap","featureType","background","monster","race","classFeatureType","artificerInfusion","defensiveTactic","eldritchInvocation","elementalDiscipline","fightingStyle","ki","maneuver","metamagic","multiattack","pact","psionicPower","rune","subType","subtype","inventoryMap","quantity","isActiveItem","isUsableItem","isEquippedItem","shortRest","longRest","total","error","spells","spellsMap","isUsableSpell","preparation","mode","level","systemSpells","reverse","spellSlotsMap","spellSlotAvailable","pactSlotAvailable","pactSlot","hasValue","hasMax","hasLevel","slotAvailable","startsWith","slotsAvailable","f","spellSlotModes","levelInfo","slots","info","utilityTypes","deathSave","inspiration","hp","utilityType","options","getAction","entity","_id","hasOwn","getItemInfo","getTooltipData","getActivationTypeIcon","icon2","getPreparedIcon","icon3","getConcentrationIcon","info3","activationTypes","activityActivationTypes","uses","preparationModes","spellPreparationModes","preparationMode","prepared","actionName","getSpellInfo","getQuantityData","getUsesData","getConsumeData","components","properties","componentsArray","vocal","somatic","material","ritual","push","allowedTypes","per","recovery","period","limitedUsePeriods","perPeriod","spent","firstActivity","firstTarget","consumption","targets","consumeId","target","consumeType","consumeAmount","parentId","substr","lastIndexOf","foundry","getProperty","slowActivationTypes","proficiencyLevels","abilityActivationTypes","tooltipsSetting","unidentified","description","modifiers","rarity","traits","chatProperties","equippableItemCardProperties","labels","range","duration","p","getWeaponProperties","journalEntry","fromUuid","reference","content","relativeTo","tooltipData","nameHtml","descriptionLocalised","TextEditor","enrichHTML","secrets","rarityHtml","propertiesHtml","property","traitsHtml","trait","traits2Html","traits2","traitsAltHtml","traitsAlt","modifiersHtml","modifier","enabled","tagsJoined","tagsHtml","weaponProperties","selected","validProperties","weapon","itemProperties","MagicItemActionHandlerExtender","ActionHandlerExtender","constructor","actionHandler","super","extendActionHandler","MagicItems","magicItems","parentGroupData","magicItem","attuned","_isItemAttuned","_isItemEquipped","charges","ownedEntries","entry","baseLevel","attunment","attunementTypes","REQUIRED","RollHandler","register","updateFunc","hint","scope","config","Boolean","default","onChange","handleActionClick","event","actionId","split","handleAction","rollAbility","rollAbilityTest","rollAbilitySave","toggleCondition","modifyCounter","toggleEffect","modifyExhaustion","isRenderItem","renderItem","useItem","rollMagicItem","rollSkill","performUtilityAction","rollDeathSave","modifyInspiration","modifyCustomCounter","isRightClick","currentExhaustion","newExhaustion","update","decodeURIComponent","isCtrl","setFlag","currentValue","newValue","adjustValue","increment","Math","itemId","magicEffectId","magicItemActor","roll","callAll","getItem","needsRecharge","rollRecharge","use","legacy","nextTurn","rollInitiative","createCombatants","statusEffect","find","isConvenient","flags","dfreds","effectName","effectInterface","overlay","findCondition","findEffect","delete","toggleStatusEffect","actorEffect","handleActionHover","call","SystemManager","getActionHandler","addActionHandlerExtender","getAvailableRollHandlers","coreTitle","getModuleTitle","core","getRollHandler","rollHandlerId","rollHandler","Core","registerSettings","onChangeFunction","systemSettings.register","registerDefaults","defaults","modules","sort","a","b","localeCompare","on","module","requiredCoreModuleVersion"],"mappings":"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"}