{"version":3,"file":"token-action-hud-dnd5e.min.js","sources":["constants.js","defaults.js","utils.js","action-handler.js","magic-items-extender.js","roll-handler.js","roll-handler-obsidian.js","settings.js","system-manager.js","init.js"],"sourcesContent":["/**\r\n * Module-based constants\r\n */\r\nexport const MODULE = {\r\n  ID: \"token-action-hud-dnd5e\"\r\n};\r\n\r\n/**\r\n * Core module\r\n */\r\nexport const CORE_MODULE = {\r\n  ID: \"token-action-hud-core\"\r\n};\r\n\r\n/**\r\n * Core module version required by the system module\r\n */\r\nexport const REQUIRED_CORE_MODULE_VERSION = \"1.5\";\r\n\r\n/**\r\n * Action type\r\n */\r\nexport const ACTION_TYPE = {\r\n  ability: \"DND5E.Ability\",\r\n  check: \"tokenActionHud.dnd5e.check\",\r\n  condition: \"tokenActionHud.dnd5e.condition\",\r\n  counter: \"tokenActionHud.dnd5e.counter\",\r\n  effect: \"DND5E.Effect\",\r\n  exhaustion: \"DND5E.Exhaustion\",\r\n  feature: \"TYPES.Item.feat\",\r\n  item: \"tokenActionHud.dnd5e.item\",\r\n  save: \"DND5E.SAVE.Title.one\",\r\n  skill: \"tokenActionHud.dnd5e.skill\",\r\n  spell: \"TYPES.Item.spell\",\r\n  utility: \"DND5E.ActionUtil\"\r\n};\r\n\r\n/**\r\n * Activation types\r\n */\r\nexport const ACTIVATION_TYPE = {\r\n  action: { group: \"actions\" },\r\n  bonus: { group: \"bonus-actions\", icon: \"fas fa-plus\" },\r\n  crew: { group: \"crew-actions\", icon: \"fas fa-users\" },\r\n  day: { icon: \"fas fa-hourglass-end\" },\r\n  hour: { icon: \"fas fa-hourglass-half\" },\r\n  lair: { group: \"lair-actions\", icon: \"fas fa-home\" },\r\n  minute: { icon: \"fas fa-hourglass-start\" },\r\n  legendary: { group: \"legendary-actions\", icon: \"fas fas fa-dragon\" },\r\n  reaction: { group: \"reactions\", icon: \"fas fa-bolt\" },\r\n  reactiondamage: { group: \"reactions\", icon: \"fas fa-bolt\" },\r\n  reactionmanual: { group: \"reactions\", icon: \"fas fa-bolt\" },\r\n  special: { group: \"special-actions\", icon: \"fas fa-star\" },\r\n  other: { group: \"other-actions\" }\r\n};\r\n\r\n/**\r\n * Concentration icon\r\n */\r\nexport const CONCENTRATION_ICON = \"systems/dnd5e/icons/svg/statuses/concentrating.svg\";\r\n\r\nexport const CUSTOM_DND5E = {\r\n  ID: \"custom-dnd5e\",\r\n  COUNTERS: {\r\n    character: \"character-counters\",\r\n    group: \"group-counters\",\r\n    npc: \"npc-counters\"\r\n  }\r\n};\r\n\r\n/**\r\n * Feature Group IDs\r\n */\r\nexport const FEATURE_GROUP_IDS = [\r\n  \"active-features\",\r\n  \"passive-features\",\r\n  \"background-features\",\r\n  \"class-features\",\r\n  \"feats\",\r\n  \"monster-features\",\r\n  \"race-features\",\r\n  \"artificer-infusions\",\r\n  \"channel-divinity\",\r\n  \"defensive-tactics\",\r\n  \"eldritch-invocations\",\r\n  \"elemental-disciplines\",\r\n  \"fighting-styles\",\r\n  \"hunters-prey\",\r\n  \"ki-abilities\",\r\n  \"maneuvers\",\r\n  \"metamagic-options\",\r\n  \"multiattacks\",\r\n  \"pact-boons\",\r\n  \"psionic-powers\",\r\n  \"runes\",\r\n  \"superior-hunters-defense\"\r\n];\r\n\r\n/**\r\n * Groups\r\n */\r\nexport const GROUP = {\r\n  _1stLevelSpells: { id: \"1st-level-spells\", name: \"tokenActionHud.dnd5e.1stLevelSpells\", type: \"system\" },\r\n  _2ndLevelSpells: { id: \"2nd-level-spells\", name: \"tokenActionHud.dnd5e.2ndLevelSpells\", type: \"system\" },\r\n  _3rdLevelSpells: { id: \"3rd-level-spells\", name: \"tokenActionHud.dnd5e.3rdLevelSpells\", type: \"system\" },\r\n  _4thLevelSpells: { id: \"4th-level-spells\", name: \"tokenActionHud.dnd5e.4thLevelSpells\", type: \"system\" },\r\n  _5thLevelSpells: { id: \"5th-level-spells\", name: \"tokenActionHud.dnd5e.5thLevelSpells\", type: \"system\" },\r\n  _6thLevelSpells: { id: \"6th-level-spells\", name: \"tokenActionHud.dnd5e.6thLevelSpells\", type: \"system\" },\r\n  _7thLevelSpells: { id: \"7th-level-spells\", name: \"tokenActionHud.dnd5e.7thLevelSpells\", type: \"system\" },\r\n  _8thLevelSpells: { id: \"8th-level-spells\", name: \"tokenActionHud.dnd5e.8thLevelSpells\", type: \"system\" },\r\n  _9thLevelSpells: { id: \"9th-level-spells\", name: \"tokenActionHud.dnd5e.9thLevelSpells\", type: \"system\" },\r\n  abilities: { id: \"abilities\", name: \"tokenActionHud.dnd5e.abilities\", type: \"system\" },\r\n  actions: { id: \"actions\", name: \"DND5E.ActionPl\", type: \"system\" },\r\n  activeFeatures: { id: \"active-features\", name: \"tokenActionHud.dnd5e.activeFeatures\", type: \"system\" },\r\n  artificerInfusions: { id: \"artificer-infusions\", name: \"tokenActionHud.dnd5e.artificerInfusions\", type: \"system\" },\r\n  atWillSpells: { id: \"at-will-spells\", name: \"tokenActionHud.dnd5e.atWillSpells\", type: \"system\" },\r\n  backgroundFeatures: { id: \"background-features\", name: \"tokenActionHud.dnd5e.backgroundFeatures\", type: \"system\" },\r\n  bonusActions: { id: \"bonus-actions\", name: \"tokenActionHud.dnd5e.bonusActions\", type: \"system\" },\r\n  cantrips: { id: \"cantrips\", name: \"tokenActionHud.dnd5e.cantrips\", type: \"system\" },\r\n  channelDivinity: { id: \"channel-divinity\", name: \"tokenActionHud.dnd5e.channelDivinity\", type: \"system\" },\r\n  checks: { id: \"checks\", name: \"tokenActionHud.dnd5e.checks\", type: \"system\" },\r\n  classFeatures: { id: \"class-features\", name: \"tokenActionHud.dnd5e.classFeatures\", type: \"system\" },\r\n  combat: { id: \"combat\", name: \"tokenActionHud.combat\", type: \"system\" },\r\n  conditions: { id: \"conditions\", name: \"tokenActionHud.dnd5e.conditions\", type: \"system\" },\r\n  consumables: { id: \"consumables\", name: \"TYPES.Item.consumablePl\", type: \"system\" },\r\n  containers: { id: \"containers\", name: \"TYPES.Item.containerPl\", type: \"system\" },\r\n  counters: { id: \"counters\", name: \"tokenActionHud.dnd5e.counters\", type: \"system\" },\r\n  crewActions: { id: \"crew-actions\", name: \"tokenActionHud.dnd5e.crewActions\", type: \"system\" },\r\n  defensiveTactics: { id: \"defensive-tactics\", name: \"tokenActionHud.dnd5e.defensiveTactics\", type: \"system\" },\r\n  eldritchInvocations: { id: \"eldritch-invocations\", name: \"tokenActionHud.dnd5e.eldritchInvocations\", type: \"system\" },\r\n  elementalDisciplines: { id: \"elemental-disciplines\", name: \"tokenActionHud.dnd5e.elementalDisciplines\", type: \"system\" },\r\n  equipment: { id: \"equipment\", name: \"TYPES.Item.equipmentPl\", type: \"system\" },\r\n  equipped: { id: \"equipped\", name: \"DND5E.Equipped\", type: \"system\" },\r\n  exhaustion: { id: \"exhaustion\", name: \"DND5E.Exhaustion\", type: \"system\" },\r\n  feats: { id: \"feats\", name: \"tokenActionHud.dnd5e.feats\", type: \"system\" },\r\n  fightingStyles: { id: \"fighting-styles\", name: \"tokenActionHud.dnd5e.fightingStyles\", type: \"system\" },\r\n  huntersPrey: { id: \"hunters-prey\", name: \"tokenActionHud.dnd5e.huntersPrey\", type: \"system\" },\r\n  innateSpells: { id: \"innate-spells\", name: \"tokenActionHud.dnd5e.innateSpells\", type: \"system\" },\r\n  kiAbilities: { id: \"ki-abilities\", name: \"tokenActionHud.dnd5e.kiAbilities\", type: \"system\" },\r\n  lairActions: { id: \"lair-actions\", name: \"tokenActionHud.dnd5e.lairActions\", type: \"system\" },\r\n  legendaryActions: { id: \"legendary-actions\", name: \"tokenActionHud.dnd5e.legendaryActions\", type: \"system\" },\r\n  loot: { id: \"loot\", name: \"TYPES.Item.lootPl\", type: \"system\" },\r\n  maneuvers: { id: \"maneuvers\", name: \"tokenActionHud.dnd5e.maneuvers\", type: \"system\" },\r\n  metamagicOptions: { id: \"metamagic-options\", name: \"tokenActionHud.dnd5e.metamagicOptions\", type: \"system\" },\r\n  monsterFeatures: { id: \"monster-features\", name: \"tokenActionHud.dnd5e.monsterFeatures\", type: \"system\" },\r\n  multiattacks: { id: \"multiattacks\", name: \"tokenActionHud.dnd5e.multiattacks\", type: \"system\" },\r\n  otherActions: { id: \"other-actions\", name: \"tokenActionHud.dnd5e.otherActions\", type: \"system\" },\r\n  pactBoons: { id: \"pact-boons\", name: \"tokenActionHud.dnd5e.pactBoons\", type: \"system\" },\r\n  pactSpells: { id: \"pact-spells\", name: \"tokenActionHud.dnd5e.pactSpells\", type: \"system\" },\r\n  passiveEffects: { id: \"passive-effects\", name: \"DND5E.EffectPassive\", type: \"system\" },\r\n  passiveFeatures: { id: \"passive-features\", name: \"tokenActionHud.dnd5e.passiveFeatures\", type: \"system\" },\r\n  psionicPowers: { id: \"psionic-powers\", name: \"tokenActionHud.dnd5e.psionicPowers\", type: \"system\" },\r\n  raceFeatures: { id: \"race-features\", name: \"tokenActionHud.dnd5e.raceFeatures\", type: \"system\" },\r\n  reactions: { id: \"reactions\", name: \"DND5E.ReactionPl\", type: \"system\" },\r\n  rests: { id: \"rests\", name: \"tokenActionHud.dnd5e.rests\", type: \"system\" },\r\n  runes: { id: \"runes\", name: \"tokenActionHud.dnd5e.runes\", type: \"system\" },\r\n  saves: { id: \"saves\", name: \"DND5E.ClassSaves\", type: \"system\" },\r\n  skills: { id: \"skills\", name: \"tokenActionHud.dnd5e.skills\", type: \"system\" },\r\n  superiorHuntersDefense: { id: \"superior-hunters-defense\", name: \"tokenActionHud.dnd5e.superiorHuntersDefense\", type: \"system\" },\r\n  temporaryEffects: { id: \"temporary-effects\", name: \"DND5E.EffectTemporary\", type: \"system\" },\r\n  token: { id: \"token\", name: \"tokenActionHud.token\", type: \"system\" },\r\n  tools: { id: \"tools\", name: \"TYPES.Item.toolPl\", type: \"system\" },\r\n  unequipped: { id: \"unequipped\", name: \"DND5E.Unequipped\", type: \"system\" },\r\n  utility: { id: \"utility\", name: \"tokenActionHud.utility\", type: \"system\" },\r\n  weapons: { id: \"weapons\", name: \"TYPES.Item.weaponPl\", type: \"system\" }\r\n};\r\n\r\n/**\r\n * Prepared icon\r\n */\r\nexport const PREPARED_ICON = \"fas fa-sun\";\r\n\r\n/**\r\n * Proficiency level icons\r\n */\r\nexport const PROFICIENCY_LEVEL_ICON = {\r\n  0.5: \"fas fa-adjust\",\r\n  1: \"fas fa-check\",\r\n  2: \"fas fa-check-double\"\r\n};\r\n\r\n/**\r\n * Rarity\r\n */\r\nexport const RARITY = {\r\n  common: \"tokenActionHud.dnd5e.common\",\r\n  uncommon: \"tokenActionHud.dnd5e.uncommon\",\r\n  rare: \"tokenActionHud.dnd5e.rare\",\r\n  veryRare: \"tokenActionHud.dnd5e.veryRare\",\r\n  legendary: \"tokenActionHud.dnd5e.legendary\",\r\n  artifact: \"tokenActionHud.dnd5e.artifact\"\r\n};\r\n\r\n/**\r\n * Ritual icon\r\n */\r\nexport const RITUAL_ICON = \"fas fa-circle-r\";\r\n\r\n/**\r\n * Spell Group IDs\r\n */\r\nexport const SPELL_GROUP_IDS = [\r\n  \"cantrips\",\r\n  \"1st-level-spells\",\r\n  \"2nd-level-spells\",\r\n  \"3rd-level-spells\",\r\n  \"4th-level-spells\",\r\n  \"5th-level-spells\",\r\n  \"6th-level-spells\",\r\n  \"7th-level-spells\",\r\n  \"8th-level-spells\",\r\n  \"9th-level-spells\",\r\n  \"at-will-spells\",\r\n  \"innate-spells\",\r\n  \"pact-spells\"\r\n];\r\n","import { GROUP } from \"./constants.js\";\r\n\r\n/**\r\n * Default categories and groups\r\n */\r\nexport let DEFAULTS = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  const groups = GROUP;\r\n  Object.values(groups).forEach(group => {\r\n    group.name = coreModule.api.Utils.i18n(group.name);\r\n    group.listName = `Group: ${coreModule.api.Utils.i18n(group.name)}`;\r\n  });\r\n  const groupsArray = Object.values(groups);\r\n  DEFAULTS = {\r\n    layout: [\r\n      {\r\n        nestId: \"inventory\",\r\n        id: \"inventory\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Inventory\"),\r\n        groups: [\r\n          { ...groups.weapons, nestId: \"inventory_weapons\" },\r\n          { ...groups.equipment, nestId: \"inventory_equipment\" },\r\n          { ...groups.consumables, nestId: \"inventory_consumables\" },\r\n          { ...groups.tools, nestId: \"inventory_tools\" },\r\n          { ...groups.containers, nestId: \"inventory_containers\" },\r\n          { ...groups.loot, nestId: \"inventory_loot\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"features\",\r\n        id: \"features\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Features\"),\r\n        groups: [\r\n          { ...groups.activeFeatures, nestId: \"features_active-features\" },\r\n          { ...groups.passiveFeatures, nestId: \"features_passive-features\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"spells\",\r\n        id: \"spells\",\r\n        name: coreModule.api.Utils.i18n(\"TYPES.Item.spellPl\"),\r\n        groups: [\r\n          { ...groups.atWillSpells, nestId: \"spells_at-will-spells\" },\r\n          { ...groups.innateSpells, nestId: \"spells_innate-spells\" },\r\n          { ...groups.pactSpells, nestId: \"spells_pact-spells\" },\r\n          { ...groups.cantrips, nestId: \"spells_cantrips\" },\r\n          { ...groups._1stLevelSpells, nestId: \"spells_1st-level-spells\" },\r\n          { ...groups._2ndLevelSpells, nestId: \"spells_2nd-level-spells\" },\r\n          { ...groups._3rdLevelSpells, nestId: \"spells_3rd-level-spells\" },\r\n          { ...groups._4thLevelSpells, nestId: \"spells_4th-level-spells\" },\r\n          { ...groups._5thLevelSpells, nestId: \"spells_5th-level-spells\" },\r\n          { ...groups._6thLevelSpells, nestId: \"spells_6th-level-spells\" },\r\n          { ...groups._7thLevelSpells, nestId: \"spells_7th-level-spells\" },\r\n          { ...groups._8thLevelSpells, nestId: \"spells_8th-level-spells\" },\r\n          { ...groups._9thLevelSpells, nestId: \"spells_9th-level-spells\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"attributes\",\r\n        id: \"attributes\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Attributes\"),\r\n        groups: [\r\n          { ...groups.abilities, nestId: \"attributes_abilities\" },\r\n          { ...groups.skills, nestId: \"attributes_skills\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"effects\",\r\n        id: \"effects\",\r\n        name: coreModule.api.Utils.i18n(\"DND5E.Effects\"),\r\n        groups: [\r\n          { ...groups.temporaryEffects, nestId: \"effects_temporary-effects\" },\r\n          { ...groups.passiveEffects, nestId: \"effects_passive-effects\" },\r\n          { ...groups.conditions, nestId: \"effects_conditions\" }\r\n        ]\r\n      },\r\n      {\r\n        nestId: \"utility\",\r\n        id: \"utility\",\r\n        name: coreModule.api.Utils.i18n(\"tokenActionHud.utility\"),\r\n        groups: [\r\n          { ...groups.combat, nestId: \"utility_combat\" },\r\n          { ...groups.token, nestId: \"utility_token\" },\r\n          { ...groups.rests, nestId: \"utility_rests\" },\r\n          { ...groups.utility, nestId: \"utility_utility\" }\r\n        ]\r\n      }\r\n    ],\r\n    groups: groupsArray\r\n  };\r\n});\r\n","import { MODULE } from './constants.js'\r\n\r\nexport let Utils = null\r\n\r\nHooks.once('tokenActionHudCoreApiReady', async (coreModule) => {\r\n    Utils = class Utils {\r\n    /**\r\n     * Get setting value\r\n     * @param {string} key The key\r\n     * @param {string=null} defaultValue The default value\r\n     * @returns The setting value\r\n     */\r\n        static getSetting (key, defaultValue = null) {\r\n            let value = defaultValue ?? null\r\n            try {\r\n                value = game.settings.get(MODULE.ID, key)\r\n            } catch {\r\n                coreModule.api.Logger.debug(`Setting '${key}' not found`)\r\n            }\r\n            return value\r\n        }\r\n\r\n        /**\r\n     * Set setting value\r\n     * @param {string} key The key\r\n     * @param {string} value The value\r\n     */\r\n        static async setSetting (key, value) {\r\n            try {\r\n                value = await game.settings.set(MODULE.ID, key, value)\r\n                coreModule.api.Logger.debug(`Setting '${key}' set to '${value}'`)\r\n            } catch {\r\n                coreModule.api.Logger.debug(`Setting '${key}' not found`)\r\n            }\r\n        }\r\n    }\r\n})\r\n","// System Module Imports\r\nimport {\r\n  ACTIVATION_TYPE, ACTION_TYPE, CONCENTRATION_ICON, CUSTOM_DND5E, FEATURE_GROUP_IDS,\r\n  PREPARED_ICON, PROFICIENCY_LEVEL_ICON, RARITY, SPELL_GROUP_IDS\r\n} from \"./constants.js\";\r\nimport { Utils } from \"./utils.js\";\r\n\r\nexport let ActionHandler = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  ActionHandler = class ActionHandler extends coreModule.api.ActionHandler {\r\n    // Initialize action variables\r\n    featureActions = null;\r\n\r\n    inventoryActions = null;\r\n\r\n    spellActions = null;\r\n\r\n    /**\r\n     * Build System Actions\r\n     * @override\r\n     * @param {Array} groupIds\r\n     * @returns {object}\r\n     */\r\n    async buildSystemActions(groupIds) {\r\n      // Set actor and token variables\r\n      this.actors = (!this.actor) ? this.#getValidActors() : [this.actor];\r\n      this.tokens = (!this.token) ? this.#getValidTokens() : [this.token];\r\n\r\n      // Set items variable\r\n      if (this.actor) {\r\n        this.items = coreModule.api.Utils.sortItemsByName(this.#discardSlowItems(this.actor.items));\r\n      }\r\n\r\n      // Set settings variables\r\n      this.abbreviateSkills = Utils.getSetting(\"abbreviateSkills\");\r\n      this.displaySpellInfo = Utils.getSetting(\"displaySpellInfo\");\r\n      this.showItemsWithoutActivationCosts = Utils.getSetting(\"showItemsWithoutActivationCosts\");\r\n      this.showUnchargedItems = Utils.getSetting(\"showUnchargedItems\");\r\n      this.showUnequippedItems = Utils.getSetting(\"showUnequippedItems\");\r\n      if (this.actor?.type === \"npc\" && !this.showUnequippedItems) {\r\n        this.showUnequippedItems = Utils.getSetting(\"showUnequippedItemsNpcs\");\r\n      }\r\n      this.showUnpreparedSpells = Utils.getSetting(\"showUnpreparedSpells\");\r\n\r\n      this.activationgroupIds = [\r\n        \"actions\",\r\n        \"bonus-actions\",\r\n        \"crew-actions\",\r\n        \"lair-actions\",\r\n        \"legendary-actions\",\r\n        \"reactions\",\r\n        \"other-actions\"\r\n      ];\r\n\r\n      if (this.actor?.type === \"character\" || this.actor?.type === \"npc\") {\r\n        this.inventorygroupIds = [\r\n          \"equipped\",\r\n          \"consumables\",\r\n          \"containers\",\r\n          \"equipment\",\r\n          \"loot\",\r\n          \"tools\",\r\n          \"weapons\",\r\n          \"unequipped\"\r\n        ];\r\n\r\n        await this.#buildCharacterActions();\r\n      } else if (this.actor?.type === \"vehicle\") {\r\n        this.inventorygroupIds = [\r\n          \"consumables\",\r\n          \"equipment\",\r\n          \"tools\",\r\n          \"weapons\"\r\n        ];\r\n\r\n        await this.#buildVehicleActions();\r\n      } else if (!this.actor) {\r\n        await this.#buildMultipleTokenActions();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build character actions\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    async #buildCharacterActions() {\r\n      await Promise.all([\r\n        this.#buildConditions(),\r\n        this.#buildEffects(),\r\n        this.#buildFeatures(),\r\n        this.#buildInventory(),\r\n        this.#buildSpells()\r\n      ]);\r\n      this.#buildAbilities(\"ability\", \"abilities\");\r\n      this.#buildAbilities(\"check\", \"checks\");\r\n      this.#buildAbilities(\"save\", \"saves\");\r\n      this.#buildCombat();\r\n      this.#buildCounters();\r\n      this.#buildExhaustion();\r\n      this.#buildRests();\r\n      this.#buildSkills();\r\n      this.#buildUtility();\r\n    }\r\n\r\n    /**\r\n     * Build vehicle actions\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    async #buildVehicleActions() {\r\n      await Promise.all([\r\n        this.#buildConditions(),\r\n        this.#buildEffects(),\r\n        this.#buildFeatures(),\r\n        this.#buildInventory()\r\n      ]);\r\n      this.#buildAbilities(\"ability\", \"abilities\");\r\n      this.#buildAbilities(\"check\", \"checks\");\r\n      this.#buildAbilities(\"save\", \"saves\");\r\n      this.#buildCombat();\r\n      this.#buildUtility();\r\n    }\r\n\r\n    /**\r\n     * Build multiple token actions\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    async #buildMultipleTokenActions() {\r\n      this.#buildAbilities(\"ability\", \"abilities\");\r\n      this.#buildAbilities(\"check\", \"checks\");\r\n      this.#buildAbilities(\"save\", \"saves\");\r\n      this.#buildCombat();\r\n      await this.#buildConditions();\r\n      this.#buildRests();\r\n      this.#buildSkills();\r\n      this.#buildUtility();\r\n    }\r\n\r\n    /**\r\n     * Build abilities\r\n     * @private\r\n     * @param {string} actionType\r\n     * @param {string} groupId\r\n     */\r\n    #buildAbilities(actionType, groupId) {\r\n      // Get abilities\r\n      const abilities = this.actor?.system.abilities || CONFIG.DND5E.abilities;\r\n\r\n      // Exit if no abilities exist\r\n      if (abilities.length === 0) return;\r\n\r\n      // Helper to build each action\r\n      const buildAction = (abilityId, ability) => {\r\n        const name = CONFIG.DND5E.abilities[abilityId].label;\r\n        const mod = (groupId === \"saves\") ? ability?.save : ability?.mod;\r\n        return {\r\n          id: `${actionType}-${abilityId}`,\r\n          name: (this.abbreviateSkills) ? coreModule.api.Utils.capitalize(abilityId) : name,\r\n          encodedValue: [actionType, abilityId].join(this.delimiter),\r\n          icon1: (groupId !== \"checks\") ? this.#getProficiencyIcon(abilities[abilityId].proficient) : \"\",\r\n          info1: (this.actor) ? { text: coreModule.api.Utils.getModifier(mod) } : null,\r\n          info2: (this.actor && groupId === \"abilities\") ? { text: `(${coreModule.api.Utils.getModifier(ability?.save)})` } : null,\r\n          listName: this.#getListName(actionType, name)\r\n        };\r\n      };\r\n\r\n      // Get actions\r\n      const actions = Object.entries(abilities)\r\n        .filter(ability => abilities[ability[0]].value !== 0)\r\n        .map(([abilityId, ability]) => { return buildAction(abilityId, ability); });\r\n\r\n      // Create group data\r\n      const groupData = { id: groupId };\r\n\r\n      // Add actions to action list\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /**\r\n     * Build activations\r\n     * @public\r\n     * @param {object} data  groupData, actionData, actionType\r\n     */\r\n    async buildActivations(data) {\r\n      const { groupData, actionData, actionType = \"item\" } = data;\r\n\r\n      // Create map of items according to activation type\r\n      const activationItems = new Map();\r\n\r\n      // Loop items and add to activationItems\r\n      for (const [key, value] of actionData) {\r\n        const activationType = value.system?.activities?.contents[0]?.activation?.type;\r\n        const groupId = ACTIVATION_TYPE[activationType]?.group ?? \"other\";\r\n        if (!activationItems.has(groupId)) activationItems.set(groupId, new Map());\r\n        activationItems.get(groupId).set(key, value);\r\n      }\r\n\r\n      // Loop through action group ids\r\n      for (const value of Object.values(ACTIVATION_TYPE)) {\r\n        const group = value.group;\r\n\r\n        // Skip if no items exist\r\n        if (!activationItems.has(group)) continue;\r\n\r\n        // Clone and add to group data\r\n        const groupDataClone = { ...groupData, id: `${group}+${groupData.id}`, type: \"system-derived\" };\r\n\r\n        // Set Equipped and Unequipped groups to not selected by default\r\n        if ([\"equipped\", \"unequipped\"].includes(groupData.id)) { groupDataClone.defaultSelected = false; }\r\n\r\n        // Create parent group data\r\n        const parentgroupData = { id: group, type: \"system\" };\r\n\r\n        // Add group to HUD\r\n        await this.addGroup(groupDataClone, parentgroupData);\r\n\r\n        // Add spell slot info to group\r\n        if (actionType === \"spell\") { this.addGroupInfo(groupDataClone); }\r\n\r\n        // Build actions\r\n        await this.buildActions({\r\n          groupData: groupDataClone,\r\n          actionData: activationItems.get(group),\r\n          actionType\r\n        });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build combat\r\n     * @private\r\n     */\r\n    #buildCombat() {\r\n      const actionType = \"utility\";\r\n\r\n      // Set combat types\r\n      const combatTypes = {\r\n        initiative: { id: \"initiative\", name: \"tokenActionHud.dnd5e.rollInitiative\" },\r\n        endTurn: { id: \"endTurn\", name: \"tokenActionHud.endTurn\" }\r\n      };\r\n\r\n      // Delete endTurn for multiple tokens\r\n      if (game.combat?.current?.tokenId !== this.token?.id) delete combatTypes.endTurn;\r\n\r\n      const tokens = coreModule.api.Utils.getControlledTokens();\r\n      const tokenIds = tokens?.map(token => token.id);\r\n      const combatants = (game.combat)\r\n        ? game.combat.combatants.filter(combatant => tokenIds.includes(combatant.tokenId))\r\n        : [];\r\n\r\n      const getInfo1 = combatTypeId => {\r\n        if (combatTypeId === \"initiative\" && combatants.length === 1) {\r\n          // Get initiative for single token\r\n          const currentInitiative = combatants[0].initiative;\r\n          return { class: \"tah-spotlight\", text: currentInitiative };\r\n        }\r\n        return {};\r\n      };\r\n\r\n      const getActive = () => {\r\n        return combatants.length > 0 && (combatants.every(combatant => combatant?.initiative)) ? \" active\" : \"\";\r\n      };\r\n\r\n      // Get actions\r\n      const actions = Object.values(combatTypes).map(combatType => {\r\n        return {\r\n          id: combatType.id,\r\n          name: game.i18n.localize(combatType.name),\r\n          encodedValue: [actionType, combatType.id].join(this.delimiter),\r\n          info1: getInfo1(combatType.id),\r\n          cssClass: (combatType.id === \"initiative\" ) ? `toggle${getActive()}` : \"\",\r\n          listName: this.#getListName(actionType, combatType.name)\r\n        };\r\n      });\r\n\r\n      // Create group data\r\n      const groupData = { id: \"combat\" };\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /**\r\n     * Build conditions\r\n     * @private\r\n     */\r\n    async #buildConditions() {\r\n      if (this.tokens?.length === 0) return;\r\n\r\n      const actionType = \"condition\";\r\n\r\n      // Get conditions\r\n      const conditions = CONFIG.statusEffects.filter(condition => condition.id !== \"\");\r\n\r\n      // Exit if no conditions exist\r\n      if (conditions.length === 0) return;\r\n\r\n      // Get actions\r\n      const actions = await Promise.all(conditions.map(async condition => {\r\n        const hasCondition = this.actors.every(actor => {\r\n          return actor.effects.some(effect => effect.statuses.some(status => status === condition.id)\r\n          && !effect?.disabled);\r\n        });\r\n        const name = game.i18n.localize(condition.label) ?? condition.name;\r\n        return {\r\n          id: condition.id,\r\n          name,\r\n          encodedValue: [actionType, condition.id].join(this.delimiter),\r\n          img: coreModule.api.Utils.getImage(condition),\r\n          cssClass: `toggle${(hasCondition) ? \" active\" : \"\"}`,\r\n          listName: this.#getListName(actionType, name),\r\n          tooltip: await this.#getTooltip(await this.#getConditionTooltipData(condition.id, condition.name))\r\n        };\r\n      }));\r\n\r\n      // Create group data\r\n      const groupData = { id: \"conditions\" };\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /**\r\n     * Build counters\r\n     * @private\r\n     */\r\n    async #buildCounters() {\r\n      if (!CUSTOM_DND5E.COUNTERS[this.actor?.type]) return;\r\n\r\n      const actionType = \"counter\";\r\n\r\n      let counters = game.settings.get(CUSTOM_DND5E.ID, CUSTOM_DND5E.COUNTERS[this.actor?.type]) ?? [];\r\n\r\n      if (coreModule.api.Utils.isModuleActive(CUSTOM_DND5E.ID) && counters.length) {\r\n        counters = Object.entries(counters)\r\n          .filter(([_, value]) => value.visible)\r\n          .map(([key, value]) => {\r\n            value.key = key;\r\n            return value;\r\n          });\r\n      } else {\r\n        counters = [\r\n          {\r\n            name: game.i18n.localize(\"DND5E.DeathSave\"),\r\n            type: \"successFailure\",\r\n            system: true,\r\n            visible: true,\r\n            key: \"death-saves\"\r\n          },\r\n          {\r\n            name: game.i18n.localize(\"DND5E.Exhaustion\"),\r\n            type: \"number\",\r\n            system: true,\r\n            visible: true,\r\n            key: \"exhaustion\"\r\n          },\r\n          {\r\n            name: game.i18n.localize(\"DND5E.Inspiration\"),\r\n            type: \"checkbox\",\r\n            system: true,\r\n            visible: true,\r\n            key: \"inspiration\"\r\n          }\r\n        ];\r\n      }\r\n\r\n      // Get actions\r\n      const actions = counters.map(counter => {\r\n        let active = \"\";\r\n        let cssClass = \"\";\r\n        let img = \"\";\r\n        let info1 = \"\";\r\n        if (counter.system) {\r\n          switch (counter.key) {\r\n            case \"exhaustion\":\r\n              active = (this.actor.system.attributes.exhaustion > 0) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              img = coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/exhaustion.svg\");\r\n              info1 = { text: this.actor.system.attributes.exhaustion };\r\n              break;\r\n            case \"death-saves\":\r\n              img = coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/death-saves.svg\");\r\n              info1 = { text: `${this.actor.system.attributes.death.success}/${this.actor.system.attributes.death.failure}` };\r\n              break;\r\n            case \"inspiration\":\r\n              active = (this.actor.system.attributes.inspiration) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              img = coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/inspiration.svg\");\r\n              break;\r\n          }\r\n        } else {\r\n          const value = this.actor.getFlag(CUSTOM_DND5E.ID, counter.key);\r\n          switch (counter.type) {\r\n            case \"checkbox\":\r\n              active = (value) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              break;\r\n            case \"number\":\r\n              active = (value > 0) ? \" active\" : \"\";\r\n              cssClass = `toggle${active}`;\r\n              info1 = { text: value };\r\n              break;\r\n            case \"successFailure\":\r\n              info1 = { text: `${value?.success ?? 0}/${value?.failure ?? 0}` };\r\n              break;\r\n          }\r\n        }\r\n\r\n        return {\r\n          id: counter.key,\r\n          name: counter.name,\r\n          listName: this.#getListName(actionType, counter.name),\r\n          encodedValue: [actionType, (counter.system) ? counter.key : encodeURIComponent(`${counter.key}>${counter.type}`)].join(this.delimiter),\r\n          cssClass,\r\n          img,\r\n          info1\r\n        };\r\n      });\r\n\r\n      // Create group data\r\n      const groupData = { id: \"counters\" };\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /**\r\n     * Build effects\r\n     * @private\r\n     */\r\n    async #buildEffects() {\r\n      const actionType = \"effect\";\r\n\r\n      // Get effects\r\n      const effects = new Map();\r\n      for (const effect of this.actor.allApplicableEffects()) { effects.set(effect.id, effect); }\r\n\r\n      // Exit if no effects exist\r\n      if (effects.size === 0) return;\r\n\r\n      // Map passive and temporary effects to new maps\r\n      const passiveEffects = new Map();\r\n      const temporaryEffects = new Map();\r\n      const conditionIds = Object.keys(CONFIG.DND5E.conditionTypes).map(key => { return dnd5e.utils.staticID(`dnd5e${key}`); });\r\n\r\n      // Iterate effects and add to a map based on the isTemporary value\r\n      for (const [effectId, effect] of effects.entries()) {\r\n        if (effect.isSuppressed) continue;\r\n        if (effect.parent?.system?.identified === false && !game.user.isGM) continue;\r\n        if (conditionIds.includes(effect.id)) continue;\r\n\r\n        const isTemporary = effect.isTemporary;\r\n        if (isTemporary) {\r\n          temporaryEffects.set(effectId, effect);\r\n        } else {\r\n          passiveEffects.set(effectId, effect);\r\n        }\r\n      }\r\n\r\n      await Promise.all([\r\n        // Build passive effects\r\n        this.buildActions({ groupData: { id: \"passive-effects\", type: \"system\" }, actionData: passiveEffects, actionType }),\r\n        // Build temporary effects\r\n        this.buildActions({ groupData: { id: \"temporary-effects\", type: \"system\" }, actionData: temporaryEffects, actionType })\r\n      ]);\r\n    }\r\n\r\n    /**\r\n     * Build exhaustion\r\n     * @private\r\n     */\r\n    #buildExhaustion() {\r\n      // Exit if every actor is not the character type\r\n      if (this.actors.length === 0) return;\r\n      if (!this.actors.every(actor => actor.type === \"character\")) return;\r\n\r\n      const actionType = \"exhaustion\";\r\n      const active = this.actor.system.attributes.exhaustion > 0 ? \" active\" : \"\";\r\n\r\n      // Get actions\r\n      const actions = [{\r\n        cssClass: `toggle${active}`,\r\n        id: \"exhaustion\",\r\n        name: game.i18n.localize(\"DND5E.Exhaustion\"),\r\n        encodedValue: [actionType, \"exhaustion\"].join(this.delimiter),\r\n        img: coreModule.api.Utils.getImage(\"modules/token-action-hud-dnd5e/icons/exhaustion.svg\"),\r\n        info1: { text: this.actor.system.attributes.exhaustion },\r\n        listName: this.#getListName(actionType, name)\r\n      }];\r\n\r\n      // Create group data\r\n      const groupData = { id: \"exhaustion\" };\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /**\r\n     * Build features\r\n     * @private\r\n     */\r\n    async #buildFeatures() {\r\n      const actionType = \"feature\";\r\n\r\n      // Get feats\r\n      const feats = new Map();\r\n      for (const [key, value] of this.items) {\r\n        const type = value.type;\r\n        if (type === \"feat\") feats.set(key, value);\r\n      }\r\n\r\n      // Early exit if no feats exist\r\n      if (feats.size === 0) return;\r\n\r\n      // Map active and passive features to new maps\r\n      const featuresMap = new Map();\r\n\r\n      const featureTypes = [\r\n        { type: \"background\", groupId: \"background-features\" },\r\n        { type: \"class\", groupId: \"class-features\" },\r\n        { type: \"monster\", groupId: \"monster-features\" },\r\n        { type: \"race\", groupId: \"race-features\" },\r\n        { type: \"feats\", groupId: \"feats\" }\r\n      ];\r\n\r\n      const classFeatureTypes = [\r\n        { type: \"artificerInfusion\", groupId: \"artificer-infusions\" },\r\n        { type: \"channelDivinity\", groupId: \"channel-divinity\" },\r\n        { type: \"defensiveTactic\", groupId: \"defensive-tactics\" },\r\n        { type: \"eldritchInvocation\", groupId: \"eldritch-invocations\" },\r\n        { type: \"elementalDiscipline\", groupId: \"elemental-disciplines\" },\r\n        { type: \"fightingStyle\", groupId: \"fighting-styles\" },\r\n        { type: \"huntersPrey\", groupId: \"hunters-prey\" },\r\n        { type: \"ki\", groupId: \"ki-abilities\" },\r\n        { type: \"maneuver\", groupId: \"maneuvers\" },\r\n        { type: \"metamagic\", groupId: \"metamagic-options\" },\r\n        { type: \"multiattack\", groupId: \"multiattacks\" },\r\n        { type: \"pact\", groupId: \"pact-boons\" },\r\n        { type: \"psionicPower\", groupId: \"psionic-powers\" },\r\n        { type: \"rune\", groupId: \"runes\" },\r\n        { type: \"superiorHuntersDefense\", groupId: \"superior-hunters-defense\" }\r\n      ];\r\n\r\n      for (const [key, value] of feats) {\r\n        const activationType = value.system.activities.contents[0]?.type;\r\n        const type = value.system.type.value;\r\n        const subType = value.system.type?.subtype;\r\n        if (activationType) {\r\n          if (!featuresMap.has(\"active-features\")) featuresMap.set(\"active-features\", new Map());\r\n          featuresMap.get(\"active-features\").set(key, value);\r\n        }\r\n        if (!activationType || activationType === \"\") {\r\n          if (!featuresMap.has(\"passive-features\")) featuresMap.set(\"passive-features\", new Map());\r\n          featuresMap.get(\"passive-features\").set(key, value);\r\n        }\r\n        for (const featureType of featureTypes) {\r\n          const groupId = featureType.groupId;\r\n          if (featureType.type === type) {\r\n            if (!featuresMap.has(groupId)) featuresMap.set(groupId, new Map());\r\n            featuresMap.get(groupId).set(key, value);\r\n          }\r\n        }\r\n        for (const featureType of classFeatureTypes) {\r\n          const groupId = featureType.groupId;\r\n          if (subType && featureType.type === subType) {\r\n            if (!featuresMap.has(groupId)) featuresMap.set(groupId, new Map());\r\n            featuresMap.get(groupId).set(key, value);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Create group name mappings\r\n      const groupNameMappings = {\r\n        \"active-features\": game.i18n.localize(\"tokenActionHud.dnd5e.activeFeatures\"),\r\n        \"passive-features\": game.i18n.localize(\"tokenActionHud.dnd5e.passiveFeatures\")\r\n      };\r\n\r\n      // Loop through inventory groups ids\r\n      for (const groupId of FEATURE_GROUP_IDS) {\r\n        if (!featuresMap.has(groupId)) continue;\r\n\r\n        // Create group data\r\n        const groupData = {\r\n          id: groupId,\r\n          name: groupNameMappings[groupId] ?? \"\"\r\n        };\r\n\r\n        const actionData = featuresMap.get(groupId);\r\n        const data = { groupData, actionData, actionType };\r\n\r\n        // Build actions\r\n        await this.buildActions(data);\r\n\r\n        // Build activations\r\n        if (groupNameMappings[groupId]) await this.buildActivations(data);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build inventory\r\n     * @private\r\n     */\r\n    async #buildInventory() {\r\n      // Exit early if no items exist\r\n      if (this.items.size === 0) return;\r\n\r\n      const inventoryMap = new Map();\r\n\r\n      for (const [key, value] of this.items) {\r\n        // Set variables\r\n        const equipped = value.system.equipped;\r\n        const hasQuantity = value.system?.quantity > 0;\r\n        const isActiveItem = this.#isActiveItem(value);\r\n        const isUsableItem = this.#isUsableItem(value);\r\n        const isEquippedItem = this.#isEquippedItem(value);\r\n        const type = value.type;\r\n\r\n        // Set items into maps\r\n        if (hasQuantity && isActiveItem) {\r\n          if (equipped) {\r\n            if (!inventoryMap.has(\"equipped\")) inventoryMap.set(\"equipped\", new Map());\r\n            inventoryMap.get(\"equipped\").set(key, value);\r\n          }\r\n          if (!equipped) {\r\n            if (!inventoryMap.has(\"unequipped\")) inventoryMap.set(\"unequipped\", new Map());\r\n            inventoryMap.get(\"unequipped\").set(key, value);\r\n          }\r\n          if (isUsableItem && type === \"consumable\") {\r\n            if (!inventoryMap.has(\"consumables\")) inventoryMap.set(\"consumables\", new Map());\r\n            inventoryMap.get(\"consumables\").set(key, value);\r\n          }\r\n          if (isEquippedItem) {\r\n            if (type === \"container\") {\r\n              if (!inventoryMap.has(\"containers\")) inventoryMap.set(\"containers\", new Map());\r\n              inventoryMap.get(\"containers\").set(key, value);\r\n            }\r\n            if (type === \"equipment\") {\r\n              if (!inventoryMap.has(\"equipment\")) inventoryMap.set(\"equipment\", new Map());\r\n              inventoryMap.get(\"equipment\").set(key, value);\r\n            }\r\n            if (type === \"loot\") {\r\n              if (!inventoryMap.has(\"loot\")) inventoryMap.set(\"loot\", new Map());\r\n              inventoryMap.get(\"loot\").set(key, value);\r\n            }\r\n            if (type === \"tool\") {\r\n              if (!inventoryMap.has(\"tools\")) inventoryMap.set(\"tools\", new Map());\r\n              inventoryMap.get(\"tools\").set(key, value);\r\n            }\r\n            if (type === \"weapon\") {\r\n              if (!inventoryMap.has(\"weapons\")) inventoryMap.set(\"weapons\", new Map());\r\n              inventoryMap.get(\"weapons\").set(key, value);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Create group name mappings\r\n      const groupNameMappings = {\r\n        equipped: \"DND5E.Equipped\",\r\n        unequipped: \"DND5E.Unequipped\",\r\n        consumables: \"TYPES.Item.consumablePl\",\r\n        containers: \"TYPES.Item.containerPl\",\r\n        equipment: \"TYPES.Item.equipmentPl\",\r\n        loot: \"TYPES.Item.lootPl\",\r\n        tools: \"TYPES.Item.toolPl\",\r\n        weapons: \"TYPES.Item.weaponPl\"\r\n      };\r\n\r\n      // Loop through inventory subcateogry ids\r\n      for (const groupId of this.inventorygroupIds) {\r\n        if (!inventoryMap.has(groupId)) continue;\r\n\r\n        // Create group data\r\n        const groupData = {\r\n          id: groupId,\r\n          name: game.i18n.localize(groupNameMappings[groupId])\r\n        };\r\n\r\n        const actionData = inventoryMap.get(groupId);\r\n        const data = { groupData, actionData };\r\n\r\n        // Build actions\r\n        await this.buildActions(data);\r\n\r\n        // Build activations\r\n        await this.buildActivations(data);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build rests\r\n     * @private\r\n     */\r\n    #buildRests() {\r\n      // Exit if every actor is not the character type\r\n      if (this.actors.length === 0) return;\r\n      if (!this.actors.every(actor => actor.type === \"character\")) return;\r\n\r\n      const actionType = \"utility\";\r\n\r\n      // Set rest types\r\n      const restTypes = {\r\n        shortRest: { name: game.i18n.localize(\"DND5E.ShortRest\") },\r\n        longRest: { name: game.i18n.localize(\"DND5E.LongRest\") }\r\n      };\r\n\r\n      // Get actions\r\n      const actions = Object.entries(restTypes)\r\n        .map(restType => {\r\n          const id = restType[0];\r\n          const name = restType[1].name;\r\n          const encodedValue = [actionType, id].join(this.delimiter);\r\n          return {\r\n            id,\r\n            name,\r\n            encodedValue,\r\n            listName: this.#getListName(actionType, name)\r\n          };\r\n        });\r\n\r\n      // Create group data\r\n      const groupData = { id: \"rests\" };\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /**\r\n     * Build skills\r\n     * @private\r\n     */\r\n    #buildSkills() {\r\n      const actionType = \"skill\";\r\n\r\n      // Get skills\r\n      const skills = this.actor?.system.skills || CONFIG.DND5E.skills;\r\n\r\n      // Exit if there are no skills\r\n      if (skills.length === 0) return;\r\n\r\n      // Get actions\r\n      const actions = Object.entries(skills)\r\n        .map(([id, skill]) => {\r\n          try {\r\n            const name = CONFIG.DND5E.skills[id].label;\r\n            return {\r\n              id,\r\n              name: this.abbreviateSkills ? coreModule.api.Utils.capitalize(id) : name,\r\n              encodedValue: [actionType, id].join(this.delimiter),\r\n              icon1: this.#getProficiencyIcon(skill.value),\r\n              info1: (this.actor) ? { text: coreModule.api.Utils.getModifier(skill.total) } : \"\",\r\n              listName: this.#getListName(actionType, name)\r\n            };\r\n          } catch(error) {\r\n            coreModule.api.Logger.error(skill);\r\n            return null;\r\n          }\r\n        })\r\n        .filter(skill => !!skill);\r\n\r\n      // Create group data\r\n      const groupData = { id: \"skills\" };\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /**\r\n     * Build spells\r\n     */\r\n    async #buildSpells() {\r\n      const actionType = \"spell\";\r\n\r\n      const spellsMap = new Map();\r\n\r\n      // Loop through items\r\n      for (const [key, value] of this.items) {\r\n        const type = value.type;\r\n        if (type === \"spell\") {\r\n          const isUsableItem = this.#isUsableItem(value);\r\n          const isUsableSpell = this.#isUsableSpell(value);\r\n          if (isUsableItem && isUsableSpell) {\r\n            const preparationMode = value.system.preparation.mode;\r\n            switch (preparationMode) {\r\n              case \"atwill\":\r\n                if (!spellsMap.has(\"at-will-spells\")) spellsMap.set(\"at-will-spells\", new Map());\r\n                spellsMap.get(\"at-will-spells\").set(key, value);\r\n                break;\r\n              case \"innate\":\r\n                if (!spellsMap.has(\"innate-spells\")) spellsMap.set(\"innate-spells\", new Map());\r\n                spellsMap.get(\"innate-spells\").set(key, value);\r\n                break;\r\n              case \"pact\":\r\n                if (!spellsMap.has(\"pact-spells\")) spellsMap.set(\"pact-spells\", new Map());\r\n                spellsMap.get(\"pact-spells\").set(key, value);\r\n                break;\r\n              default:\r\n              { const level = value.system.level;\r\n                switch (level) {\r\n                  case 0:\r\n                    if (!spellsMap.has(\"cantrips\")) spellsMap.set(\"cantrips\", new Map());\r\n                    spellsMap.get(\"cantrips\").set(key, value);\r\n                    break;\r\n                  case 1:\r\n                    if (!spellsMap.has(\"1st-level-spells\")) spellsMap.set(\"1st-level-spells\", new Map());\r\n                    spellsMap.get(\"1st-level-spells\").set(key, value);\r\n                    break;\r\n                  case 2:\r\n                    if (!spellsMap.has(\"2nd-level-spells\")) spellsMap.set(\"2nd-level-spells\", new Map());\r\n                    spellsMap.get(\"2nd-level-spells\").set(key, value);\r\n                    break;\r\n                  case 3:\r\n                    if (!spellsMap.has(\"3rd-level-spells\")) spellsMap.set(\"3rd-level-spells\", new Map());\r\n                    spellsMap.get(\"3rd-level-spells\").set(key, value);\r\n                    break;\r\n                  case 4:\r\n                    if (!spellsMap.has(\"4th-level-spells\")) spellsMap.set(\"4th-level-spells\", new Map());\r\n                    spellsMap.get(\"4th-level-spells\").set(key, value);\r\n                    break;\r\n                  case 5:\r\n                    if (!spellsMap.has(\"5th-level-spells\")) spellsMap.set(\"5th-level-spells\", new Map());\r\n                    spellsMap.get(\"5th-level-spells\").set(key, value);\r\n                    break;\r\n                  case 6:\r\n                    if (!spellsMap.has(\"6th-level-spells\")) spellsMap.set(\"6th-level-spells\", new Map());\r\n                    spellsMap.get(\"6th-level-spells\").set(key, value);\r\n                    break;\r\n                  case 7:\r\n                    if (!spellsMap.has(\"7th-level-spells\")) spellsMap.set(\"7th-level-spells\", new Map());\r\n                    spellsMap.get(\"7th-level-spells\").set(key, value);\r\n                    break;\r\n                  case 8:\r\n                    if (!spellsMap.has(\"8th-level-spells\")) spellsMap.set(\"8th-level-spells\", new Map());\r\n                    spellsMap.get(\"8th-level-spells\").set(key, value);\r\n                    break;\r\n                  case 9:\r\n                    if (!spellsMap.has(\"9th-level-spells\")) spellsMap.set(\"9th-level-spells\", new Map());\r\n                    spellsMap.get(\"9th-level-spells\").set(key, value);\r\n                    break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Reverse sort spell slots by level\r\n      const systemSpells = Object.entries(this.actor.system.spells).reverse();\r\n\r\n      // Set spell slot availability\r\n      let pactSlot = null;\r\n      const spellSlots = [];\r\n      let spellSlotAvailable = this.showUnchargedItems;\r\n      let pactSlotAvailable = this.showUnchargedItems;\r\n      for (const [key, value] of systemSpells) {\r\n        const hasValue = value.value > 0;\r\n        const hasMax = value.max > 0;\r\n        const hasLevel = value.level > 0;\r\n        if (key === \"pact\") {\r\n          if (!pactSlotAvailable && hasValue && hasMax && hasLevel) pactSlotAvailable = true;\r\n          if (!hasLevel) pactSlotAvailable = false;\r\n          value.slotAvailable = pactSlotAvailable;\r\n          pactSlot = [key, value];\r\n        }\r\n        if (key.startsWith(\"spell\") && key !== \"spell0\") {\r\n          if (!spellSlotAvailable && hasValue && hasMax) spellSlotAvailable = true;\r\n          value.slotAvailable = spellSlotAvailable;\r\n          spellSlots.push([key, value]);\r\n        } else if (hasValue) {\r\n          value.slotsAvailable = true;\r\n          spellSlots.push(key, value);\r\n        }\r\n      }\r\n\r\n      // Set equivalent spell slot where pact slot is available\r\n      if (pactSlot[1].slotAvailable) {\r\n        const pactSpellEquivalent = spellSlots.findIndex(spell => spell[0] === `spell${pactSlot[1].level}`);\r\n        spellSlots[pactSpellEquivalent][1].slotsAvailable = true;\r\n      }\r\n\r\n      const groupMappings = {\r\n        \"1st-level-spells\": { spellMode: 1, name: game.i18n.localize(\"tokenActionHud.dnd5e.1stLevelSpells\") },\r\n        \"2nd-level-spells\": { spellMode: 2, name: game.i18n.localize(\"tokenActionHud.dnd5e.2ndLevelSpells\") },\r\n        \"3rd-level-spells\": { spellMode: 3, name: game.i18n.localize(\"tokenActionHud.dnd5e.3rdLevelSpells\") },\r\n        \"4th-level-spells\": { spellMode: 4, name: game.i18n.localize(\"tokenActionHud.dnd5e.4thLevelSpells\") },\r\n        \"5th-level-spells\": { spellMode: 5, name: game.i18n.localize(\"tokenActionHud.dnd5e.5thLevelSpells\") },\r\n        \"6th-level-spells\": { spellMode: 6, name: game.i18n.localize(\"tokenActionHud.dnd5e.6thLevelSpells\") },\r\n        \"7th-level-spells\": { spellMode: 7, name: game.i18n.localize(\"tokenActionHud.dnd5e.7thLevelSpells\") },\r\n        \"8th-level-spells\": { spellMode: 8, name: game.i18n.localize(\"tokenActionHud.dnd5e.8thLevelSpells\") },\r\n        \"9th-level-spells\": { spellMode: 9, name: game.i18n.localize(\"tokenActionHud.dnd5e.9thLevelSpells\") },\r\n        \"at-will-spells\": { spellMode: \"atwill\", name: game.i18n.localize(\"tokenActionHud.dnd5e.atWillSpells\") },\r\n        cantrips: { spellMode: 0, name: game.i18n.localize(\"tokenActionHud.dnd5e.cantrips\") },\r\n        \"innate-spells\": { spellMode: \"innate\", name: game.i18n.localize(\"tokenActionHud.dnd5e.innateSpells\") },\r\n        \"pact-spells\": { spellMode: \"pact\", name: game.i18n.localize(\"tokenActionHud.dnd5e.pactSpells\") }\r\n      };\r\n\r\n      const spellSlotModes = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"pact\"];\r\n\r\n      for (const groupId of SPELL_GROUP_IDS) {\r\n        const spellMode = groupMappings[groupId].spellMode;\r\n        const groupName = groupMappings[groupId].name;\r\n\r\n        // Skip if no spells exist\r\n        if (!spellsMap.has(groupId)) continue;\r\n\r\n        const levelInfo = (spellMode === \"pact\") ? pactSlot[1] : spellSlots.find(spellSlot => spellSlot[0] === `spell${spellMode}`)?.[1];\r\n        const slots = levelInfo?.value;\r\n        const max = levelInfo?.max;\r\n        const slotsAvailable = levelInfo?.slotAvailable;\r\n\r\n        // Skip if spells require spell slots and none are available\r\n        if (!slotsAvailable && spellSlotModes.includes(spellMode)) continue;\r\n\r\n        // Create group data=\r\n        const groupInfo = {};\r\n        groupInfo.info1 = { class: \"tah-spotlight\", text: (max >= 0) ? `${slots}/${max}` : \"\" };\r\n        const groupData = {\r\n          id: groupId,\r\n          name: groupName,\r\n          info: groupInfo\r\n        };\r\n\r\n        // Add spell slot info to group\r\n        this.addGroupInfo(groupData);\r\n\r\n        const actionData = spellsMap.get(groupId);\r\n        const data = { groupData, actionData, actionType };\r\n\r\n        // Build actions\r\n        await this.buildActions(data);\r\n\r\n        // Build activations\r\n        await this.buildActivations(data);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Build utility\r\n     * @private\r\n     */\r\n    #buildUtility() {\r\n      // Exit if every actor is not the character type\r\n      if (this.actors.length === 0) return;\r\n      if (!this.actors.every(actor => actor.type === \"character\")) return;\r\n\r\n      const actionType = \"utility\";\r\n\r\n      // Set utility types\r\n      const utilityTypes = {\r\n        deathSave: { name: game.i18n.localize(\"DND5E.DeathSave\") },\r\n        inspiration: { name: game.i18n.localize(\"DND5E.Inspiration\") }\r\n      };\r\n\r\n      // Delete 'deathSave' for multiple tokens\r\n      if (!this.actor || this.actor.system.attributes.hp.value > 0) delete utilityTypes.deathSave;\r\n\r\n      // Get actions\r\n      const actions = Object.entries(utilityTypes)\r\n        .map(utilityType => {\r\n          const id = utilityType[0];\r\n          const name = utilityType[1].name;\r\n          const encodedValue = [actionType, id].join(this.delimiter);\r\n          let cssClass = \"\";\r\n          if (utilityType[0] === \"inspiration\") {\r\n            const active = this.actors.every(actor => actor.system.attributes?.inspiration)\r\n              ? \" active\"\r\n              : \"\";\r\n            cssClass = `toggle${active}`;\r\n          }\r\n          return {\r\n            id,\r\n            name,\r\n            encodedValue,\r\n            cssClass,\r\n            listName: this.#getListName(actionType, name)\r\n          };\r\n        });\r\n\r\n      // Crreate group data\r\n      const groupData = { id: \"utility\" };\r\n\r\n      // Add actions to HUD\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /**\r\n     * Build actions\r\n     * @public\r\n     * @param {object} data actionData, groupData, actionType\r\n     * @param {object} options\r\n     */\r\n    async buildActions(data, options) {\r\n      const { actionData, groupData, actionType } = data;\r\n\r\n      // Exit if there is no action data\r\n      if (actionData.size === 0) return;\r\n\r\n      // Exit if there is no groupId\r\n      const groupId = (typeof groupData === \"string\" ? groupData : groupData?.id);\r\n      if (!groupId) return;\r\n\r\n      // Get actions\r\n      const actions = await Promise.all([...actionData].map(async item => await this.#getAction(item[1], actionType)));\r\n\r\n      // Add actions to action list\r\n      this.addActions(actions, groupData);\r\n    }\r\n\r\n    /**\r\n     * Get action\r\n     * @private\r\n     * @param {object} entity      The entity\r\n     *  @param {string} actionType The action type\r\n     * @returns {object}           The action\r\n     */\r\n    async #getAction(entity, actionType = \"item\") {\r\n      const id = entity.id ?? entity._id;\r\n      let name = entity?.name ?? entity?.label;\r\n      let cssClass = \"\";\r\n      if (Object.hasOwn(entity, \"disabled\")) {\r\n        const active = (!entity.disabled) ? \" active\" : \"\";\r\n        cssClass = `toggle${active}`;\r\n      }\r\n      const info = this.#getItemInfo(entity);\r\n      const tooltip = await this.#getTooltip(await this.#getTooltipData(entity));\r\n      return {\r\n        id,\r\n        name,\r\n        encodedValue: [actionType, id].join(this.delimiter),\r\n        cssClass,\r\n        img: coreModule.api.Utils.getImage(entity),\r\n        icon1: this.#getActivationTypeIcon(entity.system?.activities?.contents[0]?.type),\r\n        icon2: this.#getPreparedIcon(entity),\r\n        icon3: this.#getConcentrationIcon(entity),\r\n        info1: info?.info1,\r\n        info2: info?.info2,\r\n        info3: info?.info3,\r\n        listName: this.#getListName(actionType, name),\r\n        tooltip\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Is active item\r\n     * @private\r\n     * @param {object} item The item\r\n     * @returns {boolean}   Whether the item is active\r\n     */\r\n    #isActiveItem(item) {\r\n      if (this.showItemsWithoutActivationCosts) return true;\r\n      const activationTypes = new Set(Object.keys(CONFIG.DND5E.activityActivationTypes).filter(activationType => activationType !== \"none\"));\r\n      const activationType = item.system?.activities?.contents[0]?.activation?.type;\r\n      return activationTypes.has(activationType) || item.type === \"tool\";\r\n    }\r\n\r\n    /**\r\n     * Is equipped item\r\n     * @private\r\n     * @param {object} item The item\r\n     * @returns {boolean}   Whether the item is equipped\r\n     */\r\n    #isEquippedItem(item) {\r\n      const excludedTypes = [\"consumable\", \"spell\", \"feat\"];\r\n      return (this.showUnequippedItems && !excludedTypes.includes(item.type))\r\n      || (item.system.equipped && item.type !== \"consumable\");\r\n    }\r\n\r\n    /**\r\n     * Is usable item\r\n     * @private\r\n     * @param {object} item The item\r\n     * @returns {boolean}   Whether the item is usable\r\n     */\r\n    #isUsableItem(item) {\r\n      return this.showUnchargedItems || item.system.uses;\r\n    }\r\n\r\n    /**\r\n     * Is usable spell\r\n     * @private\r\n     * @param {object} spell The spell\r\n     * @returns {boolean}    Whether the spell is usable\r\n     */\r\n    #isUsableSpell(spell) {\r\n      if (this.actor?.type !== \"character\" && this.showUnequippedItems) return true;\r\n      if (this.showUnpreparedSpells) return true;\r\n\r\n      const preparationModes = new Set(Object.keys(CONFIG.DND5E.spellPreparationModes).filter(preparationMode => preparationMode !== \"prepared\"));\r\n\r\n      // Return true if spell is a cantrip, has a preparation mode other than 'prepared' or is prepared\r\n      return spell.system.level === 0 || preparationModes.has(spell.system.preparation.mode)\r\n      || spell.system.preparation.prepared;\r\n    }\r\n\r\n    #getListName(actionType, actionName) {\r\n      const prefix = `${game.i18n.localize(ACTION_TYPE[actionType])}: ` ?? \"\";\r\n      return `${prefix}${actionName}` ?? \"\";\r\n    }\r\n\r\n    /**\r\n     * Get item info\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {object}\r\n     */\r\n    #getItemInfo(item) {\r\n      const info1 = item.type === \"spell\" ? this.#getSpellInfo(item) : this.#getQuantityData(item);\r\n      const info2 = this.#getUsesData(item);\r\n      const info3 = this.#getConsumeData(item);\r\n\r\n      return { info1, info2, info3 };\r\n    }\r\n\r\n    /**\r\n     * Add spell info\r\n     * @private\r\n     * @param {object} spell The spell\r\n     * @returns {object}     The spell info\r\n     */\r\n    #getSpellInfo(spell) {\r\n      if (!this.displaySpellInfo) return null;\r\n\r\n      const components = spell.system?.properties;\r\n      if (!components) return null;\r\n\r\n      const info = { text: \"\", title: \"\" };\r\n      const componentTypes = {\r\n        vocal: \"DND5E.ComponentVerbal\",\r\n        somatic: \"DND5E.ComponentSomatic\",\r\n        material: \"DND5E.ComponentMaterial\"\r\n      };\r\n\r\n\r\n      const componentsArray = Object.entries(componentTypes)\r\n        .filter(([key]) => components[key])\r\n        .map(([key, label]) => {\r\n          info.text += game.i18n.localize(`${label}Abbr`);\r\n          return game.i18n.localize(label);\r\n        });\r\n\r\n      // Ritual\r\n      if (components.ritual) {\r\n        componentsArray.push(`[${game.i18n.localize(\"DND5E.Ritual\")}]`);\r\n        info.text += ` [${game.i18n.localize(\"DND5E.RitualAbbr\")}]`;\r\n      }\r\n\r\n      info.title = componentsArray.join(\", \");\r\n\r\n      return info;\r\n    }\r\n\r\n    /**\r\n     * Get valid actors\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    #getValidActors() {\r\n      const allowedTypes = [\"character\", \"npc\"];\r\n      return this.actors.every(actor => allowedTypes.includes(actor.type)) ? this.actors : [];\r\n    }\r\n\r\n    /**\r\n     * Get valid tokens\r\n     * @private\r\n     * @returns {object}\r\n     */\r\n    #getValidTokens() {\r\n      const allowedTypes = [\"character\", \"npc\"];\r\n      return this.actors.every(actor => allowedTypes.includes(actor.type)) ? this.tokens : [];\r\n    }\r\n\r\n    /**\r\n     * Get quantity\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {string}\r\n     */\r\n    #getQuantityData(item) {\r\n      const quantity = item?.system?.quantity ?? 0;\r\n      return {\r\n        text: (quantity > 1) ? quantity : \"\",\r\n        title: `${game.i18n.localize(\"DND5E.Quantity\")}: ${quantity}`\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Get uses\r\n     * @private\r\n     * @param {object} item\r\n     * @param {string} consumeName\r\n     * @param {integer} consumeAmount\r\n     * @returns {string}\r\n     */\r\n    #getUsesData(item, consumeName, consumeAmount) {\r\n      const uses = item?.system?.uses;\r\n      if (uses?.per && (consumeName || uses?.prompt) && (uses.value > 0 || uses.max > 0)) {\r\n        const of = game.i18n.localize(\"DND5E.of\");\r\n        const per = uses.per === \"charges\" ? \"\" : ` ${game.i18n.localize(\"DND5E.per\")}`;\r\n        const period = CONFIG.DND5E.limitedUsePeriods[uses.per]?.label ?? uses.per;\r\n        const amount = consumeAmount !== undefined ? consumeAmount : uses.amount;\r\n        const text = `${amount > 1 ? `${amount} ${of} ` : \"\"}${uses.value ?? \"0\"}${uses.max > 0 ? `/${uses.max}` : \"\"}`;\r\n        const title = `${text}${per} ${period}${consumeName ? ` (${of} ${consumeName})` : \"\"}`;\r\n        return { text, title };\r\n      }\r\n      return {};\r\n    }\r\n\r\n    /**\r\n     * Get consume\r\n     * @private\r\n     * @param {object} item\r\n     * @param {object} actor\r\n     * @returns {string}\r\n     */\r\n    #getConsumeData(item) {\r\n      // Get consume target and type\r\n      const firstActivity = item?.system?.activities?.contents[0];\r\n      const firstTarget = firstActivity?.consumption?.targets?.[0];\r\n      const consumeId = firstTarget?.target;\r\n      const consumeType = firstTarget?.type;\r\n      const consumeAmount = firstTarget?.value;\r\n\r\n      if (!consumeId || !consumeType || consumeId === item.id) return {};\r\n\r\n      // Return resources\r\n      if (consumeType === \"attribute\") {\r\n        const parentId = consumeId.substr(0, consumeId.lastIndexOf(\".\"));\r\n        const target = foundry.utils.getProperty(this.actor.system, parentId);\r\n\r\n        if (target) {\r\n          const text = `${target.value ?? \"0\"}${target.max ? `/${target.max}` : \"\"}`;\r\n          return {\r\n            text,\r\n            title: `${text} ${target.label ?? \"\"}`\r\n          };\r\n        }\r\n      } else {\r\n        const target = this.actor.items?.get(consumeId);\r\n\r\n        // Return charges\r\n        if (target && consumeType === \"charges\") {\r\n          return this.#getUsesData(target, target.name, consumeAmount);\r\n        }\r\n\r\n        // Return quantity\r\n        if (target?.system?.quantity) {\r\n          const text = `${consumeAmount > 1 ? `${consumeAmount} ${game.i18n.localize(\"DND5E.of\")} ` : \"\"}${target.system.quantity}`;\r\n          return {\r\n            text,\r\n            title: `${text} ${target.name}`\r\n          };\r\n        }\r\n      }\r\n\r\n      return {};\r\n    }\r\n\r\n    /**\r\n     * Discard slow items\r\n     * @private\r\n     * @param {Map} items The items\r\n     * @returns {Map}     The filtered items\r\n     */\r\n    #discardSlowItems(items) {\r\n      // Return all items if slow actions are allowed\r\n      if (Utils.getSetting(\"showSlowActions\")) return items;\r\n\r\n      // Define slow activation types\r\n      const slowActivationTypes = new Set([\"minute\", \"hour\", \"day\"]);\r\n\r\n      // Filter out slow items and return the result\r\n      return new Map([...items.entries()].filter(([_, item]) => {\r\n        const activationType = item.system?.activation?.type;\r\n        return !slowActivationTypes.has(activationType);\r\n      }));\r\n    }\r\n\r\n    /**\r\n     * Get proficiency icon\r\n     * @param {string} level\r\n     * @returns {string}\r\n     */\r\n    #getProficiencyIcon(level) {\r\n      const title = CONFIG.DND5E.proficiencyLevels[level] ?? \"\";\r\n      const icon = PROFICIENCY_LEVEL_ICON[level];\r\n      return (icon) ? `<i class=\"${icon}\" title=\"${title}\"></i>` : \"\";\r\n    }\r\n\r\n    /**\r\n     * Get icon for the activation type\r\n     * @private\r\n     * @param {object} activationType The activation type\r\n     * @returns {string}              The icon\r\n     */\r\n    #getActivationTypeIcon(activationType) {\r\n      const title = CONFIG.DND5E.abilityActivationTypes[activationType] ?? \"\";\r\n      const icon = ACTIVATION_TYPE[activationType]?.icon;\r\n      return (icon) ? `<i class=\"${icon}\" title=\"${title}\"></i>` : \"\";\r\n    }\r\n\r\n    /**\r\n     * Get icon for concentration type\r\n     * @private\r\n     * @param {object} spell\r\n     * @returns {string}\r\n     */\r\n    #getConcentrationIcon(spell) {\r\n      if (spell?.type !== \"spell\" || !this.displaySpellInfo || !spell.system?.properties?.has(\"concentration\")) return null;\r\n      const title = game.i18n.localize(\"DND5E.Scroll.RequiresConcentration\");\r\n      const icon = CONCENTRATION_ICON;\r\n      return `<dnd5e-icon src=\"${icon}\" title=\"${title}\">`;\r\n    }\r\n\r\n    /**\r\n     * Get icon for a prepared spell\r\n     * @private\r\n     * @param {object} spell\r\n     * @returns\r\n     */\r\n    #getPreparedIcon(spell) {\r\n      if (spell?.type !== \"spell\" || !this.showUnpreparedSpells) return null;\r\n      const level = spell.system.level;\r\n      const preparationMode = spell.system.preparation.mode;\r\n      const prepared = spell.system.preparation.prepared;\r\n      const icon = prepared ? PREPARED_ICON : `${PREPARED_ICON} tah-icon-disabled`;\r\n      const title = preparationMode === \"always\" ? game.i18n.localize(\"DND5E.SpellPrepAlways\") : prepared ? game.i18n.localize(\"DND5E.SpellPrepared\") : game.i18n.localize(\"DND5E.SpellUnprepared\");\r\n\r\n      // Return icon if the preparation mode is 'prepared' or 'always' and the spell is not a cantrip\r\n      return ((preparationMode === \"prepared\" || preparationMode === \"always\") && level !== 0) ? `<i class=\"${icon}\" title=\"${title}\"></i>` : null;\r\n    }\r\n\r\n    async #getTooltipData(entity) {\r\n      if (this.tooltipsSetting === \"none\") return \"\";\r\n\r\n      const name = entity?.name ?? \"\";\r\n\r\n      if (this.tooltipsSetting === \"nameOnly\") return name;\r\n\r\n      const unidentified = entity.system?.identified === false;\r\n      const description = (typeof entity?.system?.description === \"string\") ? entity?.system?.description : (unidentified ? entity?.system?.unidentified?.description : entity?.system?.description?.value) ?? \"\";\r\n      let modifiers; let properties; let rarity; let traits;\r\n      if (!unidentified) {\r\n        modifiers = entity?.modifiers ?? null;\r\n        properties = [\r\n          ...entity.system?.chatProperties ?? [],\r\n          ...entity.system?.equippableItemCardProperties ?? [],\r\n          entity.system?.parent?.labels?.activation,\r\n          entity.system?.parent?.labels?.target,\r\n          entity.system?.parent?.labels?.range,\r\n          entity.system?.parent?.labels?.duration\r\n        ].filter(p => p);\r\n        rarity = unidentified ? null : entity?.rarity ?? null;\r\n        traits = (entity?.type === \"weapon\") ? this.#getWeaponProperties(entity?.system?.properties) : null;\r\n      }\r\n      return { name, description, modifiers, properties, rarity, traits };\r\n    }\r\n\r\n    /**\r\n     * Get condition tooltip data\r\n     * @param {*} id     The condition id\r\n     * @param {*} name   The condition name\r\n     * @returns {object} The tooltip data\r\n     */\r\n    async #getConditionTooltipData(id, name) {\r\n      if (this.tooltipsSetting === \"none\") return \"\";\r\n\r\n      const condition = CONFIG.DND5E.conditionTypes[id];\r\n\r\n      if (this.tooltipsSetting === \"nameOnly\" || !condition) return name;\r\n\r\n      const journalEntry = (condition.reference) ? await fromUuid(condition.reference) : null;\r\n      const description = journalEntry?.text?.content ?? \"\";\r\n      const relativeTo = journalEntry;\r\n      return {\r\n        name,\r\n        description,\r\n        relativeTo\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Get tooltip\r\n     * @param {object} tooltipData The tooltip data\r\n     * @returns {string}           The tooltip\r\n     */\r\n    async #getTooltip(tooltipData) {\r\n      if (this.tooltipsSetting === \"none\") return \"\";\r\n      if (typeof tooltipData === \"string\") return tooltipData;\r\n\r\n      const name = game.i18n.localize(tooltipData.name);\r\n\r\n      if (this.tooltipsSetting === \"nameOnly\") return name;\r\n\r\n      const nameHtml = `<h3>${name}</h3>`;\r\n\r\n      const relativeTo = tooltipData.relativeTo ?? this.actor;\r\n\r\n      const description = tooltipData?.descriptionLocalised\r\n                ?? await TextEditor.enrichHTML(game.i18n.localize(tooltipData?.description ?? \"\"), { async: true, relativeTo, secrets: true });\r\n\r\n      const rarityHtml = tooltipData?.rarity\r\n        ? `<span class=\"tah-tag ${tooltipData.rarity}\">${game.i18n.localize(RARITY[tooltipData.rarity])}</span>`\r\n        : \"\";\r\n\r\n      const propertiesHtml = tooltipData?.properties\r\n        ? `<div class=\"tah-properties\">${tooltipData.properties.map(property => `<span class=\"tah-property\">${game.i18n.localize(property)}</span>`).join(\"\")}</div>`\r\n        : \"\";\r\n\r\n      const traitsHtml = tooltipData?.traits\r\n        ? tooltipData.traits.map(trait => `<span class=\"tah-tag\">${game.i18n.localize(trait.label ?? trait)}</span>`).join(\"\")\r\n        : \"\";\r\n\r\n      const traits2Html = tooltipData?.traits2\r\n        ? tooltipData.traits2.map(trait => `<span class=\"tah-tag tah-tag-secondary\">${game.i18n.localize(trait.label ?? trait)}</span>`).join(\"\")\r\n        : \"\";\r\n\r\n      const traitsAltHtml = tooltipData?.traitsAlt\r\n        ? tooltipData.traitsAlt.map(trait => `<span class=\"tah-tag tah-tag-alt\">${game.i18n.localize(trait.label)}</span>`).join(\"\")\r\n        : \"\";\r\n\r\n      const modifiersHtml = tooltipData?.modifiers\r\n        ? `<div class=\"tah-tags\">${tooltipData.modifiers.filter(modifier => modifier.enabled).map(modifier => {\r\n          const label = game.i18n.localize(modifier.label);\r\n          const sign = modifier.modifier >= 0 ? \"+\" : \"\";\r\n          const mod = `${sign}${modifier.modifier ?? \"\"}`;\r\n          return `<span class=\"tah-tag tah-tag-transparent\">${label} ${mod}</span>`;\r\n        }).join(\"\")}</div>`\r\n        : \"\";\r\n\r\n      const tagsJoined = [rarityHtml, traitsHtml, traits2Html, traitsAltHtml].join(\"\");\r\n\r\n      const tagsHtml = (tagsJoined) ? `<div class=\"tah-tags\">${tagsJoined}</div>` : \"\";\r\n\r\n      const headerTags = (tagsHtml || modifiersHtml) ? `<div class=\"tah-tags-wrapper\">${tagsHtml}${modifiersHtml}</div>` : \"\";\r\n\r\n      if (!description && !tagsHtml && !modifiersHtml) return name;\r\n\r\n      return `<div>${nameHtml}${headerTags}${description}${propertiesHtml}</div>`;\r\n    }\r\n\r\n    #getWeaponProperties(weaponProperties) {\r\n      if (!weaponProperties) return null;\r\n      return Object.entries(weaponProperties)\r\n        .filter(([id, selected]) => selected && CONFIG.DND5E.validProperties.weapon.has(id))\r\n        .map(([id, _]) => game.i18n.localize(CONFIG.DND5E.itemProperties[id]));\r\n    }\r\n  };\r\n});\r\n","export let MagicItemActionHandlerExtender = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  MagicItemActionHandlerExtender = class MagicItemActionHandlerExtender extends coreModule.api.ActionHandlerExtender {\r\n    constructor(actionHandler) {\r\n      super();\r\n      this.actionHandler = actionHandler;\r\n      this.actor = null;\r\n    }\r\n\r\n    /**\r\n     * Extend the action list\r\n     */\r\n    async extendActionHandler() {\r\n      this.actor = this.actionHandler.actor;\r\n      if (!this.actor) return;\r\n\r\n      const actor = await MagicItems.actor(this.actor.id);\r\n\r\n      if (!actor) return;\r\n\r\n      const magicItems = actor.items ?? [];\r\n\r\n      if (magicItems.length === 0) return;\r\n\r\n      const parentGroupId = \"magic-items\";\r\n      const parentGroupType = \"system\";\r\n      const parentGroupData = {\r\n        id: parentGroupId,\r\n        type: parentGroupType\r\n      };\r\n\r\n      magicItems.forEach(magicItem => {\r\n        if (magicItem.attuned && !this._isItemAttuned(magicItem)) return;\r\n        if (magicItem.equipped && !this._isItemEquipped(magicItem)) return;\r\n\r\n        const groupId = `magic-items_${magicItem.id}`;\r\n        const groupName = magicItem.name;\r\n        const groupType = \"system-derived\";\r\n        const groupInfo1 = `${magicItem.uses}/${magicItem.charges}`;\r\n        const groupData = {\r\n          id: groupId,\r\n          name: groupName,\r\n          type: groupType,\r\n          info1: groupInfo1\r\n        };\r\n\r\n        // Add group to HUD\r\n        this.actionHandler.addGroup(groupData, parentGroupData);\r\n\r\n        const actions = magicItem.ownedEntries.map(entry => {\r\n          const effect = entry.item;\r\n          const id = effect.id;\r\n          const name = effect.name;\r\n          const encodedValue = [\r\n            \"magicItem\",\r\n            `${magicItem.id}>${id}`\r\n          ].join(\"|\");\r\n          const img = coreModule.api.Utils.getImage(effect);\r\n          const info1 = effect.consumption;\r\n          const info2 = (effect.baseLevel) ? `${coreModule.api.Utils.i18n(\"DND5E.AbbreviationLevel\")} ${effect.baseLevel}` : \"\";\r\n          return {\r\n            id,\r\n            name,\r\n            encodedValue,\r\n            img,\r\n            info1,\r\n            info2,\r\n            selected: true\r\n          };\r\n        });\r\n\r\n        // Add actions to action list\r\n        this.actionHandler.addActions(actions, groupData);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Whether the magic item is equipped or not\r\n     * @param {object} magicItem The item\r\n     * @returns {boolean}\r\n     */\r\n    _isItemEquipped(magicItem) {\r\n      return magicItem.item.system.equipped;\r\n    }\r\n\r\n    /**\r\n     * Whether the magic items is attuned or not\r\n     * @param {object} magicItem The item\r\n     * @returns {boolean}\r\n     */\r\n    _isItemAttuned(magicItem) {\r\n      const attunement = magicItem.item.system.attunment;\r\n      const attunementRequired = CONFIG.DND5E.attunementTypes?.REQUIRED ?? 1;\r\n\r\n      if (attunement === attunementRequired) return false;\r\n\r\n      return true;\r\n    }\r\n  };\r\n});\r\n","export let RollHandler = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  RollHandler = class RollHandler extends coreModule.api.RollHandler {\r\n    /**\r\n     * Handle action click\r\n     * @override\r\n     * @param {object} event\r\n     * @param {string} encodedValue\r\n     */\r\n    async handleActionClick(event, encodedValue) {\r\n      const [actionType, actionId] = encodedValue.split(\"|\");\r\n\r\n      if (!this.actor) {\r\n        for (const token of coreModule.api.Utils.getControlledTokens()) {\r\n          const actor = token.actor;\r\n          await this.#handleAction(event, actionType, actor, token, actionId);\r\n        }\r\n      } else {\r\n        await this.#handleAction(event, actionType, this.actor, this.token, actionId);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Handle action\r\n     * @private\r\n     * @param {object} event\r\n     * @param {string} actionType\r\n     * @param {object} actor\r\n     * @param {object} token\r\n     * @param {string} actionId\r\n     */\r\n    async #handleAction(event, actionType, actor, token, actionId) {\r\n      switch (actionType) {\r\n        case \"ability\":\r\n          this.#rollAbility(event, actor, actionId);\r\n          break;\r\n        case \"check\":\r\n          this.#rollAbilityTest(event, actor, actionId);\r\n          break;\r\n        case \"save\":\r\n          this.#rollAbilitySave(event, actor, actionId);\r\n          break;\r\n        case \"condition\":\r\n          if (!token) return;\r\n          await this.#toggleCondition(event, actor, token, actionId);\r\n          break;\r\n        case \"counter\":\r\n          await this.#modifyCounter(event, actor, actionId);\r\n          break;\r\n        case \"effect\":\r\n          await this.#toggleEffect(event, actor, actionId);\r\n          break;\r\n        case \"exhaustion\":\r\n          await this.#modifyExhaustion(event, actor);\r\n          break;\r\n        case \"feature\":\r\n        case \"item\":\r\n        case \"spell\":\r\n        case \"weapon\":\r\n          if (this.isRenderItem()) this.renderItem(actor, actionId);\r\n          else this.#useItem(event, actor, actionId);\r\n          break;\r\n        case \"magicItem\":\r\n          await this.#rollMagicItem(actor, actionId);\r\n          break;\r\n        case \"skill\":\r\n          this.#rollSkill(event, actor, actionId);\r\n          break;\r\n        case \"utility\":\r\n          await this.#performUtilityAction(event, actor, token, actionId);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Modify Counter\r\n     * @private\r\n     * @param {object} event The event\r\n     * @param {object} actor The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async #modifyCounter(event, actor, actionId) {\r\n      switch (actionId) {\r\n        case \"death-saves\":\r\n          this.#rollDeathSave(event, actor);\r\n          break;\r\n        case \"exhaustion\":\r\n          await this.#modifyExhaustion(event, actor);\r\n          break;\r\n        case \"inspiration\":\r\n          await this.#modifyInspiration(actor);\r\n          break;\r\n        default:\r\n          await this.#modifyCustomCounter(event, actor, actionId);\r\n          break;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Modify Exhaustion\r\n     * @private\r\n     * @param {object} event The event\r\n     * @param {object} actor The actor\r\n     */\r\n    async #modifyExhaustion(event, actor) {\r\n      const isRightClick = this.isRightClick(event);\r\n      const exhaustion = actor.system.attributes.exhaustion;\r\n      const update = (isRightClick) ? exhaustion - 1 : exhaustion + 1;\r\n      if (update >= 0) {\r\n        actor.update({ \"system.attributes.exhaustion\": update });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Modify Inspiration\r\n     * @private\r\n     * @param {object} actor The actor\r\n     */\r\n    async #modifyInspiration(actor) {\r\n      const update = !actor.system.attributes.inspiration;\r\n      actor.update({ \"system.attributes.inspiration\": update });\r\n    }\r\n\r\n    /**\r\n     * Modify Custom Counter\r\n     * @private\r\n     * @param {object} event The event\r\n     * @param {object} actor The actor\r\n     * @param actionId\r\n     * * @param {string} actionId The action id\r\n     */\r\n    async #modifyCustomCounter(event, actor, actionId) {\r\n      if (!coreModule.api.Utils.isModuleActive(\"dnd5e-custom-counters\")) return;\r\n\r\n      const [id, type] = decodeURIComponent(actionId).split(\">\");\r\n\r\n      const isRightClick = this.isRightClick(event);\r\n      const isCtrl = this.isCtrl(event);\r\n      let value = actor.getFlag(\"dnd5e-custom-counters\", id);\r\n\r\n      switch (type) {\r\n        case \"checkbox\":\r\n          await actor.setFlag(\"dnd5e-custom-counters\", id, !value);\r\n          break;\r\n        case \"number\":\r\n          value = value ?? 0;\r\n          if (isRightClick) {\r\n            if (value > 0) {\r\n              await actor.setFlag(\"dnd5e-custom-counters\", id, value - 1);\r\n            }\r\n          } else {\r\n            await actor.setFlag(\"dnd5e-custom-counters\", id, value + 1);\r\n          }\r\n          break;\r\n        case \"successFailure\":\r\n          value = value ?? {};\r\n          value.success = value?.success ?? 0;\r\n          value.failure = value?.failure ?? 0;\r\n          if (isRightClick) {\r\n            if (isCtrl) {\r\n              if (value?.failure > 0) {\r\n                await actor.setFlag(\"dnd5e-custom-counters\", `${id}.failure`, value.failure - 1);\r\n              }\r\n            } else if (value?.success > 0) {\r\n              await actor.setFlag(\"dnd5e-custom-counters\", `${id}.success`, value.success - 1);\r\n            }\r\n          } else if (isCtrl) {\r\n            await actor.setFlag(\"dnd5e-custom-counters\", `${id}.failure`, value.failure + 1);\r\n          } else {\r\n            await actor.setFlag(\"dnd5e-custom-counters\", `${id}.success`, value.success + 1);\r\n          }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Roll Ability\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    #rollAbility(event, actor, actionId) {\r\n      if (!actor) return;\r\n      if (!actor.system?.abilities) return;\r\n      actor.rollAbility(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Roll Ability Save\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    #rollAbilitySave(event, actor, actionId) {\r\n      if (!actor) return;\r\n      if (!actor.system?.abilities) return;\r\n      actor.rollAbilitySave(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Roll Ability Test\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    #rollAbilityTest(event, actor, actionId) {\r\n      if (!actor) return;\r\n      if (!actor.system?.abilities) return;\r\n      actor.rollAbilityTest(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Roll Death Save\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     */\r\n    #rollDeathSave(event, actor) {\r\n      actor.rollDeathSave({ event });\r\n    }\r\n\r\n    /**\r\n     * Roll Magic Item\r\n     * @private\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async #rollMagicItem(actor, actionId) {\r\n      const actionParts = actionId.split(\">\");\r\n\r\n      const itemId = actionParts[0];\r\n      const magicEffectId = actionParts[1];\r\n\r\n      const magicItemActor = await MagicItems.actor(actor.id);\r\n\r\n      // Magicitems module 3.0.0 does not support Item5e#use\r\n      magicItemActor.roll(itemId, magicEffectId);\r\n\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Roll Skill\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    #rollSkill(event, actor, actionId) {\r\n      if (!actor) return;\r\n      if (!actor.system?.skills) return;\r\n      actor.rollSkill(actionId, { event });\r\n    }\r\n\r\n    /**\r\n     * Use Item\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     * @returns {object}        The item\r\n     */\r\n    #useItem(event, actor, actionId) {\r\n      const item = coreModule.api.Utils.getItem(actor, actionId);\r\n\r\n      if (this.#needsRecharge(item)) {\r\n        item.rollRecharge();\r\n        return;\r\n      }\r\n\r\n      return item.use({ event, legacy: false });\r\n    }\r\n\r\n    /**\r\n     * Needs Recharge\r\n     * @private\r\n     * @param {object} item\r\n     * @returns {boolean}\r\n     */\r\n    #needsRecharge(item) {\r\n      return (\r\n        item?.system?.uses?.period === \"recharge\"\r\n                && !item?.system?.uses?.value > 0\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Perform utility action\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {object} token    The token\r\n     * @param {string} actionId The action id\r\n     */\r\n    async #performUtilityAction(event, actor, token, actionId) {\r\n      switch (actionId) {\r\n        case \"deathSave\":\r\n          this.#rollDeathSave(event, actor);\r\n          break;\r\n        case \"endTurn\":\r\n          if (!token) break;\r\n          if (game.combat?.current?.tokenId === token.id) {\r\n            await game.combat?.nextTurn();\r\n          }\r\n          break;\r\n        case \"initiative\":\r\n          await this.#rollInitiative(actor);\r\n          break;\r\n        case \"inspiration\":\r\n          await this.#modifyInspiration(actor);\r\n          break;\r\n        case \"longRest\":\r\n          actor.longRest();\r\n          break;\r\n        case \"shortRest\":\r\n          actor.shortRest();\r\n          break;\r\n      }\r\n\r\n      // Update HUD\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Roll Initiative\r\n     * @param {object} actor The actor\r\n     * @private\r\n     */\r\n    async #rollInitiative(actor) {\r\n      if (!actor) return;\r\n      await actor.rollInitiative({ createCombatants: true });\r\n\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Toggle Condition\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {object} token    The token\r\n     * @param {string} actionId The action id\r\n     */\r\n    async #toggleCondition(event, actor, token, actionId) {\r\n      if (!token) return;\r\n\r\n      const isRightClick = this.isRightClick(event);\r\n      const statusEffect = CONFIG.statusEffects.find(statusEffect => statusEffect.id === actionId);\r\n      const isConvenient = (statusEffect?.flags)\r\n        ? Object.hasOwn(statusEffect.flags, \"dfreds-convenient-effects\")\r\n          ? statusEffect.flags[\"dfreds-convenient-effects\"].isConvenient\r\n          : null\r\n        : null\r\n                ?? actionId.startsWith(\"Convenient Effect\");\r\n\r\n      if (game.dfreds && isConvenient) {\r\n        isRightClick\r\n          ? await game.dfreds.effectInterface.toggleEffect(statusEffect.name ?? statusEffect.label, { overlay: true })\r\n          : await game.dfreds.effectInterface.toggleEffect(statusEffect.name ?? statusEffect.label);\r\n      } else {\r\n        const condition = this.#findCondition(actionId);\r\n        if (!condition) return;\r\n        const effect = this.#findEffect(actor, actionId);\r\n        if (effect?.disabled) { await effect.delete(); }\r\n\r\n        isRightClick\r\n          ? await actor.toggleStatusEffect(condition.id, { overlay: true })\r\n          : await actor.toggleStatusEffect(condition.id);\r\n      }\r\n\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Find condition\r\n     * @private\r\n     * @param {string} actionId The action id\r\n     * @returns {object}        The condition\r\n     */\r\n    #findCondition(actionId) {\r\n      return CONFIG.statusEffects.find(effect => effect.id === actionId);\r\n    }\r\n\r\n    /**\r\n     * Find effect\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     * @returns {object}        The effect\r\n     */\r\n    #findEffect(actor, actionId) {\r\n      if (game.version.startsWith(\"11\")) {\r\n        return actor.effects.find(effect => effect.statuses.every(status => status === actionId));\r\n      } else {\r\n        // V10\r\n        return actor.effects.find(effect => effect.flags?.core?.statusId === actionId);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Toggle Effect\r\n     * @private\r\n     * @param {object} event    The event\r\n     * @param {object} actor    The actor\r\n     * @param {string} actionId The action id\r\n     */\r\n    async #toggleEffect(event, actor, actionId) {\r\n      const effects = \"find\" in actor.effects.entries ? actor.effects.entries : actor.effects;\r\n      let effect = effects.find(effect => effect.id === actionId);\r\n\r\n      // Only allow deletion if effect is directly on this actor\r\n      let internalEffect = true;\r\n\r\n      // If the effect isn't directly on the actor, search all applicable effects for it\r\n      if (!effect) {\r\n        internalEffect = false;\r\n        for (const e of actor.allApplicableEffects()) {\r\n          if (e.id === actionId) {\r\n            effect = e;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!effect) return;\r\n\r\n      const isRightClick = this.isRightClick(event);\r\n\r\n      if (isRightClick && internalEffect) {\r\n        await effect.delete();\r\n      } else {\r\n        await effect.update({ disabled: !effect.disabled });\r\n      }\r\n\r\n      Hooks.callAll(\"forceUpdateTokenActionHud\");\r\n    }\r\n\r\n    /**\r\n     * Handle action hover\r\n     * @override\r\n     * @param {object} event\r\n     * @param {string} encodedValue\r\n     */\r\n    async handleActionHover(event, encodedValue) {\r\n      const types = [\"feature\", \"item\", \"spell\", \"weapon\", \"magicItem\"];\r\n      const [actionType, actionId] = encodedValue.split(\"|\");\r\n\r\n      if (!types.includes(actionType)) return;\r\n\r\n      const item = coreModule.api.Utils.getItem(this.actor, actionId);\r\n\r\n      switch (event.type) {\r\n        case \"mouseenter\":\r\n        case \"mouseover\":\r\n          Hooks.call(\"tokenActionHudSystemActionHoverOn\", event, item);\r\n          break;\r\n        case \"mouseleave\":\r\n        case \"mouseout\":\r\n          Hooks.call(\"tokenActionHudSystemActionHoverOff\", event, item);\r\n          break;\r\n      }\r\n    }\r\n  };\r\n});\r\n","import { RollHandler } from \"./roll-handler.js\";\r\n\r\nexport class RollHandlerObsidian extends RollHandler {\r\n  /**\r\n   * Roll Ability Test\r\n   * @override\r\n   * @param {object} event\r\n   * @param {string} actionId\r\n   */\r\n  _rollAbilityTest(event, actionId) {\r\n    OBSIDIAN.Items.roll(super.actor, { roll: \"abl\", abl: actionId });\r\n  }\r\n\r\n  /**\r\n   * Roll Ability Save\r\n   * @override\r\n   * @param {object} event\r\n   * @param {string} actorId\r\n   * @param {string} tokenId\r\n   * @param {string} actionId\r\n   */\r\n  _rollAbilitySave(event, actionId) {\r\n    OBSIDIAN.Items.roll(super.actor, { roll: \"save\", save: actionId });\r\n  }\r\n\r\n  /**\r\n   * Roll Skill\r\n   * @override\r\n   * @param {object} event\r\n   * @param {string} actionId\r\n   */\r\n  _rollSkill(event, actionId) {\r\n    OBSIDIAN.Items.roll(super.actor, { roll: \"skl\", skl: actionId });\r\n  }\r\n\r\n  /**\r\n   * Use Item\r\n   * @override\r\n   * @param {object} event\r\n   * @param {string} actionId\r\n   */\r\n  _useItem(event, actionId) {\r\n    OBSIDIAN.Items.roll(super.actor, { roll: \"item\", id: actionId });\r\n  }\r\n}\r\n","import { MODULE } from \"./constants.js\";\r\n\r\n/**\r\n *\r\n * @param updateFunc\r\n */\r\nexport function register(updateFunc) {\r\n  game.settings.register(MODULE.ID, \"abbreviateSkills\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.abbreviateSkills.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.abbreviateSkills.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showSlowActions\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showSlowActions.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showSlowActions.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"displaySpellInfo\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.displaySpellInfo.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.displaySpellInfo.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnchargedItems\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnchargedItems.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnchargedItems.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnequippedItems\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItems.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItems.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnequippedItemsNpcs\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItemsNpcs.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnequippedItemsNpcs.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showUnpreparedSpells\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnpreparedSpells.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showUnpreparedSpells.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n\r\n  game.settings.register(MODULE.ID, \"showItemsWithoutActivationCosts\", {\r\n    name: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showItemsWithoutActivationCosts.name\"\r\n    ),\r\n    hint: game.i18n.localize(\r\n      \"tokenActionHud.dnd5e.settings.showItemsWithoutActivationCosts.hint\"\r\n    ),\r\n    scope: \"client\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: false,\r\n    onChange: value => {\r\n      updateFunc(value);\r\n    }\r\n  });\r\n}\r\n","// System Module Imports\r\nimport { ActionHandler } from \"./action-handler.js\";\r\nimport { MagicItemActionHandlerExtender } from \"./magic-items-extender.js\";\r\nimport { RollHandler as Core } from \"./roll-handler.js\";\r\nimport { RollHandlerObsidian as Obsidian5e } from \"./roll-handler-obsidian.js\";\r\nimport { DEFAULTS } from \"./defaults.js\";\r\nimport * as systemSettings from \"./settings.js\";\r\n\r\nexport let SystemManager = null;\r\n\r\nHooks.once(\"tokenActionHudCoreApiReady\", async coreModule => {\r\n  SystemManager = class SystemManager extends coreModule.api.SystemManager {\r\n    /** @override */\r\n    getActionHandler() {\r\n      const actionHandler = new ActionHandler();\r\n      if (coreModule.api.Utils.isModuleActive(\"magic-items-2\") || coreModule.api.Utils.isModuleActive(\"magicitems\")) { actionHandler.addActionHandlerExtender(new MagicItemActionHandlerExtender(actionHandler)); }\r\n      return actionHandler;\r\n    }\r\n\r\n    /** @override */\r\n    getAvailableRollHandlers() {\r\n      let coreTitle = \"Core D&D5e\";\r\n\r\n      if (coreModule.api.Utils.isModuleActive(\"midi-qol\")) { coreTitle += ` [supports ${coreModule.api.Utils.getModuleTitle(\"midi-qol\")}]`; }\r\n\r\n      const choices = { core: coreTitle };\r\n      coreModule.api.SystemManager.addHandler(choices, \"obsidian\");\r\n\r\n      return choices;\r\n    }\r\n\r\n    /** @override */\r\n    getRollHandler(rollHandlerId) {\r\n      let rollHandler;\r\n      switch (rollHandlerId) {\r\n        case \"obsidian\":\r\n          rollHandler = new Obsidian5e();\r\n          break;\r\n        case \"core\":\r\n        default:\r\n          rollHandler = new Core();\r\n          break;\r\n      }\r\n\r\n      return rollHandler;\r\n    }\r\n\r\n    /** @override */\r\n    registerSettings(onChangeFunction) {\r\n      systemSettings.register(onChangeFunction);\r\n    }\r\n\r\n    /** @override */\r\n    async registerDefaults() {\r\n      const defaults = DEFAULTS;\r\n      // If the 'Magic Items' module is active, then add a group for it\r\n      if (game.modules.get(\"magicitems\")?.active || game.modules.get(\"magic-items-2\")?.active) {\r\n        const name = coreModule.api.Utils.i18n(\"tokenActionHud.dnd5e.magicItems\");\r\n        defaults.groups.push(\r\n          {\r\n            id: \"magic-items\",\r\n            name,\r\n            listName: `Group: ${name}`,\r\n            type: \"system\"\r\n          }\r\n        );\r\n        defaults.groups.sort((a, b) => a.id.localeCompare(b.id));\r\n      }\r\n      return defaults;\r\n    }\r\n  };\r\n});\r\n","import { SystemManager } from \"./system-manager.js\";\r\nimport { MODULE, REQUIRED_CORE_MODULE_VERSION } from \"./constants.js\";\r\n\r\nHooks.on(\"tokenActionHudCoreApiReady\", async () => {\r\n  const module = game.modules.get(MODULE.ID);\r\n  module.api = {\r\n    requiredCoreModuleVersion: REQUIRED_CORE_MODULE_VERSION,\r\n    SystemManager\r\n  };\r\n  Hooks.call(\"tokenActionHudSystemReady\", module);\r\n});\r\n"],"names":["MODULE","ID","CORE_MODULE","REQUIRED_CORE_MODULE_VERSION","ACTION_TYPE","ability","check","condition","counter","effect","exhaustion","feature","item","save","skill","spell","utility","ACTIVATION_TYPE","action","group","bonus","icon","crew","day","hour","lair","minute","legendary","reaction","reactiondamage","reactionmanual","special","other","CONCENTRATION_ICON","CUSTOM_DND5E","COUNTERS","character","npc","FEATURE_GROUP_IDS","GROUP","_1stLevelSpells","id","name","type","_2ndLevelSpells","_3rdLevelSpells","_4thLevelSpells","_5thLevelSpells","_6thLevelSpells","_7thLevelSpells","_8thLevelSpells","_9thLevelSpells","abilities","actions","activeFeatures","artificerInfusions","atWillSpells","backgroundFeatures","bonusActions","cantrips","channelDivinity","checks","classFeatures","combat","conditions","consumables","containers","counters","crewActions","defensiveTactics","eldritchInvocations","elementalDisciplines","equipment","equipped","feats","fightingStyles","huntersPrey","innateSpells","kiAbilities","lairActions","legendaryActions","loot","maneuvers","metamagicOptions","monsterFeatures","multiattacks","otherActions","pactBoons","pactSpells","passiveEffects","passiveFeatures","psionicPowers","raceFeatures","reactions","rests","runes","saves","skills","superiorHuntersDefense","temporaryEffects","token","tools","unequipped","weapons","PREPARED_ICON","PROFICIENCY_LEVEL_ICON","RARITY","common","uncommon","rare","veryRare","artifact","RITUAL_ICON","SPELL_GROUP_IDS","DEFAULTS","Hooks","once","async","groups","Object","values","forEach","coreModule","api","Utils","i18n","listName","groupsArray","layout","nestId","static","key","defaultValue","value","game","settings","get","Logger","debug","set","ActionHandler","featureActions","inventoryActions","spellActions","groupIds","this","actors","actor","getValidActors","tokens","getValidTokens","items","sortItemsByName","discardSlowItems","abbreviateSkills","getSetting","displaySpellInfo","showItemsWithoutActivationCosts","showUnchargedItems","showUnequippedItems","showUnpreparedSpells","activationgroupIds","inventorygroupIds","buildCharacterActions","buildVehicleActions","buildMultipleTokenActions","Promise","all","buildConditions","buildEffects","buildFeatures","buildInventory","buildSpells","buildAbilities","buildCombat","buildCounters","buildExhaustion","buildRests","buildSkills","buildUtility","actionType","groupId","system","CONFIG","DND5E","length","buildAction","abilityId","label","mod","capitalize","encodedValue","join","delimiter","icon1","getProficiencyIcon","proficient","info1","text","getModifier","info2","getListName","entries","filter","map","groupData","addActions","data","actionData","activationItems","Map","activationType","activities","contents","activation","has","groupDataClone","includes","defaultSelected","parentgroupData","addGroup","addGroupInfo","buildActions","combatTypes","initiative","endTurn","current","tokenId","tokenIds","getControlledTokens","combatants","combatant","getInfo1","combatTypeId","class","combatType","localize","cssClass","every","statusEffects","hasCondition","effects","some","statuses","status","disabled","img","getImage","tooltip","getTooltip","getConditionTooltipData","isModuleActive","_","visible","active","attributes","death","success","failure","getFlag","encodeURIComponent","allApplicableEffects","size","conditionIds","keys","conditionTypes","dnd5e","utils","staticID","effectId","isSuppressed","parent","identified","user","isGM","isTemporary","featuresMap","featureTypes","classFeatureTypes","subType","subtype","featureType","groupNameMappings","buildActivations","inventoryMap","hasQuantity","quantity","isActiveItem","isUsableItem","isEquippedItem","restTypes","shortRest","longRest","restType","total","error","spellsMap","isUsableSpell","preparation","mode","level","systemSpells","spells","reverse","pactSlot","spellSlots","spellSlotAvailable","pactSlotAvailable","hasValue","hasMax","max","hasLevel","slotAvailable","startsWith","push","slotsAvailable","pactSpellEquivalent","findIndex","groupMappings","spellMode","spellSlotModes","groupName","levelInfo","find","spellSlot","slots","groupInfo","info","utilityTypes","deathSave","inspiration","hp","utilityType","options","getAction","entity","_id","hasOwn","getItemInfo","getTooltipData","getActivationTypeIcon","icon2","getPreparedIcon","icon3","getConcentrationIcon","info3","activationTypes","Set","activityActivationTypes","uses","preparationModes","spellPreparationModes","preparationMode","prepared","actionName","getSpellInfo","getQuantityData","getUsesData","getConsumeData","components","properties","title","componentsArray","vocal","somatic","material","ritual","allowedTypes","consumeName","consumeAmount","per","prompt","of","period","limitedUsePeriods","amount","undefined","firstActivity","firstTarget","consumption","targets","consumeId","target","consumeType","parentId","substr","lastIndexOf","foundry","getProperty","slowActivationTypes","proficiencyLevels","abilityActivationTypes","tooltipsSetting","unidentified","description","modifiers","rarity","traits","chatProperties","equippableItemCardProperties","labels","range","duration","p","getWeaponProperties","journalEntry","fromUuid","reference","content","relativeTo","tooltipData","nameHtml","descriptionLocalised","TextEditor","enrichHTML","secrets","rarityHtml","propertiesHtml","property","traitsHtml","trait","traits2Html","traits2","traitsAltHtml","traitsAlt","modifiersHtml","modifier","enabled","tagsJoined","tagsHtml","weaponProperties","selected","validProperties","weapon","itemProperties","MagicItemActionHandlerExtender","ActionHandlerExtender","constructor","actionHandler","super","MagicItems","magicItems","parentGroupData","magicItem","attuned","_isItemAttuned","_isItemEquipped","charges","ownedEntries","entry","baseLevel","attunment","attunementTypes","REQUIRED","RollHandler","event","actionId","split","handleAction","rollAbility","rollAbilityTest","rollAbilitySave","toggleCondition","modifyCounter","toggleEffect","modifyExhaustion","isRenderItem","renderItem","useItem","rollMagicItem","rollSkill","performUtilityAction","rollDeathSave","modifyInspiration","modifyCustomCounter","isRightClick","update","decodeURIComponent","isCtrl","setFlag","actionParts","itemId","magicEffectId","roll","callAll","getItem","needsRecharge","use","legacy","rollRecharge","nextTurn","rollInitiative","createCombatants","statusEffect","isConvenient","flags","dfreds","effectInterface","overlay","findCondition","findEffect","delete","toggleStatusEffect","version","core","statusId","internalEffect","e","call","RollHandlerObsidian","_rollAbilityTest","OBSIDIAN","Items","abl","_rollAbilitySave","_rollSkill","skl","_useItem","register","updateFunc","hint","scope","config","Boolean","default","onChange","SystemManager","getActionHandler","addActionHandlerExtender","getAvailableRollHandlers","coreTitle","getModuleTitle","choices","addHandler","getRollHandler","rollHandlerId","rollHandler","Obsidian5e","Core","registerSettings","onChangeFunction","systemSettings.register","defaults","modules","sort","a","b","localeCompare","on","module","requiredCoreModuleVersion"],"mappings":"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"}