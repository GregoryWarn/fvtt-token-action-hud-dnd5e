const e={ID:"token-action-hud-dnd5e"},t={ID:"token-action-hud-core"},s="1.5",i={ability:"DND5E.Ability",check:"tokenActionHud.dnd5e.check",condition:"tokenActionHud.dnd5e.condition",counter:"tokenActionHud.dnd5e.counter",effect:"DND5E.Effect",exhaustion:"DND5E.Exhaustion",feature:"TYPES.Item.feat",item:"tokenActionHud.dnd5e.item",save:"DND5E.SAVE.Title.one",skill:"tokenActionHud.dnd5e.skill",spell:"TYPES.Item.spell",utility:"DND5E.ActionUtil"},n={action:{group:"actions"},bonus:{group:"bonus-actions",icon:"fas fa-plus"},crew:{group:"crew-actions",icon:"fas fa-users"},day:{icon:"fas fa-hourglass-end"},hour:{icon:"fas fa-hourglass-half"},lair:{group:"lair-actions",icon:"fas fa-home"},minute:{icon:"fas fa-hourglass-start"},legendary:{group:"legendary-actions",icon:"fas fas fa-dragon"},reaction:{group:"reactions",icon:"fas fa-bolt"},reactiondamage:{group:"reactions",icon:"fas fa-bolt"},reactionmanual:{group:"reactions",icon:"fas fa-bolt"},special:{group:"special-actions",icon:"fas fa-star"},other:{group:"other-actions"}},a="systems/dnd5e/icons/svg/statuses/concentrating.svg",l={ID:"custom-dnd5e",COUNTERS:{character:"character-counters",group:"group-counters",npc:"npc-counters"}},o=["active-features","passive-features","background-features","class-features","feats","monster-features","race-features","artificer-infusions","channel-divinity","defensive-tactics","eldritch-invocations","elemental-disciplines","fighting-styles","hunters-prey","ki-abilities","maneuvers","metamagic-options","multiattacks","pact-boons","psionic-powers","runes","superior-hunters-defense"],c={_1stLevelSpells:{id:"1st-level-spells",name:"tokenActionHud.dnd5e.1stLevelSpells",type:"system"},_2ndLevelSpells:{id:"2nd-level-spells",name:"tokenActionHud.dnd5e.2ndLevelSpells",type:"system"},_3rdLevelSpells:{id:"3rd-level-spells",name:"tokenActionHud.dnd5e.3rdLevelSpells",type:"system"},_4thLevelSpells:{id:"4th-level-spells",name:"tokenActionHud.dnd5e.4thLevelSpells",type:"system"},_5thLevelSpells:{id:"5th-level-spells",name:"tokenActionHud.dnd5e.5thLevelSpells",type:"system"},_6thLevelSpells:{id:"6th-level-spells",name:"tokenActionHud.dnd5e.6thLevelSpells",type:"system"},_7thLevelSpells:{id:"7th-level-spells",name:"tokenActionHud.dnd5e.7thLevelSpells",type:"system"},_8thLevelSpells:{id:"8th-level-spells",name:"tokenActionHud.dnd5e.8thLevelSpells",type:"system"},_9thLevelSpells:{id:"9th-level-spells",name:"tokenActionHud.dnd5e.9thLevelSpells",type:"system"},abilities:{id:"abilities",name:"tokenActionHud.dnd5e.abilities",type:"system"},actions:{id:"actions",name:"DND5E.ActionPl",type:"system"},activeFeatures:{id:"active-features",name:"tokenActionHud.dnd5e.activeFeatures",type:"system"},artificerInfusions:{id:"artificer-infusions",name:"tokenActionHud.dnd5e.artificerInfusions",type:"system"},atWillSpells:{id:"at-will-spells",name:"tokenActionHud.dnd5e.atWillSpells",type:"system"},backgroundFeatures:{id:"background-features",name:"tokenActionHud.dnd5e.backgroundFeatures",type:"system"},bonusActions:{id:"bonus-actions",name:"tokenActionHud.dnd5e.bonusActions",type:"system"},cantrips:{id:"cantrips",name:"tokenActionHud.dnd5e.cantrips",type:"system"},channelDivinity:{id:"channel-divinity",name:"tokenActionHud.dnd5e.channelDivinity",type:"system"},checks:{id:"checks",name:"tokenActionHud.dnd5e.checks",type:"system"},classFeatures:{id:"class-features",name:"tokenActionHud.dnd5e.classFeatures",type:"system"},combat:{id:"combat",name:"tokenActionHud.combat",type:"system"},conditions:{id:"conditions",name:"tokenActionHud.dnd5e.conditions",type:"system"},consumables:{id:"consumables",name:"TYPES.Item.consumablePl",type:"system"},containers:{id:"containers",name:"TYPES.Item.containerPl",type:"system"},counters:{id:"counters",name:"tokenActionHud.dnd5e.counters",type:"system"},crewActions:{id:"crew-actions",name:"tokenActionHud.dnd5e.crewActions",type:"system"},defensiveTactics:{id:"defensive-tactics",name:"tokenActionHud.dnd5e.defensiveTactics",type:"system"},eldritchInvocations:{id:"eldritch-invocations",name:"tokenActionHud.dnd5e.eldritchInvocations",type:"system"},elementalDisciplines:{id:"elemental-disciplines",name:"tokenActionHud.dnd5e.elementalDisciplines",type:"system"},equipment:{id:"equipment",name:"TYPES.Item.equipmentPl",type:"system"},equipped:{id:"equipped",name:"DND5E.Equipped",type:"system"},exhaustion:{id:"exhaustion",name:"DND5E.Exhaustion",type:"system"},feats:{id:"feats",name:"tokenActionHud.dnd5e.feats",type:"system"},fightingStyles:{id:"fighting-styles",name:"tokenActionHud.dnd5e.fightingStyles",type:"system"},huntersPrey:{id:"hunters-prey",name:"tokenActionHud.dnd5e.huntersPrey",type:"system"},innateSpells:{id:"innate-spells",name:"tokenActionHud.dnd5e.innateSpells",type:"system"},kiAbilities:{id:"ki-abilities",name:"tokenActionHud.dnd5e.kiAbilities",type:"system"},lairActions:{id:"lair-actions",name:"tokenActionHud.dnd5e.lairActions",type:"system"},legendaryActions:{id:"legendary-actions",name:"tokenActionHud.dnd5e.legendaryActions",type:"system"},loot:{id:"loot",name:"TYPES.Item.lootPl",type:"system"},maneuvers:{id:"maneuvers",name:"tokenActionHud.dnd5e.maneuvers",type:"system"},metamagicOptions:{id:"metamagic-options",name:"tokenActionHud.dnd5e.metamagicOptions",type:"system"},monsterFeatures:{id:"monster-features",name:"tokenActionHud.dnd5e.monsterFeatures",type:"system"},multiattacks:{id:"multiattacks",name:"tokenActionHud.dnd5e.multiattacks",type:"system"},otherActions:{id:"other-actions",name:"tokenActionHud.dnd5e.otherActions",type:"system"},pactBoons:{id:"pact-boons",name:"tokenActionHud.dnd5e.pactBoons",type:"system"},pactSpells:{id:"pact-spells",name:"tokenActionHud.dnd5e.pactSpells",type:"system"},passiveEffects:{id:"passive-effects",name:"DND5E.EffectPassive",type:"system"},passiveFeatures:{id:"passive-features",name:"tokenActionHud.dnd5e.passiveFeatures",type:"system"},psionicPowers:{id:"psionic-powers",name:"tokenActionHud.dnd5e.psionicPowers",type:"system"},raceFeatures:{id:"race-features",name:"tokenActionHud.dnd5e.raceFeatures",type:"system"},reactions:{id:"reactions",name:"DND5E.ReactionPl",type:"system"},rests:{id:"rests",name:"tokenActionHud.dnd5e.rests",type:"system"},runes:{id:"runes",name:"tokenActionHud.dnd5e.runes",type:"system"},saves:{id:"saves",name:"DND5E.ClassSaves",type:"system"},skills:{id:"skills",name:"tokenActionHud.dnd5e.skills",type:"system"},superiorHuntersDefense:{id:"superior-hunters-defense",name:"tokenActionHud.dnd5e.superiorHuntersDefense",type:"system"},temporaryEffects:{id:"temporary-effects",name:"DND5E.EffectTemporary",type:"system"},token:{id:"token",name:"tokenActionHud.token",type:"system"},tools:{id:"tools",name:"TYPES.Item.toolPl",type:"system"},unequipped:{id:"unequipped",name:"DND5E.Unequipped",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"},weapons:{id:"weapons",name:"TYPES.Item.weaponPl",type:"system"}},r="fas fa-sun",d={.5:"fas fa-adjust",1:"fas fa-check",2:"fas fa-check-double"},p={common:"tokenActionHud.dnd5e.common",uncommon:"tokenActionHud.dnd5e.uncommon",rare:"tokenActionHud.dnd5e.rare",veryRare:"tokenActionHud.dnd5e.veryRare",legendary:"tokenActionHud.dnd5e.legendary",artifact:"tokenActionHud.dnd5e.artifact"},u="fas fa-circle-r",m=["cantrips","1st-level-spells","2nd-level-spells","3rd-level-spells","4th-level-spells","5th-level-spells","6th-level-spells","7th-level-spells","8th-level-spells","9th-level-spells","at-will-spells","innate-spells","pact-spells"];let h=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{const t=c;Object.values(t).forEach((t=>{t.name=e.api.Utils.i18n(t.name),t.listName=`Group: ${e.api.Utils.i18n(t.name)}`}));const s=Object.values(t);h={layout:[{nestId:"inventory",id:"inventory",name:e.api.Utils.i18n("DND5E.Inventory"),groups:[{...t.weapons,nestId:"inventory_weapons"},{...t.equipment,nestId:"inventory_equipment"},{...t.consumables,nestId:"inventory_consumables"},{...t.tools,nestId:"inventory_tools"},{...t.containers,nestId:"inventory_containers"},{...t.loot,nestId:"inventory_loot"}]},{nestId:"features",id:"features",name:e.api.Utils.i18n("DND5E.Features"),groups:[{...t.activeFeatures,nestId:"features_active-features"},{...t.passiveFeatures,nestId:"features_passive-features"}]},{nestId:"spells",id:"spells",name:e.api.Utils.i18n("TYPES.Item.spellPl"),groups:[{...t.atWillSpells,nestId:"spells_at-will-spells"},{...t.innateSpells,nestId:"spells_innate-spells"},{...t.pactSpells,nestId:"spells_pact-spells"},{...t.cantrips,nestId:"spells_cantrips"},{...t._1stLevelSpells,nestId:"spells_1st-level-spells"},{...t._2ndLevelSpells,nestId:"spells_2nd-level-spells"},{...t._3rdLevelSpells,nestId:"spells_3rd-level-spells"},{...t._4thLevelSpells,nestId:"spells_4th-level-spells"},{...t._5thLevelSpells,nestId:"spells_5th-level-spells"},{...t._6thLevelSpells,nestId:"spells_6th-level-spells"},{...t._7thLevelSpells,nestId:"spells_7th-level-spells"},{...t._8thLevelSpells,nestId:"spells_8th-level-spells"},{...t._9thLevelSpells,nestId:"spells_9th-level-spells"}]},{nestId:"attributes",id:"attributes",name:e.api.Utils.i18n("DND5E.Attributes"),groups:[{...t.abilities,nestId:"attributes_abilities"},{...t.skills,nestId:"attributes_skills"}]},{nestId:"effects",id:"effects",name:e.api.Utils.i18n("DND5E.Effects"),groups:[{...t.temporaryEffects,nestId:"effects_temporary-effects"},{...t.passiveEffects,nestId:"effects_passive-effects"},{...t.conditions,nestId:"effects_conditions"}]},{nestId:"utility",id:"utility",name:e.api.Utils.i18n("tokenActionHud.utility"),groups:[{...t.combat,nestId:"utility_combat"},{...t.token,nestId:"utility_token"},{...t.rests,nestId:"utility_rests"},{...t.utility,nestId:"utility_utility"}]}],groups:s}}));let g=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{g=class Utils{static getSetting(s,i=null){let n=i??null;try{n=game.settings.get(e.ID,s)}catch{t.api.Logger.debug(`Setting '${s}' not found`)}return n}static async setSetting(s,i){try{i=await game.settings.set(e.ID,s,i),t.api.Logger.debug(`Setting '${s}' set to '${i}'`)}catch{t.api.Logger.debug(`Setting '${s}' not found`)}}}}));let y=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{y=class ActionHandler extends e.api.ActionHandler{featureActions=null;inventoryActions=null;spellActions=null;async buildSystemActions(t){this.actors=this.actor?[this.actor]:this.#e(),this.tokens=this.token?[this.token]:this.#t(),this.actor&&(this.items=e.api.Utils.sortItemsByName(this.#s(this.actor.items))),this.abbreviateSkills=g.getSetting("abbreviateSkills"),this.displaySpellInfo=g.getSetting("displaySpellInfo"),this.showItemsWithoutActivationCosts=g.getSetting("showItemsWithoutActivationCosts"),this.showUnchargedItems=g.getSetting("showUnchargedItems"),this.showUnequippedItems=g.getSetting("showUnequippedItems"),"npc"!==this.actor?.type||this.showUnequippedItems||(this.showUnequippedItems=g.getSetting("showUnequippedItemsNpcs")),this.showUnpreparedSpells=g.getSetting("showUnpreparedSpells"),this.activationgroupIds=["actions","bonus-actions","crew-actions","lair-actions","legendary-actions","reactions","other-actions"],"character"===this.actor?.type||"npc"===this.actor?.type?(this.inventorygroupIds=["equipped","consumables","containers","equipment","loot","tools","weapons","unequipped"],await this.#i()):"vehicle"===this.actor?.type?(this.inventorygroupIds=["consumables","equipment","tools","weapons"],await this.#n()):this.actor||await this.#a()}async#i(){await Promise.all([this.#l(),this.#o(),this.#c(),this.#r(),this.#d()]),this.#p("ability","abilities"),this.#p("check","checks"),this.#p("save","saves"),this.#u(),this.#m(),this.#h(),this.#g(),this.#y(),this.#f()}async#n(){await Promise.all([this.#l(),this.#o(),this.#c(),this.#r()]),this.#p("ability","abilities"),this.#p("check","checks"),this.#p("save","saves"),this.#u(),this.#f()}async#a(){this.#p("ability","abilities"),this.#p("check","checks"),this.#p("save","saves"),this.#u(),await this.#l(),this.#g(),this.#y(),this.#f()}#p(t,s){const i=this.actor?.system.abilities||CONFIG.DND5E.abilities;if(0===i.length)return;const buildAction=(n,a)=>{const l=CONFIG.DND5E.abilities[n].label,o="saves"===s?a?.save:a?.mod;return{id:`${t}-${n}`,name:this.abbreviateSkills?e.api.Utils.capitalize(n):l,encodedValue:[t,n].join(this.delimiter),icon1:"checks"!==s?this.#v(i[n].proficient):"",info1:this.actor?{text:e.api.Utils.getModifier(o)}:null,info2:this.actor&&"abilities"===s?{text:`(${e.api.Utils.getModifier(a?.save)})`}:null,listName:this.#b(t,l)}},n=Object.entries(i).filter((e=>0!==i[e[0]].value)).map((([e,t])=>buildAction(e,t))),a={id:s};this.addActions(n,a)}async buildActivations(e){const{groupData:t,actionData:s,actionType:i="item"}=e,a=new Map;for(const[e,t]of s){const s=t.system?.activities?.contents[0]?.activation?.type,i=n[s]?.group??"other";a.has(i)||a.set(i,new Map),a.get(i).set(e,t)}for(const e of Object.values(n)){const s=e.group;if(!a.has(s))continue;const n={...t,id:`${s}+${t.id}`,type:"system-derived"};["equipped","unequipped"].includes(t.id)&&(n.defaultSelected=!1);const l={id:s,type:"system"};await this.addGroup(n,l),"spell"===i&&this.addGroupInfo(n),await this.buildActions({groupData:n,actionData:a.get(s),actionType:i})}}#u(){const t="utility",s={initiative:{id:"initiative",name:"tokenActionHud.dnd5e.rollInitiative"},endTurn:{id:"endTurn",name:"tokenActionHud.endTurn"}};game.combat?.current?.tokenId!==this.token?.id&&delete s.endTurn;const i=e.api.Utils.getControlledTokens()?.map((e=>e.id)),n=game.combat?game.combat.combatants.filter((e=>i.includes(e.tokenId))):[],getInfo1=e=>{if("initiative"===e&&1===n.length){return{class:"tah-spotlight",text:n[0].initiative}}return{}},a=Object.values(s).map((e=>({id:e.id,name:game.i18n.localize(e.name),encodedValue:[t,e.id].join(this.delimiter),info1:getInfo1(e.id),cssClass:"initiative"===e.id?"toggle"+(n.length>0&&n.every((e=>e?.initiative))?" active":""):"",listName:this.#b(t,e.name)})));this.addActions(a,{id:"combat"})}async#l(){if(0===this.tokens?.length)return;const t="condition",s=CONFIG.statusEffects.filter((e=>""!==e.id));if(0===s.length)return;const i=await Promise.all(s.map((async s=>{const i=this.actors.every((e=>e.effects.some((e=>e.statuses.some((e=>e===s.id))&&!e?.disabled)))),n=game.i18n.localize(s.label)??s.name;return{id:s.id,name:n,encodedValue:[t,s.id].join(this.delimiter),img:e.api.Utils.getImage(s),cssClass:"toggle"+(i?" active":""),listName:this.#b(t,n),tooltip:await this.#k(await this.#A(s.id,s.name))}})));this.addActions(i,{id:"conditions"})}async#m(){if(!l.COUNTERS[this.actor?.type])return;const t="counter";let s=game.settings.get(l.ID,l.COUNTERS[this.actor?.type])??[];s=e.api.Utils.isModuleActive(l.ID)&&s.length?Object.entries(s).filter((([e,t])=>t.visible)).map((([e,t])=>(t.key=e,t))):[{name:game.i18n.localize("DND5E.DeathSave"),type:"successFailure",system:!0,visible:!0,key:"death-saves"},{name:game.i18n.localize("DND5E.Exhaustion"),type:"number",system:!0,visible:!0,key:"exhaustion"},{name:game.i18n.localize("DND5E.Inspiration"),type:"checkbox",system:!0,visible:!0,key:"inspiration"}];const i=s.map((s=>{let i="",n="",a="",o="";if(s.system)switch(s.key){case"exhaustion":i=this.actor.system.attributes.exhaustion>0?" active":"",n=`toggle${i}`,a=e.api.Utils.getImage("modules/token-action-hud-dnd5e/icons/exhaustion.svg"),o={text:this.actor.system.attributes.exhaustion};break;case"death-saves":a=e.api.Utils.getImage("modules/token-action-hud-dnd5e/icons/death-saves.svg"),o={text:`${this.actor.system.attributes.death.success}/${this.actor.system.attributes.death.failure}`};break;case"inspiration":i=this.actor.system.attributes.inspiration?" active":"",n=`toggle${i}`,a=e.api.Utils.getImage("modules/token-action-hud-dnd5e/icons/inspiration.svg")}else{const e=this.actor.getFlag(l.ID,s.key);switch(s.type){case"checkbox":i=e?" active":"",n=`toggle${i}`;break;case"number":i=e>0?" active":"",n=`toggle${i}`,o={text:e};break;case"successFailure":o={text:`${e?.success??0}/${e?.failure??0}`}}}return{id:s.key,name:s.name,listName:this.#b(t,s.name),encodedValue:[t,s.system?s.key:encodeURIComponent(`${s.key}>${s.type}`)].join(this.delimiter),cssClass:n,img:a,info1:o}}));this.addActions(i,{id:"counters"})}async#o(){const e="effect",t=new Map;for(const e of this.actor.allApplicableEffects())t.set(e.id,e);if(0===t.size)return;const s=new Map,i=new Map,n=Object.keys(CONFIG.DND5E.conditionTypes).map((e=>dnd5e.utils.staticID(`dnd5e${e}`)));for(const[e,a]of t.entries()){if(a.isSuppressed)continue;if(!1===a.parent?.system?.identified&&!game.user.isGM)continue;if(n.includes(a.id))continue;a.isTemporary?i.set(e,a):s.set(e,a)}await Promise.all([this.buildActions({groupData:{id:"passive-effects",type:"system"},actionData:s,actionType:e}),this.buildActions({groupData:{id:"temporary-effects",type:"system"},actionData:i,actionType:e})])}#h(){if(0===this.actors.length)return;if(!this.actors.every((e=>"character"===e.type)))return;const t="exhaustion",s=[{cssClass:`toggle${this.actor.system.attributes.exhaustion>0?" active":""}`,id:"exhaustion",name:game.i18n.localize("DND5E.Exhaustion"),encodedValue:[t,"exhaustion"].join(this.delimiter),img:e.api.Utils.getImage("modules/token-action-hud-dnd5e/icons/exhaustion.svg"),info1:{text:this.actor.system.attributes.exhaustion},listName:this.#b(t,name)}];this.addActions(s,{id:"exhaustion"})}async#c(){const e=new Map;for(const[t,s]of this.items){"feat"===s.type&&e.set(t,s)}if(0===e.size)return;const t=new Map,s=[{type:"background",groupId:"background-features"},{type:"class",groupId:"class-features"},{type:"monster",groupId:"monster-features"},{type:"race",groupId:"race-features"},{type:"feats",groupId:"feats"}],i=[{type:"artificerInfusion",groupId:"artificer-infusions"},{type:"channelDivinity",groupId:"channel-divinity"},{type:"defensiveTactic",groupId:"defensive-tactics"},{type:"eldritchInvocation",groupId:"eldritch-invocations"},{type:"elementalDiscipline",groupId:"elemental-disciplines"},{type:"fightingStyle",groupId:"fighting-styles"},{type:"huntersPrey",groupId:"hunters-prey"},{type:"ki",groupId:"ki-abilities"},{type:"maneuver",groupId:"maneuvers"},{type:"metamagic",groupId:"metamagic-options"},{type:"multiattack",groupId:"multiattacks"},{type:"pact",groupId:"pact-boons"},{type:"psionicPower",groupId:"psionic-powers"},{type:"rune",groupId:"runes"},{type:"superiorHuntersDefense",groupId:"superior-hunters-defense"}];for(const[n,a]of e){const e=a.system.activities.contents[0]?.type,l=a.system.type.value,o=a.system.type?.subtype;e&&(t.has("active-features")||t.set("active-features",new Map),t.get("active-features").set(n,a)),e&&""!==e||(t.has("passive-features")||t.set("passive-features",new Map),t.get("passive-features").set(n,a));for(const e of s){const s=e.groupId;e.type===l&&(t.has(s)||t.set(s,new Map),t.get(s).set(n,a))}for(const e of i){const s=e.groupId;o&&e.type===o&&(t.has(s)||t.set(s,new Map),t.get(s).set(n,a))}}const n={"active-features":game.i18n.localize("tokenActionHud.dnd5e.activeFeatures"),"passive-features":game.i18n.localize("tokenActionHud.dnd5e.passiveFeatures")};for(const e of o){if(!t.has(e))continue;const s={groupData:{id:e,name:n[e]??""},actionData:t.get(e),actionType:"feature"};await this.buildActions(s),n[e]&&await this.buildActivations(s)}}async#r(){if(0===this.items.size)return;const e=new Map;for(const[t,s]of this.items){const i=s.system.equipped,n=s.system?.quantity>0,a=this.#I(s),l=this.#w(s),o=this.#D(s),c=s.type;n&&a&&(i&&(e.has("equipped")||e.set("equipped",new Map),e.get("equipped").set(t,s)),i||(e.has("unequipped")||e.set("unequipped",new Map),e.get("unequipped").set(t,s)),l&&"consumable"===c&&(e.has("consumables")||e.set("consumables",new Map),e.get("consumables").set(t,s)),o&&("container"===c&&(e.has("containers")||e.set("containers",new Map),e.get("containers").set(t,s)),"equipment"===c&&(e.has("equipment")||e.set("equipment",new Map),e.get("equipment").set(t,s)),"loot"===c&&(e.has("loot")||e.set("loot",new Map),e.get("loot").set(t,s)),"tool"===c&&(e.has("tools")||e.set("tools",new Map),e.get("tools").set(t,s)),"weapon"===c&&(e.has("weapons")||e.set("weapons",new Map),e.get("weapons").set(t,s))))}const t={equipped:"DND5E.Equipped",unequipped:"DND5E.Unequipped",consumables:"TYPES.Item.consumablePl",containers:"TYPES.Item.containerPl",equipment:"TYPES.Item.equipmentPl",loot:"TYPES.Item.lootPl",tools:"TYPES.Item.toolPl",weapons:"TYPES.Item.weaponPl"};for(const s of this.inventorygroupIds){if(!e.has(s))continue;const i={groupData:{id:s,name:game.i18n.localize(t[s])},actionData:e.get(s)};await this.buildActions(i),await this.buildActivations(i)}}#g(){if(0===this.actors.length)return;if(!this.actors.every((e=>"character"===e.type)))return;const e="utility",t={shortRest:{name:game.i18n.localize("DND5E.ShortRest")},longRest:{name:game.i18n.localize("DND5E.LongRest")}},s=Object.entries(t).map((t=>{const s=t[0],i=t[1].name,n=[e,s].join(this.delimiter);return{id:s,name:i,encodedValue:n,listName:this.#b(e,i)}}));this.addActions(s,{id:"rests"})}#y(){const t="skill",s=this.actor?.system.skills||CONFIG.DND5E.skills;if(0===s.length)return;const i=Object.entries(s).map((([s,i])=>{try{const n=CONFIG.DND5E.skills[s].label;return{id:s,name:this.abbreviateSkills?e.api.Utils.capitalize(s):n,encodedValue:[t,s].join(this.delimiter),icon1:this.#v(i.value),info1:this.actor?{text:e.api.Utils.getModifier(i.total)}:"",listName:this.#b(t,n)}}catch(t){return e.api.Logger.error(i),null}})).filter((e=>!!e));this.addActions(i,{id:"skills"})}async#d(){const e=new Map;for(const[t,s]of this.items){if("spell"===s.type){const i=this.#w(s),n=this.#S(s);if(i&&n){switch(s.system.preparation.mode){case"atwill":e.has("at-will-spells")||e.set("at-will-spells",new Map),e.get("at-will-spells").set(t,s);break;case"innate":e.has("innate-spells")||e.set("innate-spells",new Map),e.get("innate-spells").set(t,s);break;case"pact":e.has("pact-spells")||e.set("pact-spells",new Map),e.get("pact-spells").set(t,s);break;default:switch(s.system.level){case 0:e.has("cantrips")||e.set("cantrips",new Map),e.get("cantrips").set(t,s);break;case 1:e.has("1st-level-spells")||e.set("1st-level-spells",new Map),e.get("1st-level-spells").set(t,s);break;case 2:e.has("2nd-level-spells")||e.set("2nd-level-spells",new Map),e.get("2nd-level-spells").set(t,s);break;case 3:e.has("3rd-level-spells")||e.set("3rd-level-spells",new Map),e.get("3rd-level-spells").set(t,s);break;case 4:e.has("4th-level-spells")||e.set("4th-level-spells",new Map),e.get("4th-level-spells").set(t,s);break;case 5:e.has("5th-level-spells")||e.set("5th-level-spells",new Map),e.get("5th-level-spells").set(t,s);break;case 6:e.has("6th-level-spells")||e.set("6th-level-spells",new Map),e.get("6th-level-spells").set(t,s);break;case 7:e.has("7th-level-spells")||e.set("7th-level-spells",new Map),e.get("7th-level-spells").set(t,s);break;case 8:e.has("8th-level-spells")||e.set("8th-level-spells",new Map),e.get("8th-level-spells").set(t,s);break;case 9:e.has("9th-level-spells")||e.set("9th-level-spells",new Map),e.get("9th-level-spells").set(t,s)}}}}}const t=Object.entries(this.actor.system.spells).reverse();let s=null;const i=[];let n=this.showUnchargedItems,a=this.showUnchargedItems;for(const[e,l]of t){const t=l.value>0,o=l.max>0,c=l.level>0;"pact"===e&&(!a&&t&&o&&c&&(a=!0),c||(a=!1),l.slotAvailable=a,s=[e,l]),e.startsWith("spell")&&"spell0"!==e?(!n&&t&&o&&(n=!0),l.slotAvailable=n,i.push([e,l])):t&&(l.slotsAvailable=!0,i.push(e,l))}if(s[1].slotAvailable){const e=i.findIndex((e=>e[0]===`spell${s[1].level}`));i[e][1].slotsAvailable=!0}const l={"1st-level-spells":{spellMode:1,name:game.i18n.localize("tokenActionHud.dnd5e.1stLevelSpells")},"2nd-level-spells":{spellMode:2,name:game.i18n.localize("tokenActionHud.dnd5e.2ndLevelSpells")},"3rd-level-spells":{spellMode:3,name:game.i18n.localize("tokenActionHud.dnd5e.3rdLevelSpells")},"4th-level-spells":{spellMode:4,name:game.i18n.localize("tokenActionHud.dnd5e.4thLevelSpells")},"5th-level-spells":{spellMode:5,name:game.i18n.localize("tokenActionHud.dnd5e.5thLevelSpells")},"6th-level-spells":{spellMode:6,name:game.i18n.localize("tokenActionHud.dnd5e.6thLevelSpells")},"7th-level-spells":{spellMode:7,name:game.i18n.localize("tokenActionHud.dnd5e.7thLevelSpells")},"8th-level-spells":{spellMode:8,name:game.i18n.localize("tokenActionHud.dnd5e.8thLevelSpells")},"9th-level-spells":{spellMode:9,name:game.i18n.localize("tokenActionHud.dnd5e.9thLevelSpells")},"at-will-spells":{spellMode:"atwill",name:game.i18n.localize("tokenActionHud.dnd5e.atWillSpells")},cantrips:{spellMode:0,name:game.i18n.localize("tokenActionHud.dnd5e.cantrips")},"innate-spells":{spellMode:"innate",name:game.i18n.localize("tokenActionHud.dnd5e.innateSpells")},"pact-spells":{spellMode:"pact",name:game.i18n.localize("tokenActionHud.dnd5e.pactSpells")}},o=["1","2","3","4","5","6","7","8","9","pact"];for(const t of m){const n=l[t].spellMode,a=l[t].name;if(!e.has(t))continue;const c="pact"===n?s[1]:i.find((e=>e[0]===`spell${n}`))?.[1],r=c?.value,d=c?.max,p=c?.slotAvailable;if(!p&&o.includes(n))continue;const u={};u.info1={class:"tah-spotlight",text:d>=0?`${r}/${d}`:""};const m={id:t,name:a,info:u};this.addGroupInfo(m);const h={groupData:m,actionData:e.get(t),actionType:"spell"};await this.buildActions(h),await this.buildActivations(h)}}#f(){if(0===this.actors.length)return;if(!this.actors.every((e=>"character"===e.type)))return;const e="utility",t={deathSave:{name:game.i18n.localize("DND5E.DeathSave")},inspiration:{name:game.i18n.localize("DND5E.Inspiration")}};(!this.actor||this.actor.system.attributes.hp.value>0)&&delete t.deathSave;const s=Object.entries(t).map((t=>{const s=t[0],i=t[1].name,n=[e,s].join(this.delimiter);let a="";if("inspiration"===t[0]){a=`toggle${this.actors.every((e=>e.system.attributes?.inspiration))?" active":""}`}return{id:s,name:i,encodedValue:n,cssClass:a,listName:this.#b(e,i)}}));this.addActions(s,{id:"utility"})}async buildActions(e,t){const{actionData:s,groupData:i,actionType:n}=e;if(0===s.size)return;if(!("string"==typeof i?i:i?.id))return;const a=await Promise.all([...s].map((async e=>await this.#H(e[1],n))));this.addActions(a,i)}async#H(t,s="item"){const i=t.id??t._id;let n=t?.name??t?.label,a="";if(Object.hasOwn(t,"disabled")){a=`toggle${t.disabled?"":" active"}`}const l=this.#E(t),o=await this.#k(await this.#N(t));return{id:i,name:n,encodedValue:[s,i].join(this.delimiter),cssClass:a,img:e.api.Utils.getImage(t),icon1:this.#$(t.system?.activities?.contents[0]?.type),icon2:this.#C(t),icon3:this.#U(t),info1:l?.info1,info2:l?.info2,info3:l?.info3,listName:this.#b(s,n),tooltip:o}}#I(e){if(this.showItemsWithoutActivationCosts)return!0;const t=new Set(Object.keys(CONFIG.DND5E.activityActivationTypes).filter((e=>"none"!==e))),s=e.system?.activities?.contents[0]?.activation?.type;return t.has(s)||"tool"===e.type}#D(e){return this.showUnequippedItems&&!["consumable","spell","feat"].includes(e.type)||e.system.equipped&&"consumable"!==e.type}#w(e){return this.showUnchargedItems||e.system.uses}#S(e){if("character"!==this.actor?.type&&this.showUnequippedItems)return!0;if(this.showUnpreparedSpells)return!0;const t=new Set(Object.keys(CONFIG.DND5E.spellPreparationModes).filter((e=>"prepared"!==e)));return 0===e.system.level||t.has(e.system.preparation.mode)||e.system.preparation.prepared}#b(e,t){return`${`${game.i18n.localize(i[e])}: `??""}${t}`??""}#E(e){return{info1:"spell"===e.type?this.#M(e):this.#T(e),info2:this.#x(e),info3:this.#z(e)}}#M(e){if(!this.displaySpellInfo)return null;const t=e.system?.properties;if(!t)return null;const s={text:"",title:""},i=Object.entries({vocal:"DND5E.ComponentVerbal",somatic:"DND5E.ComponentSomatic",material:"DND5E.ComponentMaterial"}).filter((([e])=>t[e])).map((([e,t])=>(s.text+=game.i18n.localize(`${t}Abbr`),game.i18n.localize(t))));return t.ritual&&(i.push(`[${game.i18n.localize("DND5E.Ritual")}]`),s.text+=` [${game.i18n.localize("DND5E.RitualAbbr")}]`),s.title=i.join(", "),s}#e(){const e=["character","npc"];return this.actors.every((t=>e.includes(t.type)))?this.actors:[]}#t(){const e=["character","npc"];return this.actors.every((t=>e.includes(t.type)))?this.tokens:[]}#T(e){const t=e?.system?.quantity??0;return{text:t>1?t:"",title:`${game.i18n.localize("DND5E.Quantity")}: ${t}`}}#x(e,t,s){const i=e?.system?.uses;if(i?.per&&(t||i?.prompt)&&(i.value>0||i.max>0)){const e=game.i18n.localize("DND5E.of"),n="charges"===i.per?"":` ${game.i18n.localize("DND5E.per")}`,a=CONFIG.DND5E.limitedUsePeriods[i.per]?.label??i.per,l=void 0!==s?s:i.amount,o=`${l>1?`${l} ${e} `:""}${i.value??"0"}${i.max>0?`/${i.max}`:""}`;return{text:o,title:`${o}${n} ${a}${t?` (${e} ${t})`:""}`}}return{}}#z(e){const t=e?.system?.activities?.contents[0],s=t?.consumption?.targets?.[0],i=s?.target,n=s?.type,a=s?.value;if(!i||!n||i===e.id)return{};if("attribute"===n){const e=i.substr(0,i.lastIndexOf(".")),t=foundry.utils.getProperty(this.actor.system,e);if(t){const e=`${t.value??"0"}${t.max?`/${t.max}`:""}`;return{text:e,title:`${e} ${t.label??""}`}}}else{const e=this.actor.items?.get(i);if(e&&"charges"===n)return this.#x(e,e.name,a);if(e?.system?.quantity){const t=`${a>1?`${a} ${game.i18n.localize("DND5E.of")} `:""}${e.system.quantity}`;return{text:t,title:`${t} ${e.name}`}}}return{}}#s(e){if(g.getSetting("showSlowActions"))return e;const t=new Set(["minute","hour","day"]);return new Map([...e.entries()].filter((([e,s])=>{const i=s.system?.activation?.type;return!t.has(i)})))}#v(e){const t=CONFIG.DND5E.proficiencyLevels[e]??"",s=d[e];return s?`<i class="${s}" title="${t}"></i>`:""}#$(e){const t=CONFIG.DND5E.abilityActivationTypes[e]??"",s=n[e]?.icon;return s?`<i class="${s}" title="${t}"></i>`:""}#U(e){if("spell"!==e?.type||!this.displaySpellInfo||!e.system?.properties?.has("concentration"))return null;return`<dnd5e-icon src="systems/dnd5e/icons/svg/statuses/concentrating.svg" title="${game.i18n.localize("DND5E.Scroll.RequiresConcentration")}">`}#C(e){if("spell"!==e?.type||!this.showUnpreparedSpells)return null;const t=e.system.level,s=e.system.preparation.mode,i=e.system.preparation.prepared,n=i?"fas fa-sun":"fas fa-sun tah-icon-disabled",a="always"===s?game.i18n.localize("DND5E.SpellPrepAlways"):i?game.i18n.localize("DND5E.SpellPrepared"):game.i18n.localize("DND5E.SpellUnprepared");return"prepared"!==s&&"always"!==s||0===t?null:`<i class="${n}" title="${a}"></i>`}async#N(e){if("none"===this.tooltipsSetting)return"";const t=e?.name??"";if("nameOnly"===this.tooltipsSetting)return t;const s=!1===e.system?.identified,i="string"==typeof e?.system?.description?e?.system?.description:(s?e?.system?.unidentified?.description:e?.system?.description?.value)??"";let n,a,l,o;return s||(n=e?.modifiers??null,a=[...e.system?.chatProperties??[],...e.system?.equippableItemCardProperties??[],e.system?.parent?.labels?.activation,e.system?.parent?.labels?.target,e.system?.parent?.labels?.range,e.system?.parent?.labels?.duration].filter((e=>e)),l=s?null:e?.rarity??null,o="weapon"===e?.type?this.#q(e?.system?.properties):null),{name:t,description:i,modifiers:n,properties:a,rarity:l,traits:o}}async#A(e,t){if("none"===this.tooltipsSetting)return"";const s=CONFIG.DND5E.conditionTypes[e];if("nameOnly"===this.tooltipsSetting||!s)return t;const i=s.reference?await fromUuid(s.reference):null;return{name:t,description:i?.text?.content??"",relativeTo:i}}async#k(e){if("none"===this.tooltipsSetting)return"";if("string"==typeof e)return e;const t=game.i18n.localize(e.name);if("nameOnly"===this.tooltipsSetting)return t;const s=`<h3>${t}</h3>`,i=e.relativeTo??this.actor,n=e?.descriptionLocalised??await TextEditor.enrichHTML(game.i18n.localize(e?.description??""),{async:!0,relativeTo:i,secrets:!0}),a=e?.rarity?`<span class="tah-tag ${e.rarity}">${game.i18n.localize(p[e.rarity])}</span>`:"",l=e?.properties?`<div class="tah-properties">${e.properties.map((e=>`<span class="tah-property">${game.i18n.localize(e)}</span>`)).join("")}</div>`:"",o=e?.traits?e.traits.map((e=>`<span class="tah-tag">${game.i18n.localize(e.label??e)}</span>`)).join(""):"",c=e?.traits2?e.traits2.map((e=>`<span class="tah-tag tah-tag-secondary">${game.i18n.localize(e.label??e)}</span>`)).join(""):"",r=e?.traitsAlt?e.traitsAlt.map((e=>`<span class="tah-tag tah-tag-alt">${game.i18n.localize(e.label)}</span>`)).join(""):"",d=e?.modifiers?`<div class="tah-tags">${e.modifiers.filter((e=>e.enabled)).map((e=>`<span class="tah-tag tah-tag-transparent">${game.i18n.localize(e.label)} ${`${e.modifier>=0?"+":""}${e.modifier??""}`}</span>`)).join("")}</div>`:"",u=[a,o,c,r].join(""),m=u?`<div class="tah-tags">${u}</div>`:"";return n||m||d?`<div>${s}${m||d?`<div class="tah-tags-wrapper">${m}${d}</div>`:""}${n}${l}</div>`:t}#q(e){return e?Object.entries(e).filter((([e,t])=>t&&CONFIG.DND5E.validProperties.weapon.has(e))).map((([e,t])=>game.i18n.localize(CONFIG.DND5E.itemProperties[e]))):null}}}));let f=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{f=class MagicItemActionHandlerExtender extends e.api.ActionHandlerExtender{constructor(e){super(),this.actionHandler=e,this.actor=null}async extendActionHandler(){if(this.actor=this.actionHandler.actor,!this.actor)return;const t=await MagicItems.actor(this.actor.id);if(!t)return;const s=t.items??[];if(0===s.length)return;const i={id:"magic-items",type:"system"};s.forEach((t=>{if(t.attuned&&!this._isItemAttuned(t))return;if(t.equipped&&!this._isItemEquipped(t))return;const s={id:`magic-items_${t.id}`,name:t.name,type:"system-derived",info1:`${t.uses}/${t.charges}`};this.actionHandler.addGroup(s,i);const n=t.ownedEntries.map((s=>{const i=s.item,n=i.id;return{id:n,name:i.name,encodedValue:["magicItem",`${t.id}>${n}`].join("|"),img:e.api.Utils.getImage(i),info1:i.consumption,info2:i.baseLevel?`${e.api.Utils.i18n("DND5E.AbbreviationLevel")} ${i.baseLevel}`:"",selected:!0}}));this.actionHandler.addActions(n,s)}))}_isItemEquipped(e){return e.item.system.equipped}_isItemAttuned(e){return e.item.system.attunment!==(CONFIG.DND5E.attunementTypes?.REQUIRED??1)}}}));let v=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{v=class RollHandler extends e.api.RollHandler{async handleActionClick(t,s){const[i,n]=s.split("|");if(this.actor)await this.#P(t,i,this.actor,this.token,n);else for(const s of e.api.Utils.getControlledTokens()){const e=s.actor;await this.#P(t,i,e,s,n)}}async#P(e,t,s,i,n){switch(t){case"ability":this.#_(e,s,n);break;case"check":this.#L(e,s,n);break;case"save":this.#O(e,s,n);break;case"condition":if(!i)return;await this.#F(e,s,i,n);break;case"counter":await this.#R(e,s,n);break;case"effect":await this.#j(e,s,n);break;case"exhaustion":await this.#G(e,s);break;case"feature":case"item":case"spell":case"weapon":this.isRenderItem()?this.renderItem(s,n):this.#V(e,s,n);break;case"magicItem":await this.#B(s,n);break;case"skill":this.#W(e,s,n);break;case"utility":await this.#Y(e,s,i,n)}}async#R(e,t,s){switch(s){case"death-saves":this.#Q(e,t);break;case"exhaustion":await this.#G(e,t);break;case"inspiration":await this.#J(t);break;default:await this.#K(e,t,s)}}async#G(e,t){const s=this.isRightClick(e),i=t.system.attributes.exhaustion,n=s?i-1:i+1;n>=0&&t.update({"system.attributes.exhaustion":n})}async#J(e){const t=!e.system.attributes.inspiration;e.update({"system.attributes.inspiration":t})}async#K(t,s,i){if(!e.api.Utils.isModuleActive("dnd5e-custom-counters"))return;const[n,a]=decodeURIComponent(i).split(">"),l=this.isRightClick(t),o=this.isCtrl(t);let c=s.getFlag("dnd5e-custom-counters",n);switch(a){case"checkbox":await s.setFlag("dnd5e-custom-counters",n,!c);break;case"number":c=c??0,l?c>0&&await s.setFlag("dnd5e-custom-counters",n,c-1):await s.setFlag("dnd5e-custom-counters",n,c+1);break;case"successFailure":c=c??{},c.success=c?.success??0,c.failure=c?.failure??0,l?o?c?.failure>0&&await s.setFlag("dnd5e-custom-counters",`${n}.failure`,c.failure-1):c?.success>0&&await s.setFlag("dnd5e-custom-counters",`${n}.success`,c.success-1):o?await s.setFlag("dnd5e-custom-counters",`${n}.failure`,c.failure+1):await s.setFlag("dnd5e-custom-counters",`${n}.success`,c.success+1)}}#_(e,t,s){t&&t.system?.abilities&&t.rollAbility(s,{event:e})}#O(e,t,s){t&&t.system?.abilities&&t.rollAbilitySave(s,{event:e})}#L(e,t,s){t&&t.system?.abilities&&t.rollAbilityTest(s,{event:e})}#Q(e,t){t.rollDeathSave({event:e})}async#B(e,t){const s=t.split(">"),i=s[0],n=s[1];(await MagicItems.actor(e.id)).roll(i,n),Hooks.callAll("forceUpdateTokenActionHud")}#W(e,t,s){t&&t.system?.skills&&t.rollSkill(s,{event:e})}#V(t,s,i){const n=e.api.Utils.getItem(s,i);if(!this.#X(n))return n.use({event:t,legacy:!1});n.rollRecharge()}#X(e){return"recharge"===e?.system?.uses?.period&&!e?.system?.uses?.value>0}async#Y(e,t,s,i){switch(i){case"deathSave":this.#Q(e,t);break;case"endTurn":if(!s)break;game.combat?.current?.tokenId===s.id&&await(game.combat?.nextTurn());break;case"initiative":await this.#Z(t);break;case"inspiration":await this.#J(t);break;case"longRest":t.longRest();break;case"shortRest":t.shortRest()}Hooks.callAll("forceUpdateTokenActionHud")}async#Z(e){e&&(await e.rollInitiative({createCombatants:!0}),Hooks.callAll("forceUpdateTokenActionHud"))}async#F(e,t,s,i){if(!s)return;const n=this.isRightClick(e),a=CONFIG.statusEffects.find((e=>e.id===i)),l=a?.flags?Object.hasOwn(a.flags,"dfreds-convenient-effects")?a.flags["dfreds-convenient-effects"].isConvenient:null:i.startsWith("Convenient Effect");if(game.dfreds&&l)n?await game.dfreds.effectInterface.toggleEffect(a.name??a.label,{overlay:!0}):await game.dfreds.effectInterface.toggleEffect(a.name??a.label);else{const e=this.#ee(i);if(!e)return;const s=this.#te(t,i);s?.disabled&&await s.delete(),n?await t.toggleStatusEffect(e.id,{overlay:!0}):await t.toggleStatusEffect(e.id)}Hooks.callAll("forceUpdateTokenActionHud")}#ee(e){return CONFIG.statusEffects.find((t=>t.id===e))}#te(e,t){return game.version.startsWith("11")?e.effects.find((e=>e.statuses.every((e=>e===t)))):e.effects.find((e=>e.flags?.core?.statusId===t))}async#j(e,t,s){let i=("find"in t.effects.entries?t.effects.entries:t.effects).find((e=>e.id===s)),n=!0;if(!i){n=!1;for(const e of t.allApplicableEffects())e.id===s&&(i=e)}if(!i)return;this.isRightClick(e)&&n?await i.delete():await i.update({disabled:!i.disabled}),Hooks.callAll("forceUpdateTokenActionHud")}async handleActionHover(t,s){const[i,n]=s.split("|");if(!["feature","item","spell","weapon","magicItem"].includes(i))return;const a=e.api.Utils.getItem(this.actor,n);switch(t.type){case"mouseenter":case"mouseover":Hooks.call("tokenActionHudSystemActionHoverOn",t,a);break;case"mouseleave":case"mouseout":Hooks.call("tokenActionHudSystemActionHoverOff",t,a)}}}}));class RollHandlerObsidian extends v{_rollAbilityTest(e,t){OBSIDIAN.Items.roll(super.actor,{roll:"abl",abl:t})}_rollAbilitySave(e,t){OBSIDIAN.Items.roll(super.actor,{roll:"save",save:t})}_rollSkill(e,t){OBSIDIAN.Items.roll(super.actor,{roll:"skl",skl:t})}_useItem(e,t){OBSIDIAN.Items.roll(super.actor,{roll:"item",id:t})}}function register(t){game.settings.register(e.ID,"abbreviateSkills",{name:game.i18n.localize("tokenActionHud.dnd5e.settings.abbreviateSkills.name"),hint:game.i18n.localize("tokenActionHud.dnd5e.settings.abbreviateSkills.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:e=>{t(e)}}),game.settings.register(e.ID,"showSlowActions",{name:game.i18n.localize("tokenActionHud.dnd5e.settings.showSlowActions.name"),hint:game.i18n.localize("tokenActionHud.dnd5e.settings.showSlowActions.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{t(e)}}),game.settings.register(e.ID,"displaySpellInfo",{name:game.i18n.localize("tokenActionHud.dnd5e.settings.displaySpellInfo.name"),hint:game.i18n.localize("tokenActionHud.dnd5e.settings.displaySpellInfo.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{t(e)}}),game.settings.register(e.ID,"showUnchargedItems",{name:game.i18n.localize("tokenActionHud.dnd5e.settings.showUnchargedItems.name"),hint:game.i18n.localize("tokenActionHud.dnd5e.settings.showUnchargedItems.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:e=>{t(e)}}),game.settings.register(e.ID,"showUnequippedItems",{name:game.i18n.localize("tokenActionHud.dnd5e.settings.showUnequippedItems.name"),hint:game.i18n.localize("tokenActionHud.dnd5e.settings.showUnequippedItems.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:e=>{t(e)}}),game.settings.register(e.ID,"showUnequippedItemsNpcs",{name:game.i18n.localize("tokenActionHud.dnd5e.settings.showUnequippedItemsNpcs.name"),hint:game.i18n.localize("tokenActionHud.dnd5e.settings.showUnequippedItemsNpcs.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{t(e)}}),game.settings.register(e.ID,"showUnpreparedSpells",{name:game.i18n.localize("tokenActionHud.dnd5e.settings.showUnpreparedSpells.name"),hint:game.i18n.localize("tokenActionHud.dnd5e.settings.showUnpreparedSpells.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:e=>{t(e)}}),game.settings.register(e.ID,"showItemsWithoutActivationCosts",{name:game.i18n.localize("tokenActionHud.dnd5e.settings.showItemsWithoutActivationCosts.name"),hint:game.i18n.localize("tokenActionHud.dnd5e.settings.showItemsWithoutActivationCosts.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:e=>{t(e)}})}let b=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{b=class SystemManager extends e.api.SystemManager{getActionHandler(){const t=new y;return(e.api.Utils.isModuleActive("magic-items-2")||e.api.Utils.isModuleActive("magicitems"))&&t.addActionHandlerExtender(new f(t)),t}getAvailableRollHandlers(){let t="Core D&D5e";e.api.Utils.isModuleActive("midi-qol")&&(t+=` [supports ${e.api.Utils.getModuleTitle("midi-qol")}]`);const s={core:t};return e.api.SystemManager.addHandler(s,"obsidian"),s}getRollHandler(e){let t;if("obsidian"===e)t=new RollHandlerObsidian;else t=new v;return t}registerSettings(e){register(e)}async registerDefaults(){const t=h;if(game.modules.get("magicitems")?.active||game.modules.get("magic-items-2")?.active){const s=e.api.Utils.i18n("tokenActionHud.dnd5e.magicItems");t.groups.push({id:"magic-items",name:s,listName:`Group: ${s}`,type:"system"}),t.groups.sort(((e,t)=>e.id.localeCompare(t.id)))}return t}}})),Hooks.on("tokenActionHudCoreApiReady",(async()=>{const t=game.modules.get(e.ID);t.api={requiredCoreModuleVersion:"1.5",SystemManager:b},Hooks.call("tokenActionHudSystemReady",t)}));export{i as ACTION_TYPE,n as ACTIVATION_TYPE,y as ActionHandler,a as CONCENTRATION_ICON,t as CORE_MODULE,l as CUSTOM_DND5E,h as DEFAULTS,o as FEATURE_GROUP_IDS,c as GROUP,e as MODULE,f as MagicItemActionHandlerExtender,r as PREPARED_ICON,d as PROFICIENCY_LEVEL_ICON,p as RARITY,s as REQUIRED_CORE_MODULE_VERSION,u as RITUAL_ICON,v as RollHandler,RollHandlerObsidian,m as SPELL_GROUP_IDS,b as SystemManager,g as Utils,register};
//# sourceMappingURL=token-action-hud-dnd5e.min.js.map
